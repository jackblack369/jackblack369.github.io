<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Clean &amp; Focus</title>
  
  
  <link href="https://www.willshirley.top/atom.xml" rel="self"/>
  
  <link href="https://www.willshirley.top/"/>
  <updated>2025-07-02T08:16:37.223Z</updated>
  <id>https://www.willshirley.top/</id>
  
  <author>
    <name>brook</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>s3-benchmark</title>
    <link href="https://www.willshirley.top/2025/07/01/s3-benchmark/"/>
    <id>https://www.willshirley.top/2025/07/01/s3-benchmark/</id>
    <published>2025-07-01T08:34:52.000Z</published>
    <updated>2025-07-02T08:16:37.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="warp"><a href="#warp" class="headerlink" title="warp"></a>warp</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">warp mixed --host=&lt;ip&gt;:&lt;port&gt; --access-key=&lt;ak&gt; --secret-key=&lt;sk&gt; --autoterm --tls --insecure --bucket &lt;bucketName&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> e.g.</span></span><br><span class="line">warp mixed --host=10.220.32.17:30369 --access-key=&lt;ak&gt; --secret-key=&lt;sk&gt; --autoterm --tls --insecure --bucket dongwei-data</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> put</span></span><br><span class="line">warp put --host=10.220.32.17:30369 --access-key=&lt;ak&gt; --secret-key=&lt;ak&gt; --autoterm --tls --insecure --bucket benchmark-data --obj.size=4M --concurrent=32</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> analyze</span></span><br><span class="line">warp analyze --analyze.v  --analyze.out=1.csv &#x27;warp-mixed-2025-07-01[220228]-u7Ii.json.zst&#x27;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;warp&quot;&gt;&lt;a href=&quot;#warp&quot; class=&quot;headerlink&quot; title=&quot;warp&quot;&gt;&lt;/a&gt;warp&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    <category term="s3" scheme="https://www.willshirley.top/categories/s3/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>noobaa</title>
    <link href="https://www.willshirley.top/2025/06/26/noobaa/"/>
    <id>https://www.willshirley.top/2025/06/26/noobaa/</id>
    <published>2025-06-26T03:12:48.000Z</published>
    <updated>2025-07-04T02:28:13.207Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Terminology"><a href="#Terminology" class="headerlink" title="Terminology"></a>Terminology</h1><p><strong>NSFS</strong></p><p>NSFS (short for Namespace-Filesystem) is a capability to use a shared filesystem (mounted in the endpoints) for the storage of S3 buckets, while keeping a 1-1 mapping between Object and File.</p><p>reference </p><p><a href="https://github.com/noobaa/noobaa-core/wiki/NSFS-on-Kubernetes">NSFS on Kubernetes</a></p><ul><li>FS backend supported types are <code>GPFS</code>, <code>CEPH_FS</code>, <code>NFSv4</code> default is <code>POSIX</code></li></ul><h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">make noobaa  # include: 1 make build, 2 make base, 3 make noobaa</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> include below operate</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1. make noobaa-builder image</span> </span><br><span class="line">docker build   --build-arg CENTOS_VER=9 --build-arg BUILD_S3SELECT=1 --build-arg BUILD_S3SELECT_PARQUET=0 -f src/deploy/NVA_build/builder.Dockerfile   -t noobaa-builder .</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. make noobaa-base image</span></span><br><span class="line">docker build   --build-arg BUILD_S3SELECT=1 --build-arg BUILD_S3SELECT_PARQUET=0 -f src/deploy/NVA_build/Base.Dockerfile   -t noobaa-base .</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. make noobaa-core image</span></span><br><span class="line">docker build   --build-arg CENTOS_VER=9 --build-arg BUILD_S3SELECT=1 --build-arg BUILD_S3SELECT_PARQUET=0 -f src/deploy/NVA_build/NooBaa.Dockerfile   -t noobaa --build-arg GIT_COMMIT=&quot;d6feb0a&quot; .</span><br></pre></td></tr></table></figure><ul><li><p>如果修改代码需要执行 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">make base  # 制作 noobaa-base:dingofs</span><br><span class="line">make noobaa # 制作 noobaa-core:dingofs-v1.0</span><br><span class="line">docker tag noobaa-core:dingofs-v1.0 harbor.zetyun.cn/dingofs/noobaa-core:dingofs-v1.0.x</span><br><span class="line">docker push harbor.zetyun.cn/dingofs/noobaa-core:dingofs-v1.0.x</span><br></pre></td></tr></table></figure></li></ul><p><strong>quay archifact</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull quay.io/noobaa/noobaa-builder:master-20250623</span><br><span class="line">docker pull quay.io/noobaa/noobaa-base:master-20250623</span><br></pre></td></tr></table></figure><h2 id="workflow"><a href="#workflow" class="headerlink" title="workflow"></a>workflow</h2><ul><li><p>build image</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.github/workflows/manual-full-build.yaml</span><br></pre></td></tr></table></figure></li></ul><h1 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -LO https://github.com/noobaa/noobaa-operator/releases/download/v5.18.4/noobaa-operator-v5.18.4-linux-amd64.tar.gz</span><br><span class="line">tar -xzvf noobaa-operator-v5.18.4-linux-amd64.tar.gz</span><br><span class="line">chmod +x noobaa-$OS-$VERSION</span><br><span class="line">mv noobaa-$OS-$VERSION /usr/local/bin/noobaa</span><br></pre></td></tr></table></figure><h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2><ul><li><p>default sc</p><p><strong>default-sc-dingofs-noobaa.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">default-sc-dingofs-noobaa</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">storageclass.kubernetes.io/is-default-class:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">csi.dingofs.com</span></span><br><span class="line"><span class="attr">allowVolumeExpansion:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">reclaimPolicy:</span> <span class="string">Retain</span> </span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/provisioner-secret-name:</span> <span class="string">dingofs-secret-noobaa</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/provisioner-secret-namespace:</span> <span class="string">dingofs</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/node-publish-secret-name:</span> <span class="string">dingofs-secret-noobaa</span></span><br><span class="line">  <span class="attr">csi.storage.k8s.io/node-publish-secret-namespace:</span> <span class="string">dingofs</span></span><br><span class="line">  <span class="attr">pathPattern:</span> <span class="string">&quot;$&#123;.pvc.namespace&#125;-$&#123;.pvc.name&#125;&quot;</span></span><br><span class="line"><span class="attr">mountOptions:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">diskCache.diskCacheType=2</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">block_cache.cache_store=disk</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">disk_cache.cache_dir=/dingofs/client/data/cache/0:10240</span>  <span class="comment"># &quot;/data1:100;/data2:200&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">disk_cache.cache_size_mb=102400</span>   <span class="comment"># MB</span></span><br></pre></td></tr></table></figure></li><li><p>prepare</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ctr -n k8s.io images pull dockerproxy.zetyun.cn/docker.io/noobaa/noobaa-core:master-20250623</span><br><span class="line">sudo ctr -n k8s.io images pull dockerproxy.zetyun.cn/docker.io/noobaa/noobaa-operator:5.18.4</span><br><span class="line">sudo ctr -n k8s.io images pull quay.io/sclorg/postgresql-15-c9s:latest</span><br></pre></td></tr></table></figure></li><li><p>install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kubectl create ns noobaa</span><br><span class="line">kubectl config set-context --current --namespace noobaa</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> use internal postgres</span></span><br><span class="line">noobaa install --noobaa-image=dockerproxy.zetyun.cn/docker.io/noobaa/noobaa-core:master-20250623 --operator-image=dockerproxy.zetyun.cn/docker.io/noobaa/noobaa-operator:5.18.4 --db-image=quay.io/sclorg/postgresql-15-c9s:latest --namespace=noobaa</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> use external postgres</span> </span><br><span class="line">noobaa install --noobaa-image=dockerproxy.zetyun.cn/docker.io/noobaa/noobaa-core:master-20250623 --operator-image=dockerproxy.zetyun.cn/docker.io/noobaa/noobaa-operator:5.18.4 --postgres-url=&quot;postgres://postgres:noobaa123@10.220.32.18:5432/nbcore&quot; --namespace=noobaa</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> use dingofs image</span></span><br><span class="line">noobaa install --noobaa-image harbor.zetyun.cn/dingofs/noobaa-core:dingofs-v1.0 --operator-image dockerproxy.zetyun.cn/docker.io/noobaa/noobaa-operator:5.18.4 --namespace=noobaa --debug-level all </span><br></pre></td></tr></table></figure></li><li><p>status</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">noobaa status --show-secrets</span><br></pre></td></tr></table></figure></li><li><p>uninstall</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">noobaa uninstall --cleanup</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> clean expired data</span></span><br><span class="line">kubectl exec -it &lt;noobaaFS-debug-pod&gt; -n dingofs -- bash</span><br><span class="line">cd /dfs/noobaa-debug-pv-xxx</span><br><span class="line">rm -rf noobaa-db-noobaa-db-pg-0</span><br><span class="line">rm -rf noobaa-noobaa-default-backing-store-noobaa-pvc-xxx</span><br></pre></td></tr></table></figure></li><li><p>upgrade</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">noobaa upgrade --noobaa-image &lt;noobaa-image-path-and-tag&gt; --operator-image &lt;operator-image-path-and-tag&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> image update</span></span><br><span class="line">sudo ctr -n k8s.io images pull harbor.zetyun.cn/dingofs/noobaa-core:dingofs-v1.0.3</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> e.g.</span></span><br><span class="line">noobaa upgrade --noobaa-image harbor.zetyun.cn/dingofs/noobaa-core:dingofs-v1.0.3 --operator-image dockerproxy.zetyun.cn/docker.io/noobaa/noobaa-operator:5.18.4 --debug-level all </span><br></pre></td></tr></table></figure></li></ul><h2 id="pod"><a href="#pod" class="headerlink" title="pod"></a>pod</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">noobaa-core-0                                      2/2     Running   0          2m5s</span><br><span class="line">noobaa-db-pg-0                                     1/1     Running   0          2m6s</span><br><span class="line">noobaa-default-backing-store-noobaa-pod-cb1747eb   1/1     Running   0          19s</span><br><span class="line">noobaa-endpoint-79677c7dd9-cjqdj                   1/1     Running   0          42s</span><br><span class="line">noobaa-operator-7d969db69c-gmlm4                   1/1     Running   0          2m28s</span><br></pre></td></tr></table></figure><h3 id="endpoint"><a href="#endpoint" class="headerlink" title="endpoint"></a>endpoint</h3><p><strong>boostrap</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /noobaa_init_files/noobaa_init.sh init_endpoint</span></span><br><span class="line">init_endpoint() &#123;</span><br><span class="line">  fix_non_root_user</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> nsfs folder is a root folder of mount points to backing storages.</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> In oder to avoid access denied of sub folders, configure nsfs with full permisions (777)</span></span><br><span class="line">  if [ -d &quot;/nsfs&quot; ];then</span><br><span class="line">    chmod 777 /nsfs</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">  cd /root/node_modules/noobaa-core/</span><br><span class="line">  run_internal_process node --unhandled-rejections=warn ./src/s3/s3rver_starter.js</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">run_internal_process() &#123;</span><br><span class="line">  while true</span><br><span class="line">  do</span><br><span class="line">    local package_path=&quot;/root/node_modules/noobaa-core/package.json&quot;</span><br><span class="line">    local version=$(cat $&#123;package_path&#125; | grep version | awk &#x27;&#123;print $2&#125;&#x27; | sed &#x27;s/[&quot;,]//g&#x27;)</span><br><span class="line">    echo &quot;Version is: $&#123;version&#125;&quot;</span><br><span class="line">    echo &quot;Running: $*&quot;</span><br><span class="line">    $*</span><br><span class="line">    rc=$?</span><br><span class="line">    echo -e &quot;\n\n\n&quot;</span><br><span class="line">    echo &quot;######################################################################&quot;</span><br><span class="line">    echo &quot;$(date) NooBaa: Process exited RIP (RC=$rc)&quot;</span><br><span class="line">    echo &quot;######################################################################&quot;</span><br><span class="line">    echo -e &quot;\n\n\n&quot;</span><br><span class="line"></span><br><span class="line">    mode=&quot;manual&quot; # initial value just to start the loop</span><br><span class="line">    while [ &quot;$mode&quot; == &quot;manual&quot; ]</span><br><span class="line">    do</span><br><span class="line">      # load mode from file/env</span><br><span class="line">      if [ -f &quot;./NOOBAA_INIT_MODE&quot; ]</span><br><span class="line">      then</span><br><span class="line">        mode=&quot;$(cat ./NOOBAA_INIT_MODE)&quot;</span><br><span class="line">      else</span><br><span class="line">        mode=&quot;$NOOBAA_INIT_MODE&quot;</span><br><span class="line">      fi</span><br><span class="line"></span><br><span class="line">      if [ &quot;$mode&quot; == &quot;auto&quot; ]</span><br><span class="line">      then</span><br><span class="line">        echo &quot;######################################################################&quot;</span><br><span class="line">        echo &quot;$(date) NooBaa: Restarting process (NOOBAA_INIT_MODE=auto)&quot;</span><br><span class="line">        echo &quot;######################################################################&quot;</span><br><span class="line">        echo -e &quot;\n\n\n&quot;</span><br><span class="line">        # will break from the inner loop and re-run the process</span><br><span class="line">      elif [ &quot;$mode&quot; == &quot;manual&quot; ]</span><br><span class="line">      then</span><br><span class="line">        echo &quot;######################################################################&quot;</span><br><span class="line">        echo &quot;$(date) NooBaa: Waiting for manual intervention (NOOBAA_INIT_MODE=manual)&quot;</span><br><span class="line">        echo &quot;######################################################################&quot;</span><br><span class="line">        echo -e &quot;\n&quot;</span><br><span class="line">        sleep 10</span><br><span class="line">        # will re-enter the inner loop and reload the mode</span><br><span class="line">      else</span><br><span class="line">        [ ! -z &quot;$mode&quot; ] &amp;&amp; echo &quot;NooBaa: unrecognized NOOBAA_INIT_MODE = $mode&quot;</span><br><span class="line">        return $rc</span><br><span class="line">      fi</span><br><span class="line">    done</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>noobaa-db-pg-0</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> volume</span></span><br><span class="line">/var/lib/pgsql from db (rw)</span><br><span class="line">db:</span><br><span class="line">  Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)</span><br><span class="line">  ClaimName:  db-noobaa-db-pg-0</span><br><span class="line">  ReadOnly:   false</span><br></pre></td></tr></table></figure><h2 id="serivice"><a href="#serivice" class="headerlink" title="serivice"></a>serivice</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NAME            TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)                                                    AGE</span><br><span class="line">noobaa-db-pg    ClusterIP      None            &lt;none&gt;        5432/TCP                                                   2m15s</span><br><span class="line">noobaa-mgmt     ClusterIP      10.97.139.113   &lt;none&gt;        80/TCP,443/TCP,8445/TCP,8446/TCP                           2m14s</span><br><span class="line">noobaa-syslog   ClusterIP      10.102.80.226   &lt;none&gt;        514/UDP                                                    2m11s</span><br><span class="line">s3              LoadBalancer   10.110.97.124   &lt;pending&gt;     80:32292/TCP,443:32034/TCP,8444:31155/TCP,7004:30222/TCP   2m14s</span><br><span class="line">sts             LoadBalancer   10.103.219.22   &lt;pending&gt;     443:30126/TCP                                              2m13s</span><br></pre></td></tr></table></figure><h2 id="volume"><a href="#volume" class="headerlink" title="volume"></a>volume</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">noobaa-db-noobaa-db-pg-0</span><br><span class="line">noobaa-noobaa-default-backing-store-noobaa-pvc-07c805ab</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mountpod</span> </span><br><span class="line">dingofs-ubuntu2-pvc-ef31f21c-5677-4f83-94ad-face89b741c3-lhenuc</span><br><span class="line">dingofs-ubuntu3-pvc-10fd093a-0d75-45ee-b52d-84f712378e09-jbxeue</span><br></pre></td></tr></table></figure><h2 id="systemc-info"><a href="#systemc-info" class="headerlink" title="systemc info"></a>systemc info</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">NOOBAA_SECRET=$(kubectl get noobaa noobaa -n noobaa -o json | jq -r &#x27;.status.accounts.admin.secretRef.name&#x27; )</span><br><span class="line">noobaa-admin</span><br><span class="line"></span><br><span class="line">NOOBAA_MGMT=$(kubectl get noobaa noobaa -n noobaa -o json | jq -r &#x27;.status.services.serviceMgmt.nodePorts[0]&#x27; )</span><br><span class="line">https://10.xx.xx.18:0</span><br><span class="line"></span><br><span class="line">NOOBAA_S3=$(kubectl get noobaa noobaa -n noobaa -o json | jq -r &#x27;.status.services.serviceS3.nodePorts[0]&#x27; )</span><br><span class="line">https://10.xx.xx.18:30478   # entrypoint</span><br><span class="line"></span><br><span class="line">NOOBAA_ACCESS_KEY=$(kubectl get secret noobaa-admin -n noobaa -o json | jq -r &#x27;.data.AWS_ACCESS_KEY_ID|@base64d&#x27;)</span><br><span class="line">3gR59xxxxxHBbOdOx</span><br><span class="line"></span><br><span class="line">NOOBAA_SECRET_KEY=$(kubectl get secret noobaa-admin -n noobaa -o json | jq -r &#x27;.data.AWS_SECRET_ACCESS_KEY|@base64d&#x27;)</span><br><span class="line">zu229xxxxxxxxxxxxxxxxxxxxxxxxcfX</span><br></pre></td></tr></table></figure><h2 id="Mgmt-UI"><a href="#Mgmt-UI" class="headerlink" title="Mgmt UI"></a>Mgmt UI</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secret noobaa-admin -n noobaa -o json | jq &#x27;.data|map_values(@base64d)&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">print</span></span> </span><br><span class="line">&#123;</span><br><span class="line">  &quot;AWS_ACCESS_KEY_ID&quot;: &quot;3gR59eoLoBvhjHBbOdOx&quot;,</span><br><span class="line">  &quot;AWS_SECRET_ACCESS_KEY&quot;: &quot;zu229aAJIo6g9GOsjKTyUc6p3Rc0c/nHGdjI3cfX&quot;,</span><br><span class="line">  &quot;email&quot;: &quot;admin@noobaa.io&quot;,</span><br><span class="line">  &quot;password&quot;: &quot;7JfrgTXgnJjU4ywSFWYr+Q==&quot;,</span><br><span class="line">  &quot;system&quot;: &quot;noobaa&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">open $NOOBAA_MGMT</span><br></pre></td></tr></table></figure><h2 id="aws-cli"><a href="#aws-cli" class="headerlink" title="aws-cli"></a>aws-cli</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alias s3=&#x27;AWS_ACCESS_KEY_ID=3gR5xxxxxxxxOx AWS_SECRET_ACCESS_KEY=zu229aAJxxxxxxxxxxxxxxxxxcfX aws --endpoint https://10.xxx.xx.18:30478 --no-verify-ssl s3&#x27;</span><br><span class="line">s3 ls</span><br><span class="line">s3 sync /var/log/ s3://first.bucket</span><br><span class="line">s3 ls s3://first.bucket</span><br></pre></td></tr></table></figure><h1 id="NSFS"><a href="#NSFS" class="headerlink" title="NSFS"></a>NSFS</h1><h2 id="1-create-NSFS-resource"><a href="#1-create-NSFS-resource" class="headerlink" title="1. create NSFS resource"></a>1. create NSFS resource</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">noobaa namespacestore create nsfs dingofs --pvc-name=&#x27;noobaa-nsfs-pvc&#x27;</span><br></pre></td></tr></table></figure><p><strong>nsfs-dingofs-pvc.yaml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nsfs-dingofs-pvc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">noobaa</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">100Gi</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">dingofs-sc-s3</span></span><br></pre></td></tr></table></figure><p><strong>delete</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">noobaa namespacestore delete dingofs-nsfs</span><br></pre></td></tr></table></figure><h2 id="2-create-bucket-optional"><a href="#2-create-bucket-optional" class="headerlink" title="2. create bucket (optional)"></a>2. create bucket (optional)</h2><blockquote><p>该步骤主要用于设置文件系统已有的目录为 bucket ，如果已使用 s3-user-dingofs mb s3://dingofs-bucket-1 在文件系统中创建目录，则无需执行此步骤（否则会提示bucket已存在）。后续直接使用  s3-user-dingofs 进行 bucket 的操作即可</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 映射文件系统的目录 dingofs-bucket-1 为 bucket</span></span><br><span class="line">noobaa api bucket_api create_bucket &#x27;&#123;</span><br><span class="line">  &quot;name&quot;: &quot;dingofs-bucket-1&quot;,</span><br><span class="line">  &quot;namespace&quot;:&#123;</span><br><span class="line">    &quot;write_resource&quot;: &#123; &quot;resource&quot;: &quot;dingofs&quot;, &quot;path&quot;: &quot;dingofs-bucket-1/&quot; &#125;,</span><br><span class="line">    &quot;read_resources&quot;: [ &#123; &quot;resource&quot;: &quot;dingofs&quot;, &quot;path&quot;: &quot;dingofs-bucket-1/&quot; &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure><p><strong>status</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">noobaa bucket status &lt;bucketName&gt;</span><br></pre></td></tr></table></figure><p><strong>list bucket</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">noobaa api bucket_api list_buckets &#x27;&#123;&#125;&#x27;</span><br><span class="line">or </span><br><span class="line">noobaa bucket list</span><br></pre></td></tr></table></figure><p><strong>get_bucket_policy</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">noobaa api bucket_api get_bucket_policy &#x27;&#123;&quot;name&quot;: &quot;&lt;bucketName&gt;&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure><p><strong>delete bucket</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">noobaa api bucket_api delete_bucket &#x27;&#123;&quot;name&quot;: &quot;&lt;bucketName&gt;&quot;&#125;&#x27;</span><br><span class="line">or </span><br><span class="line">noobaa bucket delete &lt;bucketName&gt;</span><br></pre></td></tr></table></figure><h3 id="add-bucket-policy"><a href="#add-bucket-policy" class="headerlink" title="add bucket policy"></a>add bucket policy</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置bucket访问策略只能使用 admin 账号</span></span><br><span class="line">AWS_ACCESS_KEY_ID=3gR59eoxxxxBbOdOx AWS_SECRET_ACCESS_KEY=zu229aAJIxxxxxxxxxxxdjI3cfX aws --endpoint-url=https://10.220.32.18:30478 --no-verify-ssl s3api put-bucket-policy --bucket dingofs-bucket-1 --policy file://policy.json</span><br></pre></td></tr></table></figure><p><strong>policy.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;Version&quot;</span>:<span class="string">&quot;2025-06-25&quot;</span>,</span><br><span class="line"><span class="attr">&quot;Statement&quot;</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="attr">&quot;Sid&quot;</span>:<span class="string">&quot;id-1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;Effect&quot;</span>:<span class="string">&quot;Allow&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;Principal&quot;</span>:<span class="string">&quot;*&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;Action&quot;</span>:[<span class="string">&quot;s3:*&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;Resource&quot;</span>:[<span class="string">&quot;arn:aws:s3:::*&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>Sid</code> (Statement ID) serves as an optional identifier for individual policy statements, allowing for easier management and referencing of specific rules within a larger policy. It’s a way to give a unique name to each permission set within the bucket policy, which can be helpful when dealing with multiple statements or when debugging policy issues</p></blockquote><h2 id="3-create-account"><a href="#3-create-account" class="headerlink" title="3. create account"></a>3. create account</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">noobaa api account_api create_account &#x27;&#123;</span><br><span class="line">    &quot;email&quot;: &quot;dingofs@zetyun.com&quot;,</span><br><span class="line">    &quot;name&quot;: &quot;dingofs&quot;,</span><br><span class="line">    &quot;has_login&quot;: false,</span><br><span class="line">    &quot;s3_access&quot;: true,</span><br><span class="line">    &quot;default_resource&quot;: &quot;dingofs&quot;,</span><br><span class="line">    &quot;nsfs_account_config&quot;: &#123;</span><br><span class="line">      &quot;uid&quot;: 0,</span><br><span class="line">      &quot;gid&quot;: 0,</span><br><span class="line">      &quot;new_buckets_path&quot;: &quot;/&quot;,</span><br><span class="line">      &quot;nsfs_only&quot;: false</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;&#x27;</span><br><span class="line"><span class="meta">  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">print</span></span> </span><br><span class="line">access_keys:</span><br><span class="line">access_key: UanhXoxxxxxIggJP</span><br><span class="line">secret_key: ptsSJUYxxxxxxxx2SF8ltV</span><br><span class="line">token: eyJhbGcixxxxxxxxxxxxxxxxxxxxxxxxxxxxxqGdB-E2zQF-3MBII</span><br></pre></td></tr></table></figure><ul><li>check account<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">noobaa api account_api list_accounts &#123;&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> check specify accout</span></span><br><span class="line">noobaa api account_api read_account &#x27;&#123;&quot;email&quot;:&quot;jenia@noobaa.io&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-config-s3-client"><a href="#4-config-s3-client" class="headerlink" title="4. config s3 client"></a>4. config s3 client</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias s3-user-dingofs=&#x27;AWS_ACCESS_KEY_ID=UanhxxxxxxggJP AWS_SECRET_ACCESS_KEY=ptsSJUYVCxxxxxxxxxxxSF8ltV aws --endpoint https://10.220.32.18:30478  --no-verify-ssl s3&#x27;</span><br></pre></td></tr></table></figure><h2 id="5-operate"><a href="#5-operate" class="headerlink" title="5. operate"></a>5. operate</h2><p><strong>aws s3</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> create bucket</span></span><br><span class="line">s3-user-dingofs mb s3://&lt;bucketName&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> copy object</span> </span><br><span class="line">s3-user-dingofs cp &lt;file&gt; s3://&lt;bucketName&gt;/</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> list object</span> </span><br><span class="line">s3-user-dingofs ls s3://&lt;bucketName&gt;/</span><br></pre></td></tr></table></figure><p><strong>mc</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mc alias set &lt;aliasName&gt; &lt;entrypoint&gt; &lt;ak&gt; &lt;sk&gt; --insecure</span><br><span class="line">mc ls &lt;aliasName&gt; --insecure</span><br></pre></td></tr></table></figure><h1 id="Best-Practices"><a href="#Best-Practices" class="headerlink" title="Best Practices"></a>Best Practices</h1><h2 id="External-Postgresql-DB-TBD"><a href="#External-Postgresql-DB-TBD" class="headerlink" title="External Postgresql DB (TBD)"></a>External Postgresql DB (TBD)</h2><ul><li><p>binary install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br><span class="line">sudo dnf -qy module disable postgresql</span><br><span class="line">sudo dnf install -y postgresql17-server</span><br><span class="line">sudo /usr/pgsql-17/bin/postgresql-17-setup initdb</span><br><span class="line">sudo systemctl enable postgresql-17</span><br><span class="line">sudo systemctl start postgresql-17</span><br></pre></td></tr></table></figure></li><li><p>docker install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 17 version</span></span><br><span class="line">docker run --name noobaa-postgres \</span><br><span class="line">  -e POSTGRES_PASSWORD=&lt;&gt; \</span><br><span class="line">  --restart always \</span><br><span class="line">  --network host \</span><br><span class="line">  -d dockerproxy.zetyun.cn/docker.io/postgres:latest</span><br><span class="line"><span class="meta">  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 15 version</span></span><br><span class="line">docker run --name noobaa-postgres \</span><br><span class="line">  -e POSTGRESQL_ADMIN_PASSWORD=&lt;&gt; \</span><br><span class="line">  --restart always \</span><br><span class="line">  --network host \</span><br><span class="line">  -d quay.io/sclorg/postgresql-15-c9s:latest</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> enter psql</span></span><br><span class="line">psql -U postgres</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> create nbcore database</span></span><br><span class="line">CREATE DATABASE nbcore WITH LC_COLLATE = &#x27;C&#x27; TEMPLATE template0;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check</span> </span><br><span class="line">\list</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> db url</span> </span><br><span class="line">postgres://postgres:&lt;mysecretpassword&gt;@&lt;ip&gt;:5432/nbcore&quot;</span><br></pre></td></tr></table></figure><blockquote><p>use postgres 15, should config </p><p>variables:                                                               </p><p>POSTGRESQL_USER POSTGRESQL_PASSWORD POSTGRESQL_DATABASE     </p><p>Or the following environment variable:                                                 </p><p>POSTGRESQL_ADMIN_PASSWORD                                                       </p><p>Or both.  </p></blockquote></li></ul><h1 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h1><h2 id="entrypoint的loadbalance"><a href="#entrypoint的loadbalance" class="headerlink" title="entrypoint的loadbalance"></a>entrypoint的loadbalance</h2><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><h2 id="验证-install-时候使用-–db-storage-class-和-–pv-pool-default-storage-class-指定默认sc"><a href="#验证-install-时候使用-–db-storage-class-和-–pv-pool-default-storage-class-指定默认sc" class="headerlink" title="验证 install 时候使用 –db-storage-class 和 –pv-pool-default-storage-class 指定默认sc"></a>验证 install 时候使用 –db-storage-class 和 –pv-pool-default-storage-class 指定默认sc</h2><blockquote><p>不设置 storageclass.kubernetes.io/is-default-class: “true” 的 default sc</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Terminology&quot;&gt;&lt;a href=&quot;#Terminology&quot; class=&quot;headerlink&quot; title=&quot;Terminology&quot;&gt;&lt;/a&gt;Terminology&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;NSFS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;NSFS </summary>
      
    
    
    
    <category term="noobaa" scheme="https://www.willshirley.top/categories/noobaa/"/>
    
    
    <category term="s3" scheme="https://www.willshirley.top/tags/s3/"/>
    
  </entry>
  
  <entry>
    <title>java backend</title>
    <link href="https://www.willshirley.top/2025/06/24/aws%20cli/"/>
    <id>https://www.willshirley.top/2025/06/24/aws%20cli/</id>
    <published>2025-06-24T03:28:21.000Z</published>
    <updated>2025-06-24T03:28:39.872Z</updated>
    
    <content type="html"><![CDATA[<h1 id="install"><a href="#install" class="headerlink" title="install"></a>install</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl &quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot; -o &quot;awscliv2.zip&quot;</span><br><span class="line">unzip awscliv2.zip</span><br><span class="line">sudo ./aws/install</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;install&quot;&gt;&lt;a href=&quot;#install&quot; class=&quot;headerlink&quot; title=&quot;install&quot;&gt;&lt;/a&gt;install&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="aws cli" scheme="https://www.willshirley.top/categories/aws-cli/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>cmake learn</title>
    <link href="https://www.willshirley.top/2025/06/17/cmake%20learn/"/>
    <id>https://www.willshirley.top/2025/06/17/cmake%20learn/</id>
    <published>2025-06-17T07:09:24.000Z</published>
    <updated>2025-06-18T11:23:26.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="default"><a href="#default" class="headerlink" title="default"></a>default</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CMAKE_CURRENT_SOURCE_DIR</span><br><span class="line">PROJECT_SOURCE_DIR</span><br></pre></td></tr></table></figure><p>**CMAKE_CURRENT_SOURCE_DIR **</p><p>The path to the source directory currently being processed.</p><p>This is the full path to the source directory that is currently being processed by cmake.</p><p><strong>PROJECT_SOURCE_DIR</strong></p><p>This is the source directory of the last call to the project() command made in the current directory scope or one of its parents. Note, it is not affected by calls to project() made within a child directory scope (i.e. from within a call to add_subdirectory()  from the current scope).</p><ul><li>When run in <a href="https://cmake.org/cmake/help/v3.31/manual/cmake.1.html#cmdoption-cmake-P"><code>cmake -P</code></a> script mode, CMake sets the variables <code>CMAKE_BINARY_DIR</code>, <code>CMAKE_SOURCE_DIR</code>, <code>CMAKE_CURRENT_BINARY_DIR</code> and <code>CMAKE_CURRENT_SOURCE_DIR</code> to the current working directory.</li></ul><h1 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h1><p><strong><code>PUBLIC</code></strong></p><p>Populates both properties for <a href="https://cmake.org/cmake/help/v3.31/manual/cmake-buildsystem.7.html#target-build-specification">building</a> and properties for <a href="https://cmake.org/cmake/help/v3.31/manual/cmake-buildsystem.7.html#target-usage-requirements">using</a> a target.</p><p><strong><code>PRIVATE</code></strong></p><p>Populates only properties for <a href="https://cmake.org/cmake/help/v3.31/manual/cmake-buildsystem.7.html#target-build-specification">building</a> a target.</p><p><strong><code>INTERFACE</code></strong></p><p>Populates only properties for <a href="https://cmake.org/cmake/help/v3.31/manual/cmake-buildsystem.7.html#target-usage-requirements">using</a> a target.</p><ul><li>Remember <code>INTERFACE</code> means things that consumers require but the producer doesn’t.</li></ul><h1 id="syntax"><a href="#syntax" class="headerlink" title="syntax"></a>syntax</h1><h2 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>()</span><br><span class="line"><span class="keyword">cmake_minimum_required</span>()</span><br><span class="line"><span class="keyword">project</span>()</span><br></pre></td></tr></table></figure><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">project</span>(Tutorial VERSION <span class="number">2.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the variable</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD_REQUIRED <span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># tells CMake to create an executable using the specified source code files</span></span><br><span class="line"><span class="keyword">add_executable</span>(Tutorial tutorial.cxx)</span><br></pre></td></tr></table></figure><h3 id="configure-file"><a href="#configure-file" class="headerlink" title="configure_file"></a>configure_file</h3><blockquote><p>copy the input file with the specified CMake variables replaced</p></blockquote><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copies an &lt;input&gt; file to an &lt;output&gt; file </span></span><br><span class="line"><span class="keyword">configure_file</span>(&lt;input&gt; &lt;output&gt;)</span><br></pre></td></tr></table></figure><h3 id="target-include-directories"><a href="#target-include-directories" class="headerlink" title="target_include_directories"></a>target_include_directories</h3><blockquote><p>specify where the executable target should look for include files</p></blockquote><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">target_include_directories</span>(Tutorial PUBLIC <span class="string">&quot;$&#123;PROJECT_BINARY_DIR&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Adding-a-Library"><a href="#Adding-a-Library" class="headerlink" title="Adding a Library"></a>Adding a Library</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_library</span>()</span><br><span class="line"><span class="keyword">add_subdirectory</span>()</span><br><span class="line"><span class="keyword">target_include_directories</span>()</span><br><span class="line"><span class="keyword">target_link_libraries</span>()</span><br></pre></td></tr></table></figure><h3 id="add-library"><a href="#add-library" class="headerlink" title="add_library"></a>add_library</h3><blockquote><p>Add a library target called <code>&lt;name&gt;</code> to be built from the source files listed in the command invocation</p></blockquote><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(MathFunctions MathFunctions.cxx mysqrt.cxx)</span><br></pre></td></tr></table></figure><h3 id="add-subdirectory"><a href="#add-subdirectory" class="headerlink" title="add_subdirectory"></a>add_subdirectory</h3><blockquote><p>make use of the new library call</p></blockquote><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_subdirectory</span>(MathFunctions)</span><br></pre></td></tr></table></figure><h2 id="Adding-Usage-Requirements-for-a-Library"><a href="#Adding-Usage-Requirements-for-a-Library" class="headerlink" title="Adding Usage Requirements for a Library"></a>Adding Usage Requirements for a Library</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">target_compile_definitions</span>()</span><br><span class="line"><span class="keyword">target_compile_options</span>()</span><br><span class="line"><span class="keyword">target_include_directories</span>()</span><br><span class="line"><span class="keyword">target_link_directories</span>()</span><br><span class="line"><span class="keyword">target_link_options</span>()</span><br><span class="line">target_precompile_headers()</span><br><span class="line"><span class="keyword">target_sources</span>()</span><br><span class="line"><span class="keyword">add_library</span>()</span><br><span class="line"><span class="keyword">target_compile_features</span>()</span><br><span class="line"><span class="keyword">target_link_libraries</span>()</span><br></pre></td></tr></table></figure><h2 id="Adding-Generator-Expressions"><a href="#Adding-Generator-Expressions" class="headerlink" title="Adding Generator Expressions"></a>Adding Generator Expressions</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmake-generator-expressions(<span class="number">7</span>)</span><br><span class="line"><span class="keyword">cmake_minimum_required</span>()</span><br><span class="line"><span class="keyword">set</span>()</span><br><span class="line"><span class="keyword">target_compile_options</span>()</span><br></pre></td></tr></table></figure><h2 id="Installing-and-Testing"><a href="#Installing-and-Testing" class="headerlink" title="Installing and Testing"></a>Installing and Testing</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">install</span>()</span><br></pre></td></tr></table></figure><h2 id="Adding-System-Introspection"><a href="#Adding-System-Introspection" class="headerlink" title="Adding System Introspection"></a>Adding System Introspection</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Packaging-an-Installer"><a href="#Packaging-an-Installer" class="headerlink" title="Packaging an Installer"></a>Packaging an Installer</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cpack</span><br></pre></td></tr></table></figure><h2 id="Selecting-Static-or-Shared-Libraries"><a href="#Selecting-Static-or-Shared-Libraries" class="headerlink" title="Selecting Static or Shared Libraries"></a>Selecting Static or Shared Libraries</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">option</span>(BUILD_SHARED_LIBS <span class="string">&quot;Build using shared libraries&quot;</span> <span class="keyword">ON</span>)</span><br></pre></td></tr></table></figure><h2 id="Adding-Export-Configuration"><a href="#Adding-Export-Configuration" class="headerlink" title="Adding Export Configuration"></a>Adding Export Configuration</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;default&quot;&gt;&lt;a href=&quot;#default&quot; class=&quot;headerlink&quot; title=&quot;default&quot;&gt;&lt;/a&gt;default&lt;/h1&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="cmake" scheme="https://www.willshirley.top/categories/cmake/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>c++ summary</title>
    <link href="https://www.willshirley.top/2025/06/07/c++%20summary/"/>
    <id>https://www.willshirley.top/2025/06/07/c++%20summary/</id>
    <published>2025-06-07T03:14:58.000Z</published>
    <updated>2025-07-02T03:05:48.356Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>C++ 里类的四大函数：构造函数、析构函数、拷贝构造函数、拷贝赋值函数。C++11 因为引入了右值（Rvalue）和转移（Move），又多出了两大函数：转移构造函数和转移赋值函数。</p><p>所以，在现代 C++ 里，一个类总是会有六大基本函数：三个构造、两个赋值、一个析构。</p><ul><li>在 C/C++ 里，所有的函数都是全局的，没有生存周期的概念（static、名字空间的作用很弱，只是简单限制了应用范围，避免名字冲突）。而且函数也都是平级的，不能在函数里再定义函数，也就是不允许定义嵌套函数、函数套函数。</li></ul><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><h3 id="“委托构造”（delegating-constructor）"><a href="#“委托构造”（delegating-constructor）" class="headerlink" title="“委托构造”（delegating constructor）"></a>“委托构造”（delegating constructor）</h3><blockquote><p>使用“委托构造”的新特性，一个构造函数直接调用另一个构造函数，把构造工作“委托”出去，既简单又高效。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoDelegating</span> <span class="keyword">final</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> a; <span class="comment">// 成员变量</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">DemoDelegating</span>(<span class="keyword">int</span> x) : <span class="built_in">a</span>(x) <span class="comment">// 基本的构造函数</span></span><br><span class="line">    &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">DemoDelegating</span>() : <span class="comment">// 无参数的构造函数</span></span><br><span class="line">        <span class="built_in">DemoDelegating</span>(<span class="number">0</span>) <span class="comment">// 给出默认值，委托给第一个构造函数</span></span><br><span class="line">    &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">DemoDelegating</span>(<span class="keyword">const</span> string&amp; s) : <span class="comment">// 字符串参数构造函数</span></span><br><span class="line">        <span class="built_in">DemoDelegating</span>(<span class="built_in">stoi</span>(s)) <span class="comment">// 转换成整数，再委托给第一个构造函数</span></span><br><span class="line">    &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="“成员变量初始化”（In-class-member-initializer）"><a href="#“成员变量初始化”（In-class-member-initializer）" class="headerlink" title="“成员变量初始化”（In-class member initializer）"></a>“成员变量初始化”（In-class member initializer）</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DemoInit</span> <span class="keyword">final</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span>                 a = <span class="number">0</span>;</span><br><span class="line">    std::string         s = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    std::vector&lt;<span class="keyword">int</span>&gt;    v&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">DemoInit</span>() = <span class="keyword">default</span>;</span><br><span class="line">   ~<span class="built_in">DemoInit</span>() = <span class="keyword">default</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">DemoInit</span>(<span class="keyword">int</span> x) : <span class="built_in">a</span>(x) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="“类型别名”（Type-Alias）"><a href="#“类型别名”（Type-Alias）" class="headerlink" title="“类型别名”（Type Alias）"></a>“类型别名”（Type Alias）</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">uint_t</span> = <span class="keyword">unsigned</span> <span class="keyword">int</span>; <span class="comment">// using别名</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="keyword">uint_t</span>； <span class="comment">// 等价的typedef</span></span><br></pre></td></tr></table></figure><h2 id="lambda"><a href="#lambda" class="headerlink" title="lambda"></a>lambda</h2><blockquote><p>C++ 没有为 lambda 表达式引入新的关键字，并没有“lambda”这样的词汇，而是用了一个特殊的形式“[]”，术语叫“lambda 引出符”（lambda introducer）。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> lambda 表达式示例</span></span><br><span class="line">auto f1 = [](&lt;入口参数&gt;)&#123;函数体&#125;; </span><br></pre></td></tr></table></figure><ul><li>lambda表达式赋值必须用auto（但auto不能用在类成员初始化）</li><li>lambda 表达式是一个闭包，能够像函数一样被调用，像变量一样被传递</li><li>捕获引用时必须要注意外部变量的生命周期，防止变量失效</li></ul><p><strong>变量捕获</strong></p><ul><li><code>[=]</code>表示按值捕获所有外部变量，表达式内部是值的拷贝，并且不能修改</li><li><code>[&amp;]</code>是按引用捕获所有外部变量，内部以引用的方式使用，可以修改</li></ul><h1 id="智能指针"><a href="#智能指针" class="headerlink" title="智能指针"></a>智能指针</h1><blockquote><p>尽量不要再使用裸指针、new 和 delete 来操作内存</p></blockquote><h2 id="unique-ptr"><a href="#unique-ptr" class="headerlink" title="unique_ptr"></a>unique_ptr</h2><ul><li>尽量不要对 unique_ptr 执行赋值操作就好了，让它“自生自灭”，完全自动化管理。</li></ul><h2 id="shared-ptr"><a href="#shared-ptr" class="headerlink" title="shared_ptr"></a>shared_ptr</h2><ul><li>shared_ptr 支持安全共享的秘密在于内部使用了“引用计数”</li><li>因为 shared_ptr 具有完整的“值语义”（即可以拷贝赋值），所以，它可以在任何场合替代原始指针，而不用再担心资源回收的问题，比如用于容器存储指针、用于函数安全返回动态创建的对象，等等</li></ul><h1 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h1><ul><li>容器都具有的一个基本特性：它保存元素采用的是“值”（value）语义，也就是说，容器里存储的是元素的拷贝、副本，而不是引用。从这个基本特性可以得出一个推论，容器操作元素的很大一块成本就是值的拷贝。所以，如果元素比较大，或者非常多，那么操作时的拷贝开销就会很高，性能也就不会太好。</li><li>尽量为元素实现转移构造和转移赋值函数</li><li>依据元素的访问方式，分成顺序容器、有序容器和无序容器三大类别</li></ul><h2 id="顺序容器"><a href="#顺序容器" class="headerlink" title="顺序容器"></a>顺序容器</h2><img src="/images/c++/c++-container.jpeg" style="zoom: 50%"><p>顺序容器就是数据结构里的线性表，一共有 5 种：<code>array</code>、<code>vector</code>、<code>deque</code>、<code>list</code>、<code>forward_list</code>，按照存储结构，这 5 种容器又可以再细分成两组。</p><p>连续存储的数组：<code>array</code>、<code>vector</code> 和 <code>deque</code>。</p><p>指针结构的链表：<code>list</code> 和 <code>forward_list</code>。</p><ul><li><p><code>array</code> 和 <code>vector</code> 直接对应 C 的内置数组，内存布局与 C 完全兼容，所以是开销最低、速度最快的容器。它们两个的区别在于容量能否动态增长。array 是静态数组，大小在初始化的时候就固定了，不能再容纳更多的元素。而 vector 是动态数组，虽然初始化的时候设定了大小，但可以在后面随需增长，容纳任意数量的元素。</p></li><li><p><code>deque</code> 也是一种可以动态增长的数组，它和<code>vector</code> 的区别是，它可以在两端高效地插入删除元素，这也是它的名字 double-end queue 的来历，而 <code>vector</code> 则只能用 push_back 在末端追加元素。</p></li><li><p><code>vector</code> 和 <code>deque</code> 里的元素因为是连续存储的，所以在中间的插入删除效率就很低，而 <code>list</code>和 <code>forward_list</code> 是链表结构，插入删除操作只需要调整指针，所以在任意位置的操作都很高效。</p></li><li><p>链表的缺点是查找效率低，只能沿着指针顺序访问，这方面不如 <code>vector</code> 随机访问的效率高。<code>list</code> 是双向链表，可以向前或者向后遍历，而 <code>forward_list</code>，顾名思义，是单向链表，只能向前遍历，查找效率就更低了</p></li><li><p>链表结构比起数组结构还有一个缺点，就是存储成本略高，因为必须要为每个元素附加一个或者两个的指针，指向链表的前后节点。</p></li><li><p>当 <code>vector</code> 的容量到达上限的时候（capacity），它会再分配一块两倍大小的新内存，然后把旧元素拷贝或者移动过去。这个操作的成本是非常大的，所以，你在使用 <code>vector</code> 的时候最好能够“预估”容量，使用 reserve 提前分配足够的空间，减少动态扩容的拷贝代价。</p></li><li><p><code>vector</code> 的做法太“激进”，而 <code>deque</code>、<code>list</code> 的的扩容策略就“保守”多了，只会按照固定的“步长”（例如 N 个字节、一个节点）去增加容量。但在短时间内插入大量数据的时候就会频繁分配内存，效果反而不如 <code>vector</code> 一次分配来得好。</p></li></ul><h2 id="有序容器"><a href="#有序容器" class="headerlink" title="有序容器"></a>有序容器</h2><p>顺序容器的特点是，元素的次序是由它插入的次序而决定的，访问元素也就按照最初插入的顺序。而有序容器则不同，它的元素在插入容器后就被按照某种规则自动排序，所以是“有序”的。C++ 的有序容器使用的是树结构，通常是红黑树——有着最好查找性能的二叉树。</p><p>标准库里一共有四种有序容器：<code>set/multiset</code> 和 <code>map/multimap</code>。<code>set</code> 是集合，<code>map</code> 是关联数组（在其他语言里也叫“字典”），有 multi 前缀的容器表示可以容纳重复的 key。</p><h2 id="无序容器"><a href="#无序容器" class="headerlink" title="无序容器"></a>无序容器</h2><p>分别是 <code>unordered_set/unordered_multiset</code>、<code>unordered_map/unordered_multimap</code>。无序容器同样也是集合和关联数组，用法上与有序容器几乎是一样的，区别在于内部数据结构：它不是红黑树，而是散列表（也叫哈希表，hash table）。因为它采用散列表存储数据，元素的位置取决于计算的散列值，没有规律可言，所以就是“无序”的，你也可以把它理解为“乱序”容器。</p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><ul><li>算法其实并不神秘，因为所有的算法本质上都是 for 或者 while，通过循环遍历来逐个处理容器里的元素。</li><li>追求更高层次上的抽象和封装</li><li>算法是专门操作容器的函数，是一种“智能 for 循环”，它的最佳搭档是 lambda 表达式</li></ul><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><ul><li>算法只能通过迭代器去“间接”访问容器以及元素，算法的能力是由迭代器决定的。</li><li>迭代器也有很多种，比如输入迭代器、输出迭代器、双向迭代器、随机访问迭代器</li></ul><h1 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h1><h2 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h2><ul><li>在 C++ 语言里，线程就是一个能够独立运行的函数</li><li>任何程序一开始就有一个主线程，它从 main() 开始运行。主线程可以调用接口函数，创建出子线程。子线程会立即脱离主线程的控制流程，单独运行，但共享主线程的数据。程序创建出多个子线程，执行多个不同的函数，也就成了多线程。</li><li>最好的并发就是没有并发，最好的多线程就是没有线程。(简单来说，就是在大的、宏观的层面上“看得到”并发和线程，而在小的、微观的层面上“看不到”线程，减少死锁、同步等恶性问题的出现几率)</li><li>四个基本的工具：<strong>仅调用一次</strong>、<strong>线程局部存储</strong>、<strong>原子变量</strong>和<strong>线程对象</strong>。</li></ul><h3 id="仅调用一次"><a href="#仅调用一次" class="headerlink" title="仅调用一次"></a>仅调用一次</h3><p>先声明一个 once_flag 类型的变量，然后调用专门的 call_once() 函数，以函数式编程的方式，传递这个标志和初始化函数。这样即使多个线程重入 call_once()，也只能有一个线程会成功运行初始化。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> once_flag flag; <span class="comment">// 全局的初始化标志</span></span><br><span class="line">std::<span class="built_in">call_once</span>(flag,</span><br><span class="line">            []()&#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;only once&quot;</span> &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br></pre></td></tr></table></figure><h3 id="线程局部存储"><a href="#线程局部存储" class="headerlink" title="线程局部存储"></a>线程局部存储</h3><p><code>thread_local</code> 标记的变量在每个线程里都会有一个独立的副本，是“线程独占”的，所以就不会有竞争读写的问题</p><h3 id="原子变量"><a href="#原子变量" class="headerlink" title="原子变量"></a>原子变量</h3><p>原子变量禁用了拷贝构造函数，在初始化的时候不能用“=”的赋值形式，只能用圆括号或者花括号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">atomic_int x &#123;0&#125;; </span><br><span class="line">atomic_long y &#123;1000L&#125;;</span><br></pre></td></tr></table></figure><h3 id="线程对象"><a href="#线程对象" class="headerlink" title="线程对象"></a>线程对象</h3><p><strong>thread</strong></p><p>TBD</p><p><strong>async</strong></p><p><code>async()</code> 会返回一个 <code>future</code> 变量，可以认为是代表了执行结果的“期货”，如果任务有返回值，就可以用成员函数 <code>get()</code> 获取。不过要特别注意，<code>get()</code> 只能调一次，再次获取结果会发生错误，抛出异常<code>std::future_error</code>。</p><p>如果只是想简单地在线程里启动一个异步任务，完全不关心返回值，可以调用thread的成员函数<code>detach()</code>，比<code>async()</code>会方便一点</p><h1 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h1><p>序列化，就是把内存里“活的对象”转换成静止的字节序列，便于存储和网络传输；而反序列化则是反向操作，从静止的字节序列重新构建出内存里可用的对象。</p><p><strong>JSON</strong> 是纯文本，容易阅读，方便编辑，适用性最广</p><p><strong>MessagePack</strong> 是二进制，小巧高效，在开源界接受程度比较高</p><p><strong>ProtoBuffer</strong> 是工业级的数据格式，注重安全和性能，多用在大公司的商业产品里</p><p><strong>Avro</strong></p><p><strong>Thrift</strong></p><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><blockquote><p>如何创建对象、如何组合对象，以及如何处理对象之间的动态通信和职责分配</p></blockquote><p>最常用有 5 个原则，也就是常说的<code>SOLID</code></p><ol><li><p>SRP，单一职责（Single ResponsibilityPrinciple）</p><p>单一职责原则，简单来说就是“不要做多余的事”，更常见的说法就是“高内聚低耦合”。在设计类的时候，要尽量缩小“粒度”，功能明确单一，不要设计出“大而全”的类。</p></li><li><p>OCP，开闭（Open Closed Principle）</p><p>单一职责原则，简单来说就是“不要做多余的事”，更常见的说法就是“高内聚低耦合”。在设计类的时候，要尽量缩小“粒度”，功能明确单一，不要设计出“大而全”的类。</p></li><li><p>LSP，里氏替换（Liskov Substitution Principle）</p><p>子类必须能够完全替代父类</p></li><li><p>ISP，接口隔离（Interface-Segregation Principle）</p><p>侧重点是对外的接口而不是内部的功能，目标是尽量简化、归并给外界调用的接口，避免写出大而不当的“面条类”</p></li><li><p>DIP，依赖反转，有的时候也叫依赖倒置（Dependency Inversion Principle）</p><p>上层要避免依赖下层的实现细节，下层要反过来依赖上层的抽象定义，说白了，大概就是“解耦”</p></li></ol><table><thead><tr><th></th><th>创建型模式</th><th>结构型模式</th><th>行为模式</th></tr></thead><tbody><tr><td>特点</td><td>隔离对象的生产和使用</td><td>隔离客户代码与原对象的接口</td><td>隔离程序里稳定的主逻辑与动态变化的部分</td></tr><tr><td>简单(常用)</td><td>单件、工厂</td><td>适配器、外观、代理</td><td>职责链、命令、策略</td></tr><tr><td>普通(常用)</td><td>生成器、原型</td><td>桥接、装饰</td><td>迭代器、观察者、状态、模板方法、访问者</td></tr><tr><td>困难(不常用)</td><td></td><td>组成、享元</td><td>解释器、备忘录、中介者</td></tr></tbody></table><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li><p>C++ 里也是有垃圾回收的，不过不是 Java、Go 那种严格意义上的垃圾回收，而是广义上的垃圾回收，这就是构造 / 析构函数和 <code>RAII</code> 惯用法（Resource Acquisition Is Initialization）</p></li><li><p><code>noexcept</code> 专门用来修饰函数，告诉编译器：这个函数不会抛出异常。编译器看到<code>noexcept</code>，就得到了一个“保证”，就可以对函数做优化，不去加那些栈展开的额外代码，消除异常处理的成本。</p></li></ul><p><strong>reference</strong></p><ul><li>&lt;&lt;罗剑锋的C++实战笔记&gt;&gt;</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h1&gt;&lt;p&gt;C++ 里类的四大函数：构造函数、析构函数、拷贝构造函数、拷贝赋值函数。C++11 因为引入了右值（Rvalue）和转移（Move），又多出</summary>
      
    
    
    
    <category term="c++" scheme="https://www.willshirley.top/categories/c/"/>
    
    
    <category term="snippet" scheme="https://www.willshirley.top/tags/snippet/"/>
    
  </entry>
  
  <entry>
    <title>c++ tools</title>
    <link href="https://www.willshirley.top/2025/06/06/c++%20tools/"/>
    <id>https://www.willshirley.top/2025/06/06/c++%20tools/</id>
    <published>2025-06-06T02:46:06.000Z</published>
    <updated>2025-06-30T02:14:10.372Z</updated>
    
    <content type="html"><![CDATA[<h1 id="daignose-debug"><a href="#daignose-debug" class="headerlink" title="daignose/debug"></a>daignose/debug</h1><h2 id="GDB"><a href="#GDB" class="headerlink" title="GDB"></a>GDB</h2><h2 id="Valgrind"><a href="#Valgrind" class="headerlink" title="Valgrind"></a>Valgrind</h2><h2 id="Systemtap"><a href="#Systemtap" class="headerlink" title="Systemtap"></a>Systemtap</h2><h2 id="FlameGraph"><a href="#FlameGraph" class="headerlink" title="FlameGraph"></a>FlameGraph</h2><p><a href="https://github.com/brendangregg/FlameGraph">https://github.com/brendangregg/FlameGraph</a>)</p><h2 id="pstack"><a href="#pstack" class="headerlink" title="pstack"></a>pstack</h2><h2 id="strace"><a href="#strace" class="headerlink" title="strace"></a>strace</h2><h2 id="perf"><a href="#perf" class="headerlink" title="perf"></a>perf</h2><h2 id="gperftools"><a href="#gperftools" class="headerlink" title="gperftools"></a>gperftools</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;daignose-debug&quot;&gt;&lt;a href=&quot;#daignose-debug&quot; class=&quot;headerlink&quot; title=&quot;daignose/debug&quot;&gt;&lt;/a&gt;daignose/debug&lt;/h1&gt;&lt;h2 id=&quot;GDB&quot;&gt;&lt;a href=&quot;#GD</summary>
      
    
    
    
    <category term="c++" scheme="https://www.willshirley.top/categories/c/"/>
    
    
    <category term="tools" scheme="https://www.willshirley.top/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>etcd snippet</title>
    <link href="https://www.willshirley.top/2025/04/24/etcd/"/>
    <id>https://www.willshirley.top/2025/04/24/etcd/</id>
    <published>2025-04-24T11:26:30.000Z</published>
    <updated>2025-05-07T02:13:27.958Z</updated>
    
    <content type="html"><![CDATA[<h1 id="command"><a href="#command" class="headerlink" title="command"></a>command</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ETCDCTL_API=3 etcdctl --endpoints=http://127.0.0.1:2379 endpoint health</span><br><span class="line">ETCDCTL_API=3 /dingofs/etcd/sbin/etcdctl   --endpoints=http://127.0.0.1:2379   member list</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;command&quot;&gt;&lt;a href=&quot;#command&quot; class=&quot;headerlink&quot; title=&quot;command&quot;&gt;&lt;/a&gt;command&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="etcd" scheme="https://www.willshirley.top/categories/etcd/"/>
    
    
    <category term="snippet" scheme="https://www.willshirley.top/tags/snippet/"/>
    
  </entry>
  
  <entry>
    <title>containerd</title>
    <link href="https://www.willshirley.top/2025/03/28/containerd/"/>
    <id>https://www.willshirley.top/2025/03/28/containerd/</id>
    <published>2025-03-28T06:10:57.000Z</published>
    <updated>2025-06-04T12:36:48.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="best-practise"><a href="#best-practise" class="headerlink" title="best practise"></a>best practise</h2><p><strong>change containerd’s default data path</strong></p><ol><li><p>Identify the Current Data Path</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">containerd config default | grep &quot;root&quot; # Expected output: root = &quot;/var/lib/containerd&quot;</span><br></pre></td></tr></table></figure></li><li><p>Modify the following lines in /etc/containerd/config.toml:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root = &quot;/path/to/new/data/path&quot; # the location where container data (images, volumes) is stored</span><br></pre></td></tr></table></figure></li><li><p>Move Existing Data (if required)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop containerd  # optional</span><br><span class="line">sudo mv /var/lib/containerd /data/containerd</span><br><span class="line">sudo systemctl start containerd</span><br></pre></td></tr></table></figure></li></ol><h1 id="command"><a href="#command" class="headerlink" title="command"></a>command</h1><h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> list k8s image</span></span><br><span class="line">sudo ctr -n k8s.io images ls</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> pull k8s image</span></span><br><span class="line">sudo ctr -n k8s.io images pull xxx</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> load tar file</span> </span><br><span class="line">sudo ctr -n k8s.io images import /tmp/my-image.tar</span><br><span class="line"><span class="meta">#</span><span class="bash"> combine load tar file to specify tag image</span></span><br><span class="line">sudo ctr -n k8s.io images import --base-name my.registry.com/myproject/my-image:v1.2.3 /path/to/image.tar</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rename tag</span></span><br><span class="line">sudo ctr -n k8s.io images tag &lt;old-image-name&gt; &lt;new-image-name&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> remove image</span></span><br><span class="line">sudo ctr -n k8s.io images remove &lt;name&gt;:&lt;tag&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;best-practise&quot;&gt;&lt;a href=&quot;#best-practise&quot; class=&quot;headerlink&quot; title=&quot;best practise&quot;&gt;&lt;/a&gt;best practise&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;change containerd’</summary>
      
    
    
    
    <category term="containerd" scheme="https://www.willshirley.top/categories/containerd/"/>
    
    
    <category term="container" scheme="https://www.willshirley.top/tags/container/"/>
    
  </entry>
  
  <entry>
    <title>ceph fs</title>
    <link href="https://www.willshirley.top/2025/03/26/ceph%20FS/"/>
    <id>https://www.willshirley.top/2025/03/26/ceph%20FS/</id>
    <published>2025-03-26T08:45:16.000Z</published>
    <updated>2025-03-26T09:53:14.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h1><p>Before mounting CephFS, ensure that</p><ol><li>the client host (where CephFS has to be mounted and used) has a copy of the Ceph configuration file (i.e. ceph.conf)</li><li>a keyring of the CephX user that has permission to access the MDS.<br>both of these files must already be present on the host where the Ceph MON resides.</li></ol><ul><li><p>Generate a minimal conf file for the client host and place it at a standard location:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> on client host</span></span><br><span class="line">mkdir -p -m 755 /etc/ceph</span><br><span class="line">ssh &#123;user&#125;@&#123;mon-host&#125; &quot;sudo ceph config generate-minimal-conf&quot; | sudo tee /etc/ceph/ceph.conf</span><br><span class="line">chmod 644 /etc/ceph/ceph.conf</span><br></pre></td></tr></table></figure></li><li><p>Create a CephX user and get its secret key:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh &#123;user&#125;@&#123;mon-host&#125; &quot;sudo ceph fs authorize cephfs-1 client.dongwei / rw&quot; | sudo tee /etc/ceph/ceph.client.dongwei.keyring</span><br></pre></td></tr></table></figure><blockquote><p>In above command, replace cephfs with the name of your CephFS, foo by the name you want for your CephX user and / by the path within your CephFS for which you want to allow access to the client host and rw stands for both read and write permissions.</p></blockquote></li><li><p>Ensure that the keyring has appropriate permissions:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 /etc/ceph/ceph.client.dongwei.keyring</span><br></pre></td></tr></table></figure></li></ul><h1 id="Create-Pool-FS"><a href="#Create-Pool-FS" class="headerlink" title="Create Pool/FS"></a>Create Pool/FS</h1><ul><li><p>Creating pools</p><blockquote><p>A Ceph file system requires at least two RADOS pools, one for data and one for metadata.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool create cephfs_data</span><br><span class="line">ceph osd pool create cephfs_metadata</span><br></pre></td></tr></table></figure></li><li><p>Creating the file system</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph fs new cephfs-1 cephfs_metadata cephfs_data</span><br></pre></td></tr></table></figure></li><li><p>Check the status of the file system</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph fs status</span><br></pre></td></tr></table></figure></li><li><p>check mds status</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph mds stat</span><br></pre></td></tr></table></figure></li><li><p>Using Erasure Coded pools with CephFS（optional）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool set my_ec_pool allow_ec_overwrites true</span><br></pre></td></tr></table></figure></li></ul><h1 id="Mount-CephFS-using-Kernel-Driver"><a href="#Mount-CephFS-using-Kernel-Driver" class="headerlink" title="Mount CephFS using Kernel Driver"></a>Mount CephFS using Kernel Driver</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mount -t ceph &#123;device-string&#125;=&#123;path-to-mounted&#125; &#123;mount-point&#125; -o &#123;key-value-args&#125; &#123;other-args&#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mount -t ceph &lt;name&gt;@&lt;fsid&gt;.&lt;fs_name&gt;=/ /mnt/mycephfs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> fsid is the FSID of the Ceph cluster, <span class="built_in">which</span> can be found using the `ceph fsid` <span class="built_in">command</span>.</span></span><br><span class="line"></span><br><span class="line">mkdir /mnt/mycephfs</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> not use mount.helper</span></span><br><span class="line">mount -t ceph dongwei@b3acfc0d-575f-41d3-9c91-0e7ed3dbb3fa.cephfs-1=/ -o mon_addr=192.168.0.1:6789,secret=AQATSKdNGBnwLhAAnNDKnH65FmVKpXZJVasUeQ==</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> use mount.helper</span></span><br><span class="line">mount -t ceph dongwei@.cephfs-1=/ /mnt/cephfs -o secret=AQATSKdNGBnwLhAAnNDKnH65FmVKpXZJVasUeQ==</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> use secret file and Multiple monitor hosts</span></span><br><span class="line">mount -t ceph cephuser@.cephfs=/ /mnt/mycephfs -o</span><br><span class="line">mon_addr=192.168.0.1:6789/192.168.0.2:6789,secretfile=/etc/ceph/cephuser.secret</span><br></pre></td></tr></table></figure><ul><li><p>check</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dongwei@6a65c746-e532-11ef-8ac2-fa7c097efb00.cephfs-1=/  190G     0  190G   0% /mnt/cephfs</span><br></pre></td></tr></table></figure></li></ul><h1 id="Mount-CephFS-using-FUSE"><a href="#Mount-CephFS-using-FUSE" class="headerlink" title="Mount CephFS using FUSE"></a>Mount CephFS using FUSE</h1><ul><li><p>install ceph-fuse</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Install the Ceph release RPM (adjust <span class="string">&#x27;reef&#x27;</span> as needed)</span></span><br><span class="line">sudo rpm -Uvh https://download.ceph.com/rpm-reef/el9/noarch/ceph-release-1-1.el9.noarch.rpm</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Import the Ceph GPG key</span></span><br><span class="line">sudo rpm --import &#x27;https://download.ceph.com/keys/release.asc&#x27;</span><br><span class="line"></span><br><span class="line">sudo dnf install -y ceph-fuse</span><br></pre></td></tr></table></figure></li><li><p>mount</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ceph-fuse &#123;mount point&#125; &#123;options&#125;</span></span><br><span class="line">mkdir /mnt/mycephfs</span><br><span class="line">ceph-fuse --id dongwei /mnt/mycephfs  # mount default fs</span><br><span class="line"></span><br><span class="line">ceph-fuse --id dongwei --client_fs cephfs-1 /mnt/mycephfs # mount specify fs</span><br></pre></td></tr></table></figure></li><li><p>check</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-fuse190G     0  190G   0% /mnt/cephfs2</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Prerequisites&quot;&gt;&lt;a href=&quot;#Prerequisites&quot; class=&quot;headerlink&quot; title=&quot;Prerequisites&quot;&gt;&lt;/a&gt;Prerequisites&lt;/h1&gt;&lt;p&gt;Before mounting CephFS, en</summary>
      
    
    
    
    <category term="ceph" scheme="https://www.willshirley.top/categories/ceph/"/>
    
    
    <category term="fs" scheme="https://www.willshirley.top/tags/fs/"/>
    
  </entry>
  
  <entry>
    <title>ceph csi</title>
    <link href="https://www.willshirley.top/2025/03/26/ceph%20csi/"/>
    <id>https://www.willshirley.top/2025/03/26/ceph%20csi/</id>
    <published>2025-03-26T06:14:17.000Z</published>
    <updated>2025-03-27T08:34:02.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="image"><a href="#image" class="headerlink" title="image"></a>image</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> v3.13</span></span><br><span class="line">quay.io/cephcsi/cephcsi:canary</span><br><span class="line"></span><br><span class="line">registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0</span><br><span class="line">registry.k8s.io/sig-storage/csi-provisioner:v5.1.0</span><br><span class="line">registry.k8s.io/sig-storage/csi-resizer:v1.13.1</span><br><span class="line">registry.k8s.io/sig-storage/csi-snapshotter:v8.2.0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> v3.10</span></span><br><span class="line">quay.io/cephcsi/cephcsi:v3.10-canary</span><br><span class="line"></span><br><span class="line">registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.9.1</span><br><span class="line">registry.k8s.io/sig-storage/csi-provisioner:v3.6.2</span><br><span class="line">registry.k8s.io/sig-storage/csi-resizer:v1.9.2</span><br><span class="line">registry.k8s.io/sig-storage/csi-snapshotter:v6.3.2</span><br></pre></td></tr></table></figure><h1 id="resource"><a href="#resource" class="headerlink" title="resource"></a>resource</h1><h2 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h2><ul><li>step1</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f csidriver.yaml</span><br><span class="line">kubectl create -f csi-provisioner-rbac.yaml</span><br><span class="line">kubectl create -f csi-nodeplugin-rbac.yaml</span><br></pre></td></tr></table></figure><ul><li><p>step2</p><p><code>kubectl create -f csi-config-map.yaml</code></p><blockquote><p>check by <code>ceph mon dump</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ceph-csi-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ceph</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">config.json:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">    [</span></span><br><span class="line"><span class="string">      &#123;</span></span><br><span class="line"><span class="string">        &quot;clusterID&quot;: &quot;xxx&quot;, </span></span><br><span class="line"><span class="string">        &quot;monitors&quot;: [</span></span><br><span class="line"><span class="string">          &quot;172.20.7.xxx:6789&quot;,</span></span><br><span class="line"><span class="string">          &quot;172.20.7.xxx:6789&quot;,</span></span><br><span class="line"><span class="string">          &quot;172.20.7.xxx:6789&quot;</span></span><br><span class="line"><span class="string">        ]</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    ]</span></span><br></pre></td></tr></table></figure></li><li><p>step3</p><p><code>kubectl create -f ceph-conf.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">ceph.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    [global]</span></span><br><span class="line"><span class="string">    auth_cluster_required = cephx</span></span><br><span class="line"><span class="string">    auth_service_required = cephx</span></span><br><span class="line"><span class="string">    auth_client_required = cephx</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">  <span class="comment"># keyring is a required key and its value should be empty</span></span><br><span class="line">  <span class="attr">keyring:</span> <span class="string">|</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ceph-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ceph</span></span><br></pre></td></tr></table></figure></li><li><p>step4</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f kms-config.yaml</span><br><span class="line">kubectl create -f csi-cephfsplugin-provisioner.yaml</span><br><span class="line">kubectl create -f csi-cephfsplugin.yaml</span><br></pre></td></tr></table></figure></li></ul><h2 id="provision"><a href="#provision" class="headerlink" title="provision"></a>provision</h2><h3 id="dynamic-provision"><a href="#dynamic-provision" class="headerlink" title="dynamic provision"></a>dynamic provision</h3><ul><li><p>step1 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph fs subvolumegroup create &lt;fsName&gt; csi</span><br></pre></td></tr></table></figure></li><li><p>step2</p><p><code>kubectl create -f secret.yaml</code></p><blockquote><p>check by <code>ceph auth get client.dongwei</code> and <code>ceph auth get client.admin</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">csi-cephfs-secret</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ceph</span></span><br><span class="line"><span class="attr">stringData:</span></span><br><span class="line">  <span class="comment"># Required for statically provisioned volumes, 🚨 this use user</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">dongwei</span></span><br><span class="line">  <span class="attr">userKey:</span> <span class="string">&lt;&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Required for dynamically provisioned volumes, 🚨 this use admin</span></span><br><span class="line">  <span class="attr">admin:</span> <span class="string">admin</span></span><br><span class="line">  <span class="attr">adminKey:</span> <span class="string">&lt;&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Encryption passphrase</span></span><br><span class="line">  <span class="attr">encryptionPassphrase:</span> <span class="string">test_passphrase</span></span><br></pre></td></tr></table></figure></li><li><p>step3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f storageclass.yaml</span><br><span class="line">kubectl create -f pvc.yaml</span><br><span class="line">kubectl create -f pod.yaml</span><br></pre></td></tr></table></figure></li></ul><h3 id="static-provision"><a href="#static-provision" class="headerlink" title="static provision"></a>static provision</h3><ul><li><p>step1 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ceph fs subvolumegroup create &lt;fsName&gt; testGroup</span><br><span class="line">ceph fs subvolume create &lt;fsName&gt; testSubVolume testGroup --size=1073741824  # byte 1073741824/1024/1024=1024MB</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check</span></span><br><span class="line">ceph fs subvolume getpath &lt;fsName&gt; testSubVolume testGroup</span><br></pre></td></tr></table></figure></li><li><p>step2</p><p><code>kubectl create -f secret.yaml</code></p><blockquote><p>check by <code>ceph auth get client.dongwei</code> </p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">csi-cephfs-secret-static</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ceph</span></span><br><span class="line"><span class="attr">stringData:</span></span><br><span class="line">  <span class="comment"># Required for statically provisioned volumes, 🚨 this use userID</span></span><br><span class="line">  <span class="attr">userID:</span> <span class="string">dongwei</span></span><br><span class="line">  <span class="attr">userKey:</span> <span class="string">&lt;&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Encryption passphrase</span></span><br><span class="line">  <span class="attr">encryptionPassphrase:</span> <span class="string">test_passphrase</span></span><br></pre></td></tr></table></figure></li><li><p>step3</p><p><code>kubectl create -f pv.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cephfs-static-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">csi:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">cephfs.csi.ceph.com</span></span><br><span class="line">    <span class="attr">nodeStageSecretRef:</span></span><br><span class="line">      <span class="comment"># node stage secret name</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">csi-cephfs-secret</span></span><br><span class="line">      <span class="comment"># node stage secret namespace where above secret is created</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">ceph</span></span><br><span class="line">    <span class="attr">volumeAttributes:</span></span><br><span class="line">      <span class="comment"># optional file system to be mounted</span></span><br><span class="line">      <span class="attr">&quot;fsName&quot;:</span> <span class="string">&quot;cephfs-1&quot;</span></span><br><span class="line">      <span class="comment"># Required options from storageclass parameters need to be added in volumeAttributes</span></span><br><span class="line">      <span class="attr">&quot;clusterID&quot;:</span> <span class="string">&quot;ba68226a-672f-4ba5-97bc-22840318b2ec&quot;</span></span><br><span class="line">      <span class="attr">&quot;staticVolume&quot;:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="attr">&quot;rootPath&quot;:</span> <span class="string">/volumes/testGroup/testSubVolume</span></span><br><span class="line">    <span class="comment"># volumeHandle can be anything, need not to be same</span></span><br><span class="line">    <span class="comment"># as PV name or volume name. keeping same for brevity</span></span><br><span class="line">    <span class="attr">volumeHandle:</span> <span class="string">cephfs-static-pv</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br></pre></td></tr></table></figure><blockquote><p>rootPath 也可以指定为  /volumes/csi</p></blockquote></li><li><p>step4</p><p><code>kubectl create -f pvc.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cephfs-static-pvc</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ceph</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line">  <span class="comment"># volumeName should be same as PV name</span></span><br><span class="line">  <span class="attr">volumeName:</span> <span class="string">cephfs-static-pv</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;image&quot;&gt;&lt;a href=&quot;#image&quot; class=&quot;headerlink&quot; title=&quot;image&quot;&gt;&lt;/a&gt;image&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="ceph" scheme="https://www.willshirley.top/categories/ceph/"/>
    
    
    <category term="csi" scheme="https://www.willshirley.top/tags/csi/"/>
    
  </entry>
  
  <entry>
    <title>kubelet snippet</title>
    <link href="https://www.willshirley.top/2025/03/25/kubelet%20snippet/"/>
    <id>https://www.willshirley.top/2025/03/25/kubelet%20snippet/</id>
    <published>2025-03-25T06:58:19.000Z</published>
    <updated>2025-03-25T06:59:59.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="troubleshooting"><a href="#troubleshooting" class="headerlink" title="troubleshooting"></a>troubleshooting</h1><h2 id="Version-from-runtime-service-failed"><a href="#Version-from-runtime-service-failed" class="headerlink" title="Version from runtime service failed"></a>Version from runtime service failed</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">E0325 12:15:10.889620 3185179 remote_runtime.go:189] &quot;Version from runtime service failed&quot; err=&quot;rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.RuntimeService&quot;</span><br><span class="line">E0325 12:15:10.889663 3185179 kuberuntime_manager.go:226] &quot;Get runtime version failed&quot; err=&quot;get remote runtime typed version failed: rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.RuntimeService&quot;</span><br><span class="line">E0325 12:15:10.889683 3185179 run.go:74] &quot;command failed&quot; err=&quot;failed to run Kubelet: failed to create kubelet: get remote runtime typed version failed: rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.RuntimeService&quot;</span><br></pre></td></tr></table></figure><ul><li><p>resolve</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">复制正常节点 /etc/containerd/config.toml 配置文件，然后重启 containerd</span><br><span class="line">sudo systemctl restart containerd</span><br><span class="line"></span><br><span class="line">kubelet服务会自动拉起</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;troubleshooting&quot;&gt;&lt;a href=&quot;#troubleshooting&quot; class=&quot;headerlink&quot; title=&quot;troubleshooting&quot;&gt;&lt;/a&gt;troubleshooting&lt;/h1&gt;&lt;h2 id=&quot;Version-from-</summary>
      
    
    
    
    <category term="kubernetes" scheme="https://www.willshirley.top/categories/kubernetes/"/>
    
    
    <category term="kubelet" scheme="https://www.willshirley.top/tags/kubelet/"/>
    
  </entry>
  
  <entry>
    <title>clang-uml</title>
    <link href="https://www.willshirley.top/2025/03/20/clang-uml/"/>
    <id>https://www.willshirley.top/2025/03/20/clang-uml/</id>
    <published>2025-03-20T11:27:14.000Z</published>
    <updated>2025-03-24T07:46:54.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="clang-uml"><a href="#clang-uml" class="headerlink" title="clang-uml"></a>clang-uml</h1><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> init .clang-uml file</span></span><br><span class="line">clang-uml --init</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> use specify config file</span></span><br><span class="line">clang-uml -c /path/to/configFile</span><br></pre></td></tr></table></figure><h2 id="generate-PlantUML"><a href="#generate-PlantUML" class="headerlink" title="generate PlantUML"></a>generate PlantUML</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> generate xxx.puml base on default config</span></span><br><span class="line">clang-uml # --progress</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> draw svg picture base on above puml file</span></span><br><span class="line">plantuml -tsvg xxx.puml</span><br></pre></td></tr></table></figure><h2 id="generate-mermaid"><a href="#generate-mermaid" class="headerlink" title="generate  mermaid"></a>generate  mermaid</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> genrate xxx.mmd</span></span><br><span class="line">clang-uml -g mermaid</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> draw svg</span></span><br><span class="line">mmdc -i xxx.mmd # -o &lt;name&gt;.svg</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> draw big svg</span></span><br><span class="line">vim config.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;maxTextSize&quot;: 1000000</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mmdc -i diagram.mmd -c config.json</span><br></pre></td></tr></table></figure><h2 id="other"><a href="#other" class="headerlink" title="other"></a>other</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> To find the exact <span class="keyword">function</span> signature</span></span><br><span class="line"> clang-uml --print-from -n client_class_diagram -c .clang-uml-sequence | grep main</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;clang-uml&quot;&gt;&lt;a href=&quot;#clang-uml&quot; class=&quot;headerlink&quot; title=&quot;clang-uml&quot;&gt;&lt;/a&gt;clang-uml&lt;/h1&gt;&lt;h2 id=&quot;init&quot;&gt;&lt;a href=&quot;#init&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="clang-uml" scheme="https://www.willshirley.top/categories/clang-uml/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>nvidia cuda</title>
    <link href="https://www.willshirley.top/2025/03/12/cuda/"/>
    <id>https://www.willshirley.top/2025/03/12/cuda/</id>
    <published>2025-03-12T07:59:26.000Z</published>
    <updated>2025-04-16T07:56:35.975Z</updated>
    
    <content type="html"><![CDATA[<h1 id="version"><a href="#version" class="headerlink" title="version"></a>version</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GPU  drivercuda|vllm torch</span><br><span class="line">h10055012.4  |</span><br><span class="line">h20056512.7|0.7.32.5.1+cu124</span><br><span class="line">h20057012.8|0.7.32.5.1+cu124</span><br></pre></td></tr></table></figure><h1 id="install"><a href="#install" class="headerlink" title="install"></a>install</h1><h2 id="CUDA-Toolkit"><a href="#CUDA-Toolkit" class="headerlink" title="CUDA Toolkit"></a>CUDA Toolkit</h2><blockquote><p><a href="https://developer.nvidia.com/cuda-toolkit-archive">https://developer.nvidia.com/cuda-toolkit-archive</a></p></blockquote><ul><li><p>local</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin</span><br><span class="line"></span><br><span class="line">sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600</span><br><span class="line"></span><br><span class="line">wget https://developer.download.nvidia.com/compute/cuda/12.8.1/local_installers/cuda-repo-ubuntu2204-12-8-local_12.8.1-570.124.06-1_amd64.deb</span><br><span class="line"></span><br><span class="line">sudo dpkg -i cuda-repo-ubuntu2204-12-8-local_12.8.1-570.124.06-1_amd64.deb</span><br><span class="line"></span><br><span class="line">sudo cp /var/cuda-repo-ubuntu2204-12-8-local/cuda-*-keyring.gpg /usr/share/keyrings/</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get -y install cuda-toolkit-12-8</span><br></pre></td></tr></table></figure></li><li><p>online</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb</span><br><span class="line">sudo dpkg -i cuda-keyring_1.1-1_all.deb</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install cuda-toolkit-12-8</span><br></pre></td></tr></table></figure></li></ul><h3 id="post-operate"><a href="#post-operate" class="headerlink" title="post operate"></a>post operate</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> config env</span></span><br><span class="line">export PATH=/usr/local/cuda/bin:$PATH</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> NVIDIA persistence daemon</span></span><br><span class="line">sudo systemctl start nvidia-persistenced</span><br></pre></td></tr></table></figure><h2 id="driver"><a href="#driver" class="headerlink" title="driver"></a>driver</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y cuda-drivers</span><br></pre></td></tr></table></figure><h2 id="nvidia-fabricmanager"><a href="#nvidia-fabricmanager" class="headerlink" title="nvidia-fabricmanager"></a>nvidia-fabricmanager</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y nvidia-fabricmanager-570</span><br><span class="line"></span><br><span class="line">sudo systemctl start nvidia-fabricmanager</span><br></pre></td></tr></table></figure><h1 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h1><blockquote><p>resolve issues: Error 802: system not yet initialized</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sort GPUs, by ordering their IDs with IDs on the PCIe bus.</span></span><br><span class="line">export CUDA_DEVICE_ORDER=&quot;PCI_BUS_ID&quot; </span><br><span class="line"><span class="meta">#</span><span class="bash"> perform an availability check using NVML (NVIDIA Management Library). NVML is an API layer <span class="keyword">for</span> obtaining data directly from the NVIDIA-smi utility.</span></span><br><span class="line">export PYTORCH_NVML_BASED_CUDA_CHECK=1 </span><br><span class="line"><span class="meta">#</span><span class="bash"> force show the system the IDs of available GPUs.</span></span><br><span class="line">export CUDA_VISIBLE_DEVICES=0,1,2,3,4,5,6,7</span><br></pre></td></tr></table></figure><h1 id="cuda-kernel-model"><a href="#cuda-kernel-model" class="headerlink" title="cuda kernel model"></a>cuda kernel model</h1><ul><li>check by <code>lsmod | grep nvidia</code></li></ul><table><thead><tr><th><strong>Module</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>nvidia_uvm</td><td>NVIDIA’s Unified Memory driver</td></tr><tr><td>nvidia_drm</td><td>Direct Rendering Manager support</td></tr><tr><td>nvidia_modeset</td><td>Kernel mode-setting support</td></tr><tr><td>nvidia</td><td>Main NVIDIA driver module</td></tr></tbody></table><h1 id="command"><a href="#command" class="headerlink" title="command"></a>command</h1><h2 id="nvidia-smi"><a href="#nvidia-smi" class="headerlink" title="nvidia-smi"></a>nvidia-smi</h2><ul><li><p>Enable Persistence Mode</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvidia-smi -pm 1</span><br></pre></td></tr></table></figure></li><li><p>check state</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi conf-compute -grs</span><br><span class="line"><span class="meta">#</span><span class="bash"> Confidential Compute GPUs Ready state: not-ready</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Confidential Compute GPUs Ready state: ready</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">if</span> above state is not-ready, execute below cmd</span></span><br><span class="line">nvidia-smi conf-compute -srs 1</span><br></pre></td></tr></table></figure></li><li><p>cuda 12.8</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">+-----------------------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 570.124.06             Driver Version: 570.124.06     CUDA Version: 12.8     |</span><br><span class="line">|-----------------------------------------+------------------------+----------------------+</span><br><span class="line">| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                                         |                        |               MIG M. |</span><br><span class="line">|=========================================+========================+======================|</span><br><span class="line">|   0  NVIDIA H200                    On  |   00000000:19:00.0 Off |                    0 |</span><br><span class="line">| N/A   23C    P0             76W /  700W |       1MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   1  NVIDIA H200                    On  |   00000000:3B:00.0 Off |                    0 |</span><br><span class="line">| N/A   21C    P0             75W /  700W |       1MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   2  NVIDIA H200                    On  |   00000000:4C:00.0 Off |                    0 |</span><br><span class="line">| N/A   23C    P0             76W /  700W |       1MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   3  NVIDIA H200                    On  |   00000000:5D:00.0 Off |                    0 |</span><br><span class="line">| N/A   24C    P0             77W /  700W |       1MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   4  NVIDIA H200                    On  |   00000000:9B:00.0 Off |                    0 |</span><br><span class="line">| N/A   24C    P0             75W /  700W |       1MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   5  NVIDIA H200                    On  |   00000000:BB:00.0 Off |                    0 |</span><br><span class="line">| N/A   23C    P0             77W /  700W |       1MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   6  NVIDIA H200                    On  |   00000000:CB:00.0 Off |                    0 |</span><br><span class="line">| N/A   24C    P0             76W /  700W |       1MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   7  NVIDIA H200                    On  |   00000000:DB:00.0 Off |                    0 |</span><br><span class="line">| N/A   24C    P0             76W /  700W |       1MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">                                                                                         </span><br><span class="line">+-----------------------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                              |</span><br><span class="line">|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |</span><br><span class="line">|        ID   ID                                                               Usage      |</span><br><span class="line">|=========================================================================================|</span><br><span class="line">|  No running processes found                                                             |</span><br><span class="line">+-----------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>cuda 12.7</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">Fri Mar 14 10:23:56 2025       </span><br><span class="line">+-----------------------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 565.57.01              Driver Version: 565.57.01      CUDA Version: 12.7     |</span><br><span class="line">|-----------------------------------------+------------------------+----------------------+</span><br><span class="line">| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                                         |                        |               MIG M. |</span><br><span class="line">|=========================================+========================+======================|</span><br><span class="line">|   0  NVIDIA H200                    On  |   00000000:19:00.0 Off |                    0 |</span><br><span class="line">| N/A   26C    P0            111W /  700W |  134402MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   1  NVIDIA H200                    On  |   00000000:3B:00.0 Off |                    0 |</span><br><span class="line">| N/A   25C    P0            116W /  700W |  132320MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   2  NVIDIA H200                    On  |   00000000:4C:00.0 Off |                    0 |</span><br><span class="line">| N/A   25C    P0            112W /  700W |  132320MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   3  NVIDIA H200                    On  |   00000000:5D:00.0 Off |                    0 |</span><br><span class="line">| N/A   27C    P0            115W /  700W |  132320MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   4  NVIDIA H200                    On  |   00000000:9B:00.0 Off |                    0 |</span><br><span class="line">| N/A   27C    P0            115W /  700W |  132320MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   5  NVIDIA H200                    On  |   00000000:BB:00.0 Off |                    0 |</span><br><span class="line">| N/A   26C    P0            114W /  700W |  132320MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   6  NVIDIA H200                    On  |   00000000:CB:00.0 Off |                    0 |</span><br><span class="line">| N/A   26C    P0            113W /  700W |  132320MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   7  NVIDIA H200                    On  |   00000000:DB:00.0 Off |                    0 |</span><br><span class="line">| N/A   24C    P0            114W /  700W |  131840MiB / 143771MiB |      0%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">                                                                                         </span><br><span class="line">+-----------------------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                              |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |</span><br><span class="line">|        ID   ID                                                               Usage      |</span><br><span class="line">|=========================================================================================|</span><br><span class="line">+-----------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h1 id="vllm"><a href="#vllm" class="headerlink" title="vllm"></a>vllm</h1><h2 id="install-offline"><a href="#install-offline" class="headerlink" title="install offline"></a>install offline</h2><p>On your local machine, create a virtual environment:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 -m venv vllm_env</span><br><span class="line">source vllm_env/bin/activate</span><br></pre></td></tr></table></figure><p>1️⃣ <strong>On your local machine:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip download --dest=./vllm_deps vllm</span><br></pre></td></tr></table></figure><p>2️⃣ <strong>Transfer dependencies to the remote server:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r vllm_deps user@remote_server:/path/to/destination/</span><br></pre></td></tr></table></figure><p>3️⃣ <strong>On the remote server:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /path/to/destination/vllm_deps</span><br><span class="line">pip install --no-index --find-links=. vllm*</span><br><span class="line">•--no-index tells pip not to use the internet.</span><br><span class="line">•--find-links=./vllm_deps tells pip to look for packages in this directory.</span><br><span class="line">•vllm* ensures pip finds the correct package in that folder.</span><br></pre></td></tr></table></figure><h2 id="running-time"><a href="#running-time" class="headerlink" title="running time"></a>running time</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vllm serve /mnt/dingofs-test/DeepSeek-R1 --host 0.0.0.0 --port 8000 --served-model-name deepseek-r1 --tensor-parallel-size 8 --gpu-memory-utilization 0.85 --max-model-len 128000 --max-num-batched-tokens 32000 --max-num-seqs 1024 --trust-remote-code --enable-reasoning --reasoning-parser deepseek_r1</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">Sat Mar 15 20:33:04 2025       </span><br><span class="line">+-----------------------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 570.124.06             Driver Version: 570.124.06     CUDA Version: 12.8     |</span><br><span class="line">|-----------------------------------------+------------------------+----------------------+</span><br><span class="line">| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                                         |                        |               MIG M. |</span><br><span class="line">|=========================================+========================+======================|</span><br><span class="line">|   0  NVIDIA H200                    On  |   00000000:19:00.0 Off |                    0 |</span><br><span class="line">| N/A   26C    P0            115W /  700W |   84474MiB / 143771MiB |      1%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   1  NVIDIA H200                    On  |   00000000:3B:00.0 Off |                    0 |</span><br><span class="line">| N/A   24C    P0            113W /  700W |   84522MiB / 143771MiB |      1%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   2  NVIDIA H200                    On  |   00000000:4C:00.0 Off |                    0 |</span><br><span class="line">| N/A   26C    P0            114W /  700W |   84522MiB / 143771MiB |      1%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   3  NVIDIA H200                    On  |   00000000:5D:00.0 Off |                    0 |</span><br><span class="line">| N/A   27C    P0            117W /  700W |   84522MiB / 143771MiB |      1%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   4  NVIDIA H200                    On  |   00000000:9B:00.0 Off |                    0 |</span><br><span class="line">| N/A   27C    P0            114W /  700W |   84522MiB / 143771MiB |      1%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   5  NVIDIA H200                    On  |   00000000:BB:00.0 Off |                    0 |</span><br><span class="line">| N/A   26C    P0            116W /  700W |   84522MiB / 143771MiB |      1%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   6  NVIDIA H200                    On  |   00000000:CB:00.0 Off |                    0 |</span><br><span class="line">| N/A   27C    P0            115W /  700W |   84522MiB / 143771MiB |      1%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">|   7  NVIDIA H200                    On  |   00000000:DB:00.0 Off |                    0 |</span><br><span class="line">| N/A   26C    P0            114W /  700W |   84282MiB / 143771MiB |      1%      Default |</span><br><span class="line">|                                         |                        |             Disabled |</span><br><span class="line">+-----------------------------------------+------------------------+----------------------+</span><br><span class="line">                                                                                         </span><br><span class="line">+-----------------------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                              |</span><br><span class="line">|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |</span><br><span class="line">|        ID   ID                                                               Usage      |</span><br><span class="line">|=========================================================================================|</span><br><span class="line">|    0   N/A  N/A          915920      C   ...niconda3/envs/vllm/bin/python      84464MiB |</span><br><span class="line">|    1   N/A  N/A          916338      C   ...niconda3/envs/vllm/bin/python      84512MiB |</span><br><span class="line">|    2   N/A  N/A          916339      C   ...niconda3/envs/vllm/bin/python      84512MiB |</span><br><span class="line">|    3   N/A  N/A          916340      C   ...niconda3/envs/vllm/bin/python      84512MiB |</span><br><span class="line">|    4   N/A  N/A          916341      C   ...niconda3/envs/vllm/bin/python      84512MiB |</span><br><span class="line">|    5   N/A  N/A          916342      C   ...niconda3/envs/vllm/bin/python      84512MiB |</span><br><span class="line">|    6   N/A  N/A          916343      C   ...niconda3/envs/vllm/bin/python      84512MiB |</span><br><span class="line">|    7   N/A  N/A          916344      C   ...niconda3/envs/vllm/bin/python      84272MiB |</span><br><span class="line">+-----------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><ul><li><p>log</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INFO 03-15 20:36:48 worker.py:267] Memory profiling takes 7.63 seconds</span><br><span class="line">INFO 03-15 20:36:48 worker.py:267] the current vLLM instance can use total_gpu_memory (139.81GiB) x gpu_memory_utilization (0.85) = 118.84GiB</span><br><span class="line">INFO 03-15 20:36:48 worker.py:267] model weights take 83.88GiB; non_torch_memory takes 7.16GiB; PyTorch activation peak memory takes 6.37GiB; the rest of the memory reserved </span><br><span class="line">for KV Cache is 21.43GiB.</span><br><span class="line">INFO 03-15 20:36:48 executor_base.py:111] # cuda blocks: 18418, # CPU blocks: 3437</span><br><span class="line">INFO 03-15 20:36:48 executor_base.py:116] Maximum concurrency for 128000 tokens per request: 2.30x</span><br></pre></td></tr></table></figure></li><li><p>chat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8000/v1/chat/completions \</span><br><span class="line">    -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">    -d &#x27;&#123;</span><br><span class="line">        &quot;model&quot;: &quot;deepseek-r1&quot;,</span><br><span class="line">        &quot;messages&quot;: [</span><br><span class="line">            &#123;&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant.&quot;&#125;,</span><br><span class="line">            &#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;introduce yourself&quot;&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;&#x27;</span><br></pre></td></tr></table></figure></li></ul><h1 id="sglang"><a href="#sglang" class="headerlink" title="sglang"></a>sglang</h1><h2 id="install-offline-1"><a href="#install-offline-1" class="headerlink" title="install offline"></a>install offline</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> prepare env</span></span><br><span class="line">python3 -m venv sglang_env</span><br><span class="line">source sglang_env/bin/activate</span><br><span class="line"><span class="meta">#</span><span class="bash"> optional use uv</span></span><br><span class="line">pip install --upgrade pip</span><br><span class="line"><span class="meta">#</span><span class="bash">pip install uv</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> download deps</span></span><br><span class="line">mkdir -p ./sglang_deps</span><br><span class="line">pip download &quot;sglang[all]&gt;=0.4.4.post1&quot; --find-links https://flashinfer.ai/whl/cu124/torch2.5/flashinfer-python -d ./sglang_deps</span><br><span class="line"><span class="meta">#</span><span class="bash"> scp deps to remote</span></span><br><span class="line">scp -r sglang_deps user@remote_server:/path/to/destination/</span><br><span class="line"><span class="meta">#</span><span class="bash"> install sglang on remote</span></span><br><span class="line">cd /path/to/remote/sglang_deps</span><br><span class="line">pip install --no-index --find-links=. &quot;sglang[all]&gt;=0.4.4.post1&quot;</span><br></pre></td></tr></table></figure><h2 id="runtime"><a href="#runtime" class="headerlink" title="runtime"></a>runtime</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m sglang.launch_server --model /mnt/3fs/DeepSeek-R1 --tp 8 --trust-remote-code --port 30000</span><br></pre></td></tr></table></figure><ul><li><p>chat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:30000/v1/chat/completions \</span><br><span class="line">    -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">    -d &#x27;&#123;</span><br><span class="line">        &quot;model&quot;: &quot;deepseek-r1&quot;,</span><br><span class="line">        &quot;messages&quot;: [</span><br><span class="line">            &#123;&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant.&quot;&#125;,</span><br><span class="line">            &#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;introduce yourself&quot;&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;&#x27;</span><br></pre></td></tr></table></figure></li></ul><h1 id="torch"><a href="#torch" class="headerlink" title="torch"></a>torch</h1><h2 id="install-offline-2"><a href="#install-offline-2" class="headerlink" title="install offline"></a>install offline</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/torch_deps</span><br><span class="line">pip download --dest=~/torch_deps torch==2.5.1 --extra-index-url https://download.pytorch.org/whl/nightly/cu128</span><br><span class="line"></span><br><span class="line">scp -r ~/torch_deps user@remote_server:/path/to/remote/directory</span><br><span class="line">cd /path/to/remote/directory</span><br><span class="line">pip install --no-index --find-links=./ torch</span><br></pre></td></tr></table></figure><ul><li><p>check</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import torch; print(torch.cuda.is_available()); print(torch.cuda.device_count())&quot;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available())  <span class="comment"># print false</span></span><br><span class="line"><span class="built_in">print</span>(torch.cuda.device_count())  <span class="comment"># print 8</span></span><br><span class="line"><span class="built_in">print</span>(torch.__version__)  <span class="comment"># print 2.5.1+cu124</span></span><br><span class="line"><span class="built_in">print</span>(torch.version.cuda) <span class="comment"># print 12.4</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="best-practices"><a href="#best-practices" class="headerlink" title="best practices"></a>best practices</h1><h2 id="CUDA-LAUNCH-BLOCKING-1"><a href="#CUDA-LAUNCH-BLOCKING-1" class="headerlink" title="CUDA_LAUNCH_BLOCKING=1"></a><code>CUDA_LAUNCH_BLOCKING=1</code></h2><blockquote><p>CUDA_LAUNCH_BLOCKING=1 will tell CUDA: “Wait (block) for each GPU kernel to finish before moving to the next line of Python code.”</p></blockquote><p>Normally, CUDA operations are <strong>asynchronous</strong>—errors may not happen exactly where the code looks wrong, because the kernel may fail later. This can make debugging frustrating.</p><p>should never use it in production or performance benchmarking—just for debugging.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;version&quot;&gt;&lt;a href=&quot;#version&quot; class=&quot;headerlink&quot; title=&quot;version&quot;&gt;&lt;/a&gt;version&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="cuda" scheme="https://www.willshirley.top/categories/cuda/"/>
    
    
    <category term="nvidia" scheme="https://www.willshirley.top/tags/nvidia/"/>
    
  </entry>
  
  <entry>
    <title>k8s ctr</title>
    <link href="https://www.willshirley.top/2025/03/12/k8s%20ctr/"/>
    <id>https://www.willshirley.top/2025/03/12/k8s%20ctr/</id>
    <published>2025-03-12T07:59:26.000Z</published>
    <updated>2025-03-20T16:22:21.010Z</updated>
    
    <content type="html"><![CDATA[<h1 id="command"><a href="#command" class="headerlink" title="command"></a>command</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> check k8s image</span></span><br><span class="line">ctr --namespace k8s.io images list</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;command&quot;&gt;&lt;a href=&quot;#command&quot; class=&quot;headerlink&quot; title=&quot;command&quot;&gt;&lt;/a&gt;command&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="k8s" scheme="https://www.willshirley.top/categories/k8s/"/>
    
    
    <category term="ctr" scheme="https://www.willshirley.top/tags/ctr/"/>
    
  </entry>
  
  <entry>
    <title>network solution</title>
    <link href="https://www.willshirley.top/2025/03/10/network%20solution/"/>
    <id>https://www.willshirley.top/2025/03/10/network%20solution/</id>
    <published>2025-03-10T02:04:37.000Z</published>
    <updated>2025-04-30T10:09:30.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h1><h2 id="add-new-dns"><a href="#add-new-dns" class="headerlink" title="add new dns"></a>add new dns</h2><ul><li><p>method 1:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step1: vim /etc/systemd/resolved.conf</span></span><br><span class="line">[<span class="string">Resolve</span>]</span><br><span class="line"><span class="string">DNS=10.201.44.51</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span>  <span class="comment"># new DNS</span></span><br><span class="line"><span class="string">FallbackDNS=127.0.0.53</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># step2: restart service</span></span><br><span class="line"><span class="string">sudo</span> <span class="string">systemctl</span> <span class="string">restart</span> <span class="string">systemd-resolved</span></span><br></pre></td></tr></table></figure></li><li><p>method2: (有时候不起效)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/etc/resolv.conf</span></span><br><span class="line"><span class="comment"># 注意：添加的dns解析地址，需要放在前面，会有顺序影响</span></span><br><span class="line"></span><br><span class="line"><span class="string">nameserver</span> <span class="number">10.201</span><span class="number">.44</span><span class="number">.51</span>  <span class="comment"># new DNS</span></span><br><span class="line"><span class="string">nameserver</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span><span class="comment"># new DNS</span></span><br><span class="line"><span class="string">nameserver</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.53</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="network"><a href="#network" class="headerlink" title="network"></a>network</h1><h2 id="create-new-network"><a href="#create-new-network" class="headerlink" title="create new network"></a>create new network</h2><p>step1: vim <code>/etc/netplan/ib.yaml</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    ibp27s0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      addresses:</span><br><span class="line">        - 192.168.2.52/21</span><br></pre></td></tr></table></figure><p>step2: <code>netplan apply</code></p><h1 id="bond"><a href="#bond" class="headerlink" title="bond"></a>bond</h1><h2 id="create-bond"><a href="#create-bond" class="headerlink" title="create bond"></a>create bond</h2><p>Bonding Mode</p><table><thead><tr><th>Mode</th><th>Max Speed (Single Flow)</th><th>Max Speed (Multiple Flows)</th><th>Key Feature</th></tr></thead><tbody><tr><td>mode=0 (round-robin)</td><td>Sum of all slaves</td><td>Sum of all slaves</td><td>Best for maximizing bandwidth, may cause out-of-order packets.</td></tr><tr><td>mode=1 (active-backup)</td><td>One interface’s speed</td><td>One interface’s speed</td><td>Best for redundancy, no speed gain.</td></tr><tr><td>mode=2 (balance-xor)</td><td>One interface’s speed</td><td>Sum of all slaves</td><td>Good for performance; switch support required.</td></tr><tr><td>mode=4 (802.3ad - LACP)</td><td>One interface’s speed</td><td>Sum of all slaves</td><td>Efficient load balancing for multiple flows; requires switch support.</td></tr><tr><td>mode=5 (balance-tlb)</td><td>One interface’s speed</td><td>Sum of all slaves (outgoing only)</td><td>Adaptive transmit load balancing.</td></tr><tr><td>mode=6 (balance-alb)</td><td>One interface’s speed</td><td>Sum of all slaves</td><td>Adaptive load balancing without switch support.</td></tr></tbody></table><blockquote><p> assume make ib7s400p0 to bond1, which have assigned  ip 172.30.12.46 with ib7s400p0</p></blockquote><p><strong>optional</strong>: Load the Bonding Kernel Module</p><p>Ensure the bonding driver is loaded:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo modprobe bonding</span><br></pre></td></tr></table></figure><p>To persist this across reboots:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;bonding&quot; | sudo tee /etc/modules-load.d/bonding.conf</span><br></pre></td></tr></table></figure><p><strong>optional</strong>: Remove the IP Address from ib7s400p0</p><p>Since the bond interface will carry the IP, you must remove the IP from ib7s400p0 first:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip addr del 172.30.12.61/24 dev ib7s400p0</span><br></pre></td></tr></table></figure><p><strong>Step 2: Create the Bond Interface (bond1)</strong></p><p>Create the bond interface:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip link add bond1 type bond</span><br></pre></td></tr></table></figure><p><strong>Step 3: Configure Bonding Mode</strong></p><p>For your use case, you can set mode=active-backup (best for redundancy with one NIC now) or mode=802.3ad (if planning for LACP in the future).</p><p><strong>Set Active-Backup Mode (Recommended for 1 NIC Now)</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;active-backup&quot; | sudo tee /sys/class/net/bond1/bonding/mode</span><br></pre></td></tr></table></figure><p><strong>OR Set 802.3ad Mode (If Future Expansion is Planned)</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;802.3ad&quot; | sudo tee /sys/class/net/bond1/bonding/mode</span><br></pre></td></tr></table></figure><p><strong>Step 4: Add ib7s400p0 as a Slave</strong></p><ol><li>Remove any IP address from ib7s400p0 (if it has one):</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip addr flush dev ib7s400p0</span><br></pre></td></tr></table></figure><ol start="2"><li>Add ib7s400p0 to bond1:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo ip link set ib7s400p0 down</span><br><span class="line">sudo ip link set ib7s400p0 master bond1</span><br><span class="line">sudo ip link set ib7s400p0 up</span><br></pre></td></tr></table></figure><blockquote><p>check: ethtool ib7s400p0</p></blockquote><ol start="3"><li>Bring bond1 up:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip link set bond1 up</span><br></pre></td></tr></table></figure><blockquote><p>check: cat /proc/net/bonding/bond1</p></blockquote><p><strong>Step 5: Assign an IP Address</strong></p><p>If using a <strong>static IP</strong>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip addr add 172.30.12.61/24 dev bond1</span><br></pre></td></tr></table></figure><p>Or if using <strong>DHCP</strong>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dhclient bond1</span><br></pre></td></tr></table></figure><p>Try to force traffic through bond1 by removing the direct route through ib7s400p0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route del 172.30.12.0/24 dev ib7s400p0</span><br></pre></td></tr></table></figure><p><strong>Step 6: Persistent Configuration (Rocky 9 / RHEL 9) (optional)</strong></p><p>To ensure the bond configuration persists after reboot:</p><ol><li>Create <code>/etc/sysconfig/network-scripts/ifcfg-bond1</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=bond1</span><br><span class="line">TYPE=Bond</span><br><span class="line">BONDING_MASTER=yes</span><br><span class="line">BOOTPROTO=dhcp      # Or use &#x27;static&#x27; if assigning a static IP</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BONDING_OPTS=&quot;mode=active-backup miimon=100&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>Create <code>/etc/sysconfig/network-scripts/ifcfg-ib7s400p0</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=ib7s400p0</span><br><span class="line">MASTER=bond1</span><br><span class="line">SLAVE=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">ONBOOT=yes</span><br></pre></td></tr></table></figure><ol start="3"><li>Restart NetworkManager to apply changes:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart NetworkManager</span><br></pre></td></tr></table></figure><p><strong>Step 7: Verify Configuration</strong></p><ol><li>Check bond details:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/net/bonding/bond1</span><br></pre></td></tr></table></figure><p>ib7s400p0 should now appear as a <strong>Slave Interface</strong>.</p><ol start="2"><li>Confirm IP address and route:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br><span class="line">ip route</span><br></pre></td></tr></table></figure><ol start="3"><li>Test connectivity:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 172.30.12.47 # other same bond addr</span><br></pre></td></tr></table></figure><p><strong>Step 8: Optional - Test Failover (For active-backup Mode)</strong></p><p>​    1.    Temporarily bring down ib7s400p0:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip link set ib7s400p0 down</span><br></pre></td></tr></table></figure><p>​    2.    Check bond1 status:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/net/bonding/bond1</span><br></pre></td></tr></table></figure><p>In active-backup mode, bond1 should remain active (even though ib7s400p0 is down).</p><p>In 802.3ad mode, bond1 would go down since no alternate NIC exists yet.</p><p><strong>Summary</strong></p><p>Use <strong>active-backup</strong> mode if ib7s400p0 is the only slave (recommended now).</p><p>Use <strong>802.3ad</strong> if planning to add more NICs for higher throughput in the future.</p><p>Ensure <code>/etc/sysconfig/network-scripts/</code> configs are properly set for persistence.</p><h1 id="ibtables"><a href="#ibtables" class="headerlink" title="ibtables"></a>ibtables</h1><h2 id="remove-specify-rule"><a href="#remove-specify-rule" class="headerlink" title="remove specify rule"></a>remove specify rule</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> check iptables</span></span><br><span class="line">sudo iptables -L -n -v</span><br><span class="line"><span class="meta">#</span><span class="bash"> check nftables</span></span><br><span class="line">sudo nft list ruleset</span><br></pre></td></tr></table></figure><p>To remove the <code>reject-with icmp-host-prohibited</code> rule and allow <strong>all incoming traffic</strong> from external servers, follow these steps. This will disable the firewall’s default rejection of unmatched traffic.</p><p><strong>Step 1: Remove the <code>REJECT</code> Rule in <code>iptables</code></strong></p><p>First, identify and delete the explicit <code>REJECT</code> rule in the <code>INPUT</code> chain.</p><p>Check current <code>iptables</code> rules (look for the <code>REJECT</code> line):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -L INPUT -n --line-numbers</span><br></pre></td></tr></table></figure><p>Example output:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">num  target     prot opt source               destination</span><br><span class="line">...</span><br><span class="line">5    REJECT     all  --  0.0.0.0/0            0.0.0.0/0            reject-with icmp-host-prohibited</span><br></pre></td></tr></table></figure><p>Delete the rule by its line number (e.g., line <code>5</code>):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -D INPUT 5</span><br></pre></td></tr></table></figure><p><strong>Step 2: Set Default Policy to <code>ACCEPT</code> (Optional)</strong></p><p>If you want to <strong>allow all traffic by default</strong> (not recommended for security), set the <code>INPUT</code> chain policy to <code>ACCEPT</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -P INPUT ACCEPT</span><br></pre></td></tr></table></figure><p><strong>Step 3: Save the Rules (Persist Across Reboots)</strong></p><p>Save the changes to ensure they survive a reboot.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># On CentOS/RHEL 7 or systems using iptables-service:</span></span><br><span class="line">sudo service iptables save</span><br><span class="line"><span class="comment"># On Debian/Ubuntu with iptables-persistent:</span></span><br><span class="line">sudo netfilter-persistent save</span><br></pre></td></tr></table></figure><h1 id="nftables"><a href="#nftables" class="headerlink" title="nftables"></a>nftables</h1><h2 id="Accept-ALL-INPUT"><a href="#Accept-ALL-INPUT" class="headerlink" title="Accept ALL INPUT"></a>Accept ALL INPUT</h2><p>For systems using <code>nftables</code> (modern Linux):</p><p>If your system uses <code>nftables</code> , flush all rules and set a default <code>ACCEPT</code> policy:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Flush existing rules</span></span><br><span class="line">sudo nft flush ruleset</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set default policies to ACCEPT</span></span><br><span class="line">sudo nft add table ip filter</span><br><span class="line">sudo nft add chain ip filter INPUT &#123; <span class="built_in">type</span> filter hook input priority 0 \; policy accept \; &#125;</span><br><span class="line">sudo nft add chain ip filter FORWARD &#123; <span class="built_in">type</span> filter hook forward priority 0 \; policy accept \; &#125;</span><br><span class="line">sudo nft add chain ip filter OUTPUT &#123; <span class="built_in">type</span> filter hook output priority 0 \; policy accept \; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save rules</span></span><br><span class="line">sudo nft list ruleset &gt; /etc/nftables.conf</span><br></pre></td></tr></table></figure><p><strong>Step 4: Verify the Rules</strong></p><p>Confirm the <code>REJECT</code> rule is gone and traffic is allowed:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -L INPUT -n</span><br><span class="line"><span class="comment"># OR for nftables:</span></span><br><span class="line">sudo nft list ruleset</span><br></pre></td></tr></table></figure><p><strong>Important Notes</strong></p><ul><li><strong>Security Warning</strong>: Disabling firewall rules entirely (<code>ACCEPT</code> policy) exposes your server to all traffic. Only do this in trusted environments.</li><li>If you only want to allow specific ports (e.g., <code>6800</code>), use targeted rules instead of disabling the firewall:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo iptables -I INPUT -p tcp --dport 6800 -j ACCEPT</span><br><span class="line">sudo netfilter-persistent save</span><br></pre></td></tr></table></figure></li><li>The <code>icmp-host-prohibited</code> rejection is part of the <code>iptables</code> rules, not a separate service. Deleting the rule (Step 1) is sufficient to stop the blocking.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DNS&quot;&gt;&lt;a href=&quot;#DNS&quot; class=&quot;headerlink&quot; title=&quot;DNS&quot;&gt;&lt;/a&gt;DNS&lt;/h1&gt;&lt;h2 id=&quot;add-new-dns&quot;&gt;&lt;a href=&quot;#add-new-dns&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="network" scheme="https://www.willshirley.top/categories/network/"/>
    
    
    <category term="solution" scheme="https://www.willshirley.top/tags/solution/"/>
    
  </entry>
  
  <entry>
    <title>llm vllm</title>
    <link href="https://www.willshirley.top/2025/03/06/llm%20vllm/"/>
    <id>https://www.willshirley.top/2025/03/06/llm%20vllm/</id>
    <published>2025-03-06T07:25:11.000Z</published>
    <updated>2025-03-06T07:28:51.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="route"><a href="#route" class="headerlink" title="route"></a>route</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">INFO llm_engine.py:436] init engine (profile, create kv cache, warmup model) took 135.23 seconds</span><br><span class="line">INFO api_server.py:958] Starting vLLM API server on http://0.0.0.0:8000</span><br><span class="line">Available routes are:</span><br><span class="line"> Route: /openapi.json, Methods: GET, HEAD</span><br><span class="line"> Route: /docs, Methods: GET, HEAD</span><br><span class="line"> Route: /docs/oauth2-redirect, Methods: GET, HEAD</span><br><span class="line"> Route: /redoc, Methods: GET, HEAD</span><br><span class="line"> Route: /health, Methods: GET</span><br><span class="line"> Route: /ping, Methods: GET, POST</span><br><span class="line"> Route: /tokenize, Methods: POST</span><br><span class="line"> Route: /detokenize, Methods: POST</span><br><span class="line"> Route: /v1/models, Methods: GET</span><br><span class="line"> Route: /version, Methods: GET</span><br><span class="line"> Route: /v1/chat/completions, Methods: POST</span><br><span class="line"> Route: /v1/completions, Methods: POST</span><br><span class="line"> Route: /v1/embeddings, Methods: POST</span><br><span class="line"> Route: /pooling, Methods: POST</span><br><span class="line"> Route: /score, Methods: POST</span><br><span class="line"> Route: /v1/score, Methods: POST</span><br><span class="line"> Route: /v1/audio/transcriptions, Methods: POST</span><br><span class="line"> Route: /rerank, Methods: POST</span><br><span class="line"> Route: /v1/rerank, Methods: POST</span><br><span class="line"> Route: /v2/rerank, Methods: POST</span><br><span class="line"> Route: /invocations, Methods: POST</span><br><span class="line">INFO:     Started server process [1]</span><br><span class="line">INFO:     Waiting for application startup.</span><br><span class="line">INFO:     Application startup complete.</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;route&quot;&gt;&lt;a href=&quot;#route&quot; class=&quot;headerlink&quot; title=&quot;route&quot;&gt;&lt;/a&gt;route&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="llm" scheme="https://www.willshirley.top/categories/llm/"/>
    
    
    <category term="sinppet" scheme="https://www.willshirley.top/tags/sinppet/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes RBAC</title>
    <link href="https://www.willshirley.top/2025/03/01/kubernetes%20RBAC/"/>
    <id>https://www.willshirley.top/2025/03/01/kubernetes%20RBAC/</id>
    <published>2025-03-01T11:48:15.000Z</published>
    <updated>2025-03-01T12:20:55.733Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>RBAC (Role-Based Access Control) in Kubernetes is a security model that controls who can access and perform actions on resources (like Pods, Deployments, Services, etc.) within a cluster.</p></blockquote><h1 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h1><p>Kubernetes RBAC consists of four main components:</p><table><thead><tr><th>Component</th><th>Description</th></tr></thead><tbody><tr><td>Role / ClusterRole</td><td>Defines what actions (verbs) can be performed on which resources.</td></tr><tr><td>RoleBinding / ClusterRoleBinding</td><td>Grants a Role or ClusterRole to a User, Group, or ServiceAccount.</td></tr><tr><td>Subjects (Users, Groups, ServiceAccounts)</td><td>Who is allowed to perform actions (User, Group, or ServiceAccount).</td></tr><tr><td>Resources &amp; API Groups</td><td>The objects that can be controlled (e.g., pods, deployments, services, etc.).</td></tr></tbody></table><h2 id="Role-amp-ClusterRole"><a href="#Role-amp-ClusterRole" class="headerlink" title="Role &amp; ClusterRole"></a>Role &amp; ClusterRole</h2><blockquote><p>RBAC defines what actions can be performed on which resources using Roles and ClusterRoles.</p></blockquote><h3 id="Role"><a href="#Role" class="headerlink" title="Role"></a>Role</h3><blockquote><p>A Role is used for namespace-scoped access control.</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">my-namespace</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br></pre></td></tr></table></figure><p>✅ This Role allows a user to view (get, list, watch) Pods only in the namespace my-namespace.</p><p>❌ This does not grant access to other namespaces.</p><h3 id="ClusterRole"><a href="#ClusterRole" class="headerlink" title="ClusterRole"></a>ClusterRole</h3><blockquote><p> A ClusterRole is used for cluster-wide permissions or permissions across all namespaces.</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-pod-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br></pre></td></tr></table></figure><p>✅ This allows viewing (get, list, watch) Pods in all namespaces.</p><h2 id="RoleBinding-amp-ClusterRoleBinding"><a href="#RoleBinding-amp-ClusterRoleBinding" class="headerlink" title="RoleBinding &amp; ClusterRoleBinding"></a>RoleBinding &amp; ClusterRoleBinding</h2><blockquote><p>Who Gets These Permissions?</p></blockquote><h3 id="RoleBinding"><a href="#RoleBinding" class="headerlink" title="RoleBinding"></a>RoleBinding</h3><blockquote><p>A RoleBinding assigns a Role to a specific user, group, or ServiceAccount in a namespace.</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader-binding</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">my-namespace</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-user</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><p>✅ This binds the pod-reader Role to my-user in the my-namespace namespace.</p><p>❌ It does not grant permissions outside my-namespace.</p><h3 id="ClusterRoleBinding"><a href="#ClusterRoleBinding" class="headerlink" title="ClusterRoleBinding"></a>ClusterRoleBinding</h3><blockquote><p>A ClusterRoleBinding assigns a ClusterRole to a User, Group, or ServiceAccount across all namespaces.</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-pod-reader-binding</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-user</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-pod-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><p>✅ This grants my-user access to Pods across all namespaces.</p><h2 id="Subjects"><a href="#Subjects" class="headerlink" title="Subjects"></a>Subjects</h2><blockquote><p>A RoleBinding or ClusterRoleBinding grants permissions to a subject, which can be:</p></blockquote><table><thead><tr><th>Subject Type</th><th>Description</th></tr></thead><tbody><tr><td>User</td><td>A real human user (external identity).</td></tr><tr><td>Group</td><td>A group of users (e.g., dev-team).</td></tr><tr><td>ServiceAccount</td><td>An internal Kubernetes identity for a Pod or Controller.</td></tr></tbody></table><p>Example: Binding a ServiceAccount (my-sa) to a Role</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-sa</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">my-namespace</span></span><br></pre></td></tr></table></figure><h2 id="API-Groups-amp-Resources"><a href="#API-Groups-amp-Resources" class="headerlink" title="API Groups &amp; Resources"></a>API Groups &amp; Resources</h2><p>Each RBAC rule specifies which resources in which API groups can be accessed.</p><table><thead><tr><th>API Group</th><th>Resources Example</th></tr></thead><tbody><tr><td>“” (core)</td><td>pods, services, nodes</td></tr><tr><td>apps</td><td>deployments, daemonsets</td></tr><tr><td>batch</td><td>jobs, cronjobs</td></tr><tr><td>rbac.authorization.k8s.io</td><td>roles, rolebindings, clusterroles, clusterrolebindings</td></tr></tbody></table><p>Example: Allow Access to Pods, Deployments, and Nodes</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>, <span class="string">&quot;services&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;apps&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;deployments&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;nodes&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>]</span><br></pre></td></tr></table></figure><p>✅ Allows reading Pods and Services (core API group).</p><p>✅ Allows reading Deployments (apps API group).</p><p>✅ Allows reading Nodes (core API group).</p><h1 id="Works-Scenario"><a href="#Works-Scenario" class="headerlink" title="Works Scenario"></a>Works Scenario</h1><h2 id="Scenario-1"><a href="#Scenario-1" class="headerlink" title="Scenario 1"></a>Scenario 1</h2><p>Use Case:</p><ul><li><p>A user (dev-user) needs read-only access to Pods in the dev namespace.</p></li><li><p>The ServiceAccount (cicd-runner-sa) needs to create Deployments in the cicd namespace.</p></li></ul><p>Solution: Define the RBAC Rules</p><ol><li>Create a Role for Read-Only Pod Access in dev Namespace</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br></pre></td></tr></table></figure><ol start="2"><li>Bind the Role to dev-user in dev Namespace</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader-binding</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev-user</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><ol start="3"><li>Create a Role for cicd-runner-sa to Deploy Apps in cicd Namespace</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-creator</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cicd</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;apps&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;deployments&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;delete&quot;</span>]</span><br></pre></td></tr></table></figure><ol start="4"><li>Bind the Role to the cicd-runner-sa ServiceAccount</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cicd-runner-binding</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cicd</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cicd-runner-sa</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">cicd</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deployment-creator</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><h2 id="Scenario-2"><a href="#Scenario-2" class="headerlink" title="Scenario 2"></a>Scenario 2</h2><p>Scenario: Grant Read-Only Access to Pods Across Multiple Namespaces</p><p>Use Case:</p><ul><li><p>A developer team needs read-only access to Pods in multiple namespaces (dev, staging, prod).</p></li><li><p>Instead of creating separate Roles in each namespace, we use one ClusterRole.</p></li><li><p>We then create RoleBindings in each namespace to assign the ClusterRole.</p></li></ul><ol><li>Create a ClusterRole to Read Pods Across Namespaces</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">multi-namespace-pod-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br></pre></td></tr></table></figure><ol start="2"><li>Bind the ClusterRole to a User for Multiple Namespaces</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">multi-namespace-pod-reader-binding</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">developer-user</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">multi-namespace-pod-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><h1 id="Recap"><a href="#Recap" class="headerlink" title="Recap"></a>Recap</h1><p>Key Takeaways from Kubernetes RBAC Architecture</p><ol><li><p>Role / ClusterRole → Defines permissions (what actions are allowed?).</p></li><li><p>RoleBinding / ClusterRoleBinding → Assigns permissions (who gets access?).</p></li><li><p>Subjects → Users, Groups, ServiceAccounts (who is authorized?).</p></li><li><p>API Groups → Determines resources that can be controlled.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;RBAC (Role-Based Access Control) in Kubernetes is a security model that controls who can access and perform actions on resou</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://www.willshirley.top/categories/Kubernetes/"/>
    
    
    <category term="RBAC" scheme="https://www.willshirley.top/tags/RBAC/"/>
    
  </entry>
  
  <entry>
    <title>podman snippet</title>
    <link href="https://www.willshirley.top/2025/02/10/podman%20snippet/"/>
    <id>https://www.willshirley.top/2025/02/10/podman%20snippet/</id>
    <published>2025-02-10T08:06:03.000Z</published>
    <updated>2025-06-03T08:54:37.610Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>不同用户下执行 <code>podman ps</code>，只能查看当前用户的运行容器（即使是root用户，也不能查看其他普通用户启用的容器信息）</p></blockquote><h1 id="command"><a href="#command" class="headerlink" title="command"></a>command</h1><h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> load tar file to image</span></span><br><span class="line">podman load -i &lt;image-tar-file&gt;</span><br></pre></td></tr></table></figure><h1 id="best-practices"><a href="#best-practices" class="headerlink" title="best practices"></a>best practices</h1><h2 id="change-default-data-dir"><a href="#change-default-data-dir" class="headerlink" title="change default data dir"></a>change default data dir</h2><ul><li><p><strong>rootful mode</strong> </p><blockquote><p>Default graphroot: /var/lib/containers/storage.</p></blockquote></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> check</span></span><br><span class="line">podman info | grep &#x27;GraphRoot&#x27;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Edit Podman’s Storage Configuration</span></span><br><span class="line">sudo mkdir -p /etc/containers</span><br><span class="line">sudo vim /etc/containers/storage.conf # root用户默认采用的配置</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> edit storage.conf</span></span><br><span class="line">[storage]</span><br><span class="line">driver = &quot;overlay&quot;</span><br><span class="line">graphroot = &quot;/mnt/podman-root-data&quot;</span><br></pre></td></tr></table></figure><ul><li><p><strong>rootless mode</strong></p><blockquote><p>Default graphroot: ~/.local/share/containers/storage.</p></blockquote></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> check</span></span><br><span class="line">podman info | grep &#x27;GraphRoot&#x27;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Edit Podman’s Storage Configuration</span></span><br><span class="line">sudo mkdir -p ~/.config/containers</span><br><span class="line">sudo vim ~/.config/containers/storage.conf   # 普通用户默认采用的配置</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> edit storge.conf</span></span><br><span class="line">[storage]</span><br><span class="line">driver = &quot;overlay&quot;</span><br><span class="line">graphroot = &quot;/mnt/podman-&lt;userName&gt;-data&quot; # 普通用户和root用户的数据必须要区分开，不然会有目录权限操作的问题</span><br></pre></td></tr></table></figure><h1 id="troubleshooting"><a href="#troubleshooting" class="headerlink" title="troubleshooting"></a>troubleshooting</h1><h2 id="potentially-insufficient-UIDs-or-GIDs-available-in-user-namespace"><a href="#potentially-insufficient-UIDs-or-GIDs-available-in-user-namespace" class="headerlink" title="potentially insufficient UIDs or GIDs available in user namespace"></a>potentially insufficient UIDs or GIDs available in user namespace</h2><blockquote><p> If the requested UID/GID still falls outside or Podman needs more mappings, you can edit /etc/subuid and /etc/subgid (as root) to increase the range</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Increase UID/GID Range (Optional):</span></span><br><span class="line">sudo vim /etc/subuid  # dingofs:60000:131072</span><br><span class="line">sudo vim /etc/subgid  # dingofs:60000:131072</span><br><span class="line"></span><br><span class="line">podman system migrate</span><br></pre></td></tr></table></figure><h2 id="error-while-loading-shared-libraries"><a href="#error-while-loading-shared-libraries" class="headerlink" title="error while loading shared libraries"></a>error while loading shared libraries</h2><blockquote><p>when execute ‘podman run -it –entrypoint bash xxx’, occur ‘bash: error while loading shared libraries: /usr/lib64/libc.so.6: cannot apply additional memory protection after relocation: Permission denied’</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo setenforce 0</span><br></pre></td></tr></table></figure><h2 id="ulimit-open-files-cannot-modify-limit-Operation-not-permitted"><a href="#ulimit-open-files-cannot-modify-limit-Operation-not-permitted" class="headerlink" title="ulimit: open files: cannot modify limit: Operation not permitted"></a>ulimit: open files: cannot modify limit: Operation not permitted</h2><blockquote><p>use regular use could not operate ulimit command</p></blockquote><ol><li><p>Set ulimit when starting the container</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">podman run -it --ulimit nofile=1048576:1048576 your_image</span><br></pre></td></tr></table></figure></li><li><p>Adjust host user limits (Edit <code>/etc/security/limits.conf</code> as root)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">your_username soft nofile 1048576</span><br><span class="line">your_username hard nofile 1048576</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;不同用户下执行 &lt;code&gt;podman ps&lt;/code&gt;，只能查看当前用户的运行容器（即使是root用户，也不能查看其他普通用户启用的容器信息）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;command&quot;&gt;&lt;a href=&quot;#comm</summary>
      
    
    
    
    <category term="podman" scheme="https://www.willshirley.top/categories/podman/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>ceph rados</title>
    <link href="https://www.willshirley.top/2025/02/08/ceph%20rados/"/>
    <id>https://www.willshirley.top/2025/02/08/ceph%20rados/</id>
    <published>2025-02-08T03:40:20.000Z</published>
    <updated>2025-02-08T10:12:34.786Z</updated>
    
    <content type="html"><![CDATA[<p>The <a href="https://docs.ceph.com/en/reef/glossary/#term-Ceph-Storage-Cluster">Ceph Storage Cluster</a> provides the basic storage service that allows <a href="https://docs.ceph.com/en/reef/glossary/#term-Ceph">Ceph</a> to uniquely deliver <strong>object, block, and file storage</strong> in one unified system. However, you are not limited to using the RESTful, block, or POSIX interfaces. Based upon RADOS, the <code>librados</code> API enables you to create your own interface to the Ceph Storage Cluster.</p><h1 id="command"><a href="#command" class="headerlink" title="command"></a>command</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> list objects by specify pool</span></span><br><span class="line">rados -p &lt;pool-name&gt; ls</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">read</span> object</span></span><br><span class="line">rados -p &lt;pool-name&gt; get &lt;object-name&gt; output.txt</span><br><span class="line">cat output.txt</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Check xattr value</span></span><br><span class="line">rados -p &lt;pool-name&gt; getxattr &lt;object-name&gt; &lt;xattr-key&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;The &lt;a href=&quot;https://docs.ceph.com/en/reef/glossary/#term-Ceph-Storage-Cluster&quot;&gt;Ceph Storage Cluster&lt;/a&gt; provides the basic storage servi</summary>
      
    
    
    
    <category term="ceph" scheme="https://www.willshirley.top/categories/ceph/"/>
    
    
    <category term="storage" scheme="https://www.willshirley.top/tags/storage/"/>
    
  </entry>
  
  <entry>
    <title>ceph deploy</title>
    <link href="https://www.willshirley.top/2025/02/07/ceph%20deploy/"/>
    <id>https://www.willshirley.top/2025/02/07/ceph%20deploy/</id>
    <published>2025-02-07T09:40:41.000Z</published>
    <updated>2025-06-19T11:20:47.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h1><h2 id="install-cephadm"><a href="#install-cephadm" class="headerlink" title="install cephadm"></a>install cephadm</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dnf search release-ceph</span><br><span class="line">dnf install --assumeyes centos-release-ceph-reef</span><br><span class="line">dnf install --assumeyes cephadm</span><br></pre></td></tr></table></figure><h3 id="enable-ceph-cli"><a href="#enable-ceph-cli" class="headerlink" title="enable ceph cli"></a>enable ceph cli</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cephadm add-repo --release reef</span><br><span class="line">cephadm install ceph-common</span><br></pre></td></tr></table></figure><p><strong>troubleshooting</strong></p><ul><li><p><code>yum: stderr  - nothing provides libcrypto.so.3(OPENSSL_3.4.0)(64bit) needed by ceph-common-2:18.2.7-2.el9s.x86_64 from centos-ceph-reef</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ceph-common --nobest</span><br></pre></td></tr></table></figure></li></ul><h2 id="booststrap"><a href="#booststrap" class="headerlink" title="booststrap"></a>booststrap</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cephadm bootstrap --mon-ip 172.20.7.232</span><br></pre></td></tr></table></figure><ul><li>log<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Ceph Dashboard is now available at:</span><br><span class="line">        URL: https://dingo7232.com:8443/</span><br><span class="line">        User: admin</span><br><span class="line">    Password: &lt;password&gt;</span><br><span class="line">Enabling client.admin keyring and conf on hosts with &quot;admin&quot; label</span><br><span class="line">Saving cluster configuration to /var/lib/ceph/6a65c746-e532-11ef-8ac2-fa7c097efb00/config directory</span><br><span class="line">Enabling autotune for osd_memory_target</span><br><span class="line">You can access the Ceph CLI as following in case of multi-cluster or non-default config:</span><br><span class="line">        sudo /sbin/cephadm shell --fsid 6a65c746-e532-11ef-8ac2-fa7c097efb00 -c /etc/ceph/ceph.conf -k /etc/ceph/ceph.client.admin.keyring</span><br><span class="line">Or, if you are only running a single cluster on this host:</span><br><span class="line">        sudo /sbin/cephadm shell</span><br><span class="line">Please consider enabling telemetry to help improve Ceph:</span><br><span class="line">        ceph telemetry on</span><br><span class="line">For more information see:</span><br><span class="line">        https://docs.ceph.com/en/latest/mgr/telemetry/</span><br><span class="line">Bootstrap complete.</span><br></pre></td></tr></table></figure></li></ul><h2 id="add-hosts"><a href="#add-hosts" class="headerlink" title="add hosts"></a>add hosts</h2><ul><li><p>Install the cluster’s public SSH key in the new host’s root user’s authorized_keys file:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -f -i /etc/ceph/ceph.pub root@dingo7233</span><br><span class="line">ssh-copy-id -f -i /etc/ceph/ceph.pub root@dingo7234</span><br></pre></td></tr></table></figure></li><li><p>Tell Ceph that the new node is part of the cluster</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ceph orch host add *&lt;newhost&gt;* [*&lt;ip&gt;*] [*&lt;label1&gt; ...*]</span></span><br><span class="line">ceph orch host add dingo7233 172.20.7.233</span><br><span class="line">ceph orch host add dingo7234 172.20.7.234</span><br><span class="line">or</span><br><span class="line">ceph orch host add dingo7233 172.20.7.233 --labels _admin</span><br><span class="line">ceph orch host add dingo7234 172.20.7.234 --labels _admin</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> after add host, should <span class="built_in">wait</span> some minutes <span class="keyword">for</span> host<span class="string">&#x27;s container bootstrap</span></span></span><br></pre></td></tr></table></figure></li><li><p>add label (optional)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph orch host label add dingo7233 _admin</span><br><span class="line">ceph orch host label add dingo7234 _admin</span><br></pre></td></tr></table></figure></li><li><p>list hosts</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph orch host ls --detail</span><br></pre></td></tr></table></figure></li></ul><h2 id="deploy-osd"><a href="#deploy-osd" class="headerlink" title="deploy osd"></a>deploy osd</h2><ul><li><p>check available devices</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph orch device ls</span><br></pre></td></tr></table></figure></li><li><p>apply osd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph orch apply osd --all-available-devices</span><br><span class="line"><span class="meta">#</span><span class="bash"> or add specify device</span></span><br><span class="line">ceph orch daemon add osd dingo-dongwei-1:/dev/vdc</span><br></pre></td></tr></table></figure></li></ul><h2 id="deploy-rgw"><a href="#deploy-rgw" class="headerlink" title="deploy rgw"></a>deploy rgw</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> to deploy 2 RGW daemons (the default)</span> </span><br><span class="line">ceph orch apply rgw &lt;rgwName&gt;</span><br><span class="line">or </span><br><span class="line"><span class="meta">#</span><span class="bash"> apply specify host with rgw</span></span><br><span class="line">ceph orch host label add &lt;hostName&gt; &lt;labelName&gt;  # the labelName could be &#x27;rgw&#x27; label or any other name</span><br><span class="line">ceph orch apply rgw &lt;rgwName&gt; &#x27;--placement=label:&lt;labelName&gt; count-per-host:2&#x27; --port=8000</span><br></pre></td></tr></table></figure><h1 id="check"><a href="#check" class="headerlink" title="check"></a>check</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ceph status</span></span><br><span class="line">cluster:</span><br><span class="line">    id:     6a65c746-e532-11ef-8ac2-fa7c097efb00</span><br><span class="line">    health: HEALTH_WARN</span><br><span class="line">            1 mgr modules have recently crashed</span><br><span class="line"></span><br><span class="line">  services:</span><br><span class="line">    mon: 3 daemons, quorum dingo7232,dingo7234,dingo7233 (age 16m)</span><br><span class="line">    mgr: dingo7232.znvodw(active, since 24m), standbys: dingo7234.yenqrt</span><br><span class="line">    osd: 3 osds: 3 up (since 15m), 3 in (since 15m)</span><br><span class="line"></span><br><span class="line">  data:</span><br><span class="line">    pools:   1 pools, 1 pgs</span><br><span class="line">    objects: 2 objects, 449 KiB</span><br><span class="line">    usage:   81 MiB used, 600 GiB / 600 GiB avail</span><br><span class="line">    pgs:     1 active+clean</span><br></pre></td></tr></table></figure><h1 id="thouble-shooting"><a href="#thouble-shooting" class="headerlink" title="thouble shooting"></a>thouble shooting</h1><h2 id="redeploy-cluster"><a href="#redeploy-cluster" class="headerlink" title="redeploy cluster"></a>redeploy cluster</h2><p>To remove an existing Ceph cluster deployed using <code>cephadm</code> and redeploy a new one, follow these steps:</p><ul><li>Step 1: Stop All Ceph Services</li></ul><p>First, stop all Ceph services on each host in the cluster.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop ceph.target</span><br></pre></td></tr></table></figure><ul><li>Step 2: Remove Ceph Configuration and Data</li></ul><p>Remove the Ceph configuration and data directories.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /etc/ceph</span><br><span class="line">sudo rm -rf /var/lib/ceph</span><br><span class="line">sudo rm -rf /var/<span class="built_in">log</span>/ceph</span><br></pre></td></tr></table></figure><ul><li><p>Step 3: deploy as below words</p></li><li><p>Step 4: Verify Cluster Health</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph -s</span><br></pre></td></tr></table></figure></li></ul><p>If you encounter any issues during the redeployment, check the logs:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo journalctl -u ceph-* -f</span><br></pre></td></tr></table></figure><p>Or check the Ceph logs directly:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo less /var/<span class="built_in">log</span>/ceph/ceph.log</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;deploy&quot;&gt;&lt;a href=&quot;#deploy&quot; class=&quot;headerlink&quot; title=&quot;deploy&quot;&gt;&lt;/a&gt;deploy&lt;/h1&gt;&lt;h2 id=&quot;install-cephadm&quot;&gt;&lt;a href=&quot;#install-cephadm&quot; class</summary>
      
    
    
    
    <category term="ceph" scheme="https://www.willshirley.top/categories/ceph/"/>
    
    
    <category term="deploy" scheme="https://www.willshirley.top/tags/deploy/"/>
    
  </entry>
  
</feed>
