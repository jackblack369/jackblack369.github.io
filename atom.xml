<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Discipline &amp; Reflect</title>
  
  
  <link href="https://www.willshirley.top/atom.xml" rel="self"/>
  
  <link href="https://www.willshirley.top/"/>
  <updated>2024-12-19T07:53:34.191Z</updated>
  <id>https://www.willshirley.top/</id>
  
  <author>
    <name>brook</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>terminology</title>
    <link href="https://www.willshirley.top/2024/12/19/terminology/"/>
    <id>https://www.willshirley.top/2024/12/19/terminology/</id>
    <published>2024-12-19T07:52:40.000Z</published>
    <updated>2024-12-19T07:53:34.191Z</updated>
    
    <content type="html"><![CDATA[<h1 id="幂等-非幂等"><a href="#幂等-非幂等" class="headerlink" title="幂等/非幂等"></a>幂等/非幂等</h1><p>在计算机科学和网络通信中，幂等（Idempotent）和非幂等（Non-idempotent）描述了操作执行多次和执行一次的效果是否相同。</p><ol><li><p><strong>幂等操作</strong>：</p><ul><li><strong>定义</strong>：如果一个操作执行多次和执行一次的效果相同，那么这个操作被称为幂等操作。</li><li><strong>特点</strong>：幂等操作在重复执行时不会改变系统状态，即多次执行和执行一次的结果是相同的。</li><li><strong>例子</strong>：<ul><li><strong>GET请求</strong>：读取资源的操作是幂等的，因为无论读取多少次，资源的内容不会改变。</li><li><strong>PUT请求</strong>：更新资源的操作通常是幂等的，因为多次更新同一个资源到相同的状态，最终资源的状态不会改变。</li><li><strong>DELETE请求</strong>：删除资源的操作也是幂等的，因为一旦资源被删除，再次删除不会对系统产生进一步的影响。</li></ul></li></ul></li><li><p><strong>非幂等操作</strong>：</p><ul><li><strong>定义</strong>：如果一个操作执行多次和执行一次的效果不同，那么这个操作被称为非幂等操作。</li><li><strong>特点</strong>：非幂等操作在重复执行时会改变系统状态，即多次执行和执行一次的结果不同。</li><li><strong>例子</strong>：<ul><li><strong>POST请求</strong>：创建资源的操作是非幂等的，因为多次执行创建操作会创建多个资源实例。</li><li><strong>某些类型的UPDATE请求</strong>：如果更新操作涉及到计数器或其他会随时间变化的值，那么这些操作可能是非幂等的，因为多次更新可能会累积效果。</li></ul></li></ul></li></ol><p>在分布式系统和网络通信中，幂等性是一个重要的属性，因为它可以帮助确保系统的一致性和可靠性。例如，在网络请求中，如果一个请求由于网络问题被重复发送，幂等操作可以确保系统不会因为重复的请求而产生不一致的状态。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;幂等-非幂等&quot;&gt;&lt;a href=&quot;#幂等-非幂等&quot; class=&quot;headerlink&quot; title=&quot;幂等/非幂等&quot;&gt;&lt;/a&gt;幂等/非幂等&lt;/h1&gt;&lt;p&gt;在计算机科学和网络通信中，幂等（Idempotent）和非幂等（Non-idempotent）描述了操作执行</summary>
      
    
    
    
    <category term="basic" scheme="https://www.willshirley.top/categories/basic/"/>
    
    
    <category term="terminology" scheme="https://www.willshirley.top/tags/terminology/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes pkg</title>
    <link href="https://www.willshirley.top/2024/12/17/kubernetes%20pkg/"/>
    <id>https://www.willshirley.top/2024/12/17/kubernetes%20pkg/</id>
    <published>2024-12-17T02:47:36.000Z</published>
    <updated>2024-12-17T06:08:54.605Z</updated>
    
    <content type="html"><![CDATA[<h1 id="klog"><a href="#klog" class="headerlink" title="klog"></a>klog</h1><ul><li><code>klog.Info</code> is equivalent to <code>klog.V(0).Info</code>.</li><li>For more detailed debug or trace messages, use klog.V(level).Info, where level is greater than 0 (e.g., klog.V(2).Info).</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;klog&quot;&gt;&lt;a href=&quot;#klog&quot; class=&quot;headerlink&quot; title=&quot;klog&quot;&gt;&lt;/a&gt;klog&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;klog.Info&lt;/code&gt; is equivalent to &lt;code&gt;klog.V(0).</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://www.willshirley.top/categories/Kubernetes/"/>
    
    
    <category term="pkg" scheme="https://www.willshirley.top/tags/pkg/"/>
    
  </entry>
  
  <entry>
    <title>cmake</title>
    <link href="https://www.willshirley.top/2024/12/16/cmake/"/>
    <id>https://www.willshirley.top/2024/12/16/cmake/</id>
    <published>2024-12-16T03:43:12.000Z</published>
    <updated>2024-12-16T04:14:48.137Z</updated>
    
    <content type="html"><![CDATA[<p>TBD</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;TBD&lt;/p&gt;
</summary>
      
    
    
    
    <category term="cmake" scheme="https://www.willshirley.top/categories/cmake/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes controller</title>
    <link href="https://www.willshirley.top/2024/12/15/kubernetes%20controller/"/>
    <id>https://www.willshirley.top/2024/12/15/kubernetes%20controller/</id>
    <published>2024-12-15T14:20:05.000Z</published>
    <updated>2024-12-16T02:03:21.035Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>From <a href="https://buraksekili.github.io/articles/controller-runtime-1/">Diving into controller-runtime | Manager</a></p></blockquote><p><a href="https://github.com/kubernetes-sigs/controller-runtime"><code>controller-runtime</code></a> package has become a fundamental tool for most Kubernetes controllers, simplifying the creation of controllers to manage resources within a Kubernetes environment efficiently. Users tend to prefer it over <a href="https://github.com/kubernetes/client-go"><code>client-go</code></a>.</p><p>In Kubernetes, controllers observe resources, such as Deployments, in a control loop to ensure the cluster resources conform to the desired state specified in the resource specification (e.g., YAML files).</p><p>On the other hand, according to Redhat, a Kubernetes Operator is an application-specific controller <a href="https://buraksekili.github.io/articles/controller-runtime-1/#fn:2">2</a>. For instance, the Prometheus Operator manages the lifecycle of a Prometheus instance in the cluster, including managing configurations and updating Kubernetes resources, such as ConfigMaps.</p><h1 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h1><p>controllers follow a special architecture to</p><ul><li>observe the resources,</li><li>inform any events (updating, deleting, adding) done on the resources,</li><li>keep a local cache to decrease the load on API Server,</li><li>keep a work queue to pick up events,</li><li>run workers to perform reconciliation on resources picked up from work queue.</li></ul><img src="/images/k8s/controller-runtime-1-client-go-controller-interaction.jpeg" style="zoom: 80%"><h2 id="informer"><a href="#informer" class="headerlink" title="informer"></a>informer</h2><p>Informers leverage certain components like <strong>Reflector</strong>, <strong>Queue</strong> and <strong>Indexer</strong>, as shown in the above diagram.</p><p>Informers watch Kubernetes API server to detect changes in resources that we want to. It keeps a local cache - in-memory cache implementing <a href="https://pkg.go.dev/k8s.io/client-go/tools/cache#Store">Store</a> interface - including the objects observed through Kubernetes API. Then controllers and operators use this cache for all getter requests - GET and LIST - to prevent load on Kubernetes API server. Moreover, Informers invoke controllers by sending objects to the controllers (registering Event Handlers).</p><h3 id="Reflector"><a href="#Reflector" class="headerlink" title="Reflector"></a>Reflector</h3><blockquote><p>Reflector watches a specified resource and causes all changes to be reflected in the given store.</p></blockquote><p>The store is actually a cache - with two options; simple one and FIFO. Reflector pushes objects to Delta Fifo queue.</p><p>By monitoring the server (Kubernetes API Server), the Reflector maintains a local cache of the resources. Upon any event occurring on the watched resource, implying a new operation on the Kubernetes resource, the Reflector updates the cache (Delta FIFO queue, as illustrated in the diagram). Subsequently, the Informer reads objects from this Delta FIFO queue, indexes them for future retrievals, and dispatches the object to the controller.</p><h3 id="Indexer"><a href="#Indexer" class="headerlink" title="Indexer"></a>Indexer</h3><p>Indexer saves objects into thread-safe Store by indexing the objects. This approach facilitates efficient querying of objects from the cache.</p><p>Custom indexers, based on specific needs, can be created. For example, a custom indexer can be generated to retrieve all objects based on certain fields, such as Annotations.</p><p>More details about how Kubernetes indexing works, check <a href="https://buraksekili.github.io/articles/client-k8s-indexing">Kubernetes Client-Side Indexing</a>.</p><hr><p>reference</p><ul><li><p><a href="https://www.zhaohuabing.com/post/2023-03-09-how-to-create-a-k8s-controller/">Kubernetes Controller 机制详解</a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/1989055">Controller Runtime 的四种使用姿势</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;From &lt;a href=&quot;https://buraksekili.github.io/articles/controller-runtime-1/&quot;&gt;Diving into controller-runtime | Manager&lt;/a&gt;&lt;/p&gt;</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://www.willshirley.top/categories/Kubernetes/"/>
    
    
    <category term="controller runtime" scheme="https://www.willshirley.top/tags/controller-runtime/"/>
    
  </entry>
  
  <entry>
    <title>GO PKG</title>
    <link href="https://www.willshirley.top/2024/12/13/golang%20pkg/"/>
    <id>https://www.willshirley.top/2024/12/13/golang%20pkg/</id>
    <published>2024-12-13T03:40:09.000Z</published>
    <updated>2024-12-17T02:52:54.020Z</updated>
    
    <content type="html"><![CDATA[<h1 id="fmt"><a href="#fmt" class="headerlink" title="fmt"></a>fmt</h1><ul><li><p><code>%v</code> vs <code>%#v</code></p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Example <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name  <span class="keyword">string</span></span><br><span class="line">    Value <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ex := Example&#123;Name: <span class="string">&quot;test&quot;</span>, Value: <span class="number">42</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Using %v</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Default format: %v\n&quot;</span>, ex)</span><br><span class="line">    <span class="comment">// Output: Default format: &#123;test 42&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Using %#v</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;Go syntax representation: %#v\n&quot;</span>, ex)</span><br><span class="line">    <span class="comment">// Output: Go syntax representation: main.Example&#123;Name:&quot;test&quot;, Value:42&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="json"><a href="#json" class="headerlink" title="json"></a>json</h1><ul><li><p><code>json:&quot;,inline&quot;</code></p><blockquote><p>This means that the fields of the embedded struct will appear at the same level as the fields of the parent struct in the resulting JSON object.</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Meta <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="keyword">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">    Age  <span class="keyword">int</span>    <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Meta <span class="string">`json:&quot;,inline&quot;`</span></span><br><span class="line">    Address <span class="keyword">string</span> <span class="string">`json:&quot;address&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    p := Person&#123;</span><br><span class="line">        Meta: Meta&#123;</span><br><span class="line">            Name: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">            Age:  <span class="number">30</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        Address: <span class="string">&quot;123 Main St&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    data, _ := json.Marshal(p)</span><br><span class="line">    fmt.Println(<span class="keyword">string</span>(data))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># output:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="string">&quot;age&quot;</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="string">&quot;address&quot;</span>: <span class="string">&quot;123 Main St&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="cobra"><a href="#cobra" class="headerlink" title="cobra"></a>cobra</h1><h2 id="PersistentFlag-vs-Flag"><a href="#PersistentFlag-vs-Flag" class="headerlink" title="PersistentFlag vs Flag"></a>PersistentFlag vs Flag</h2><p><strong>PersistentFlag</strong></p><ul><li>Flags that are available to the command and all its subcommands. but not explicitly added to the main command’s help output.</li></ul><p><strong>Flag</strong></p><ul><li><p>Definition: Flags that are only available to the specific command they are defined on.</p></li><li><p>Example: If you set a flag on a specific command, it will not be available to its parent or sibling commands.</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;fmt&quot;&gt;&lt;a href=&quot;#fmt&quot; class=&quot;headerlink&quot; title=&quot;fmt&quot;&gt;&lt;/a&gt;fmt&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;%v&lt;/code&gt; vs &lt;code&gt;%#v&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="GO" scheme="https://www.willshirley.top/categories/GO/"/>
    
    
    <category term="pkg" scheme="https://www.willshirley.top/tags/pkg/"/>
    
  </entry>
  
  <entry>
    <title>lvm senario</title>
    <link href="https://www.willshirley.top/2024/12/06/fs:%20lvm%20senario/"/>
    <id>https://www.willshirley.top/2024/12/06/fs:%20lvm%20senario/</id>
    <published>2024-12-06T02:43:30.000Z</published>
    <updated>2024-12-31T06:12:34.651Z</updated>
    
    <content type="html"><![CDATA[<h1 id="overview"><a href="#overview" class="headerlink" title="overview"></a>overview</h1><img src="/images/fs/lvm_overview-1.svg"><h1 id="create-LVs"><a href="#create-LVs" class="headerlink" title="create LVs"></a>create LVs</h1><blockquote><p> If you want to create <strong>three Logical Volumes (LVs)</strong> of sizes 1TB, 1TB, and 5TB on a single Volume Group (VG) for each disk, here’s how you can do it step by step.</p></blockquote><p>Assume:</p><p>​    •    <strong>Disks</strong>: /dev/nvme0n1, /dev/nvme1n1, /dev/nvme2n1</p><p>​    •    <strong>Volume Groups</strong>: vg_nvme0, vg_nvme1, vg_nvme2</p><p>​    •    <strong>Logical Volumes (LVs)</strong>: lv1, lv2, lv3 for each VG</p><p>​    •    <strong>LV Sizes</strong>: 1TB, 1TB, and 5TB</p><h2 id="1-Create-Physical-Volumes-PVs"><a href="#1-Create-Physical-Volumes-PVs" class="headerlink" title="1. Create Physical Volumes (PVs)"></a>1. Create Physical Volumes (PVs)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Initialize each disk as a PV:</span></span><br><span class="line">sudo pvcreate /dev/nvme0n1</span><br><span class="line">sudo pvcreate /dev/nvme1n1</span><br><span class="line">sudo pvcreate /dev/nvme2n1</span><br></pre></td></tr></table></figure><h2 id="2-Create-Volume-Groups-VGs"><a href="#2-Create-Volume-Groups-VGs" class="headerlink" title="2. Create Volume Groups (VGs)"></a>2. Create Volume Groups (VGs)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Create a VG <span class="keyword">for</span> each disk:</span></span><br><span class="line">sudo vgcreate vg_nvme0 /dev/nvme0n1</span><br><span class="line">sudo vgcreate vg_nvme1 /dev/nvme1n1</span><br><span class="line">sudo vgcreate vg_nvme2 /dev/nvme2n1</span><br></pre></td></tr></table></figure><h2 id="3-Create-Logical-Volumes-LVs"><a href="#3-Create-Logical-Volumes-LVs" class="headerlink" title="3. Create Logical Volumes (LVs)"></a>3. Create Logical Volumes (LVs)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Allocate 1TB, 1TB, and 5TB LVs from each VG.</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For vg_nvme0:</span></span><br><span class="line">sudo lvcreate -L 1T -n lv1 vg_nvme0</span><br><span class="line">sudo lvcreate -L 1T -n lv2 vg_nvme0</span><br><span class="line">sudo lvcreate -L 5T -n lv3 vg_nvme0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For vg_nvme1:</span></span><br><span class="line">sudo lvcreate -L 1T -n lv1 vg_nvme1</span><br><span class="line">sudo lvcreate -L 1T -n lv2 vg_nvme1</span><br><span class="line">sudo lvcreate -L 5T -n lv3 vg_nvme1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For vg_nvme2:</span></span><br><span class="line">sudo lvcreate -L 1T -n lv1 vg_nvme2</span><br><span class="line">sudo lvcreate -L 1T -n lv2 vg_nvme2</span><br><span class="line">sudo lvcreate -L 5T -n lv3 vg_nvme2</span><br></pre></td></tr></table></figure><h2 id="4-Verify-the-Setup"><a href="#4-Verify-the-Setup" class="headerlink" title="4. Verify the Setup"></a>4. Verify the Setup</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Check the LVs and their sizes:</span></span><br><span class="line">sudo lvs</span><br></pre></td></tr></table></figure><p>You should see something like:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LV   VG        Attr       LSize</span><br><span class="line"></span><br><span class="line">lv1  vg_nvme0  -wi-a----- 1.00t                           </span><br><span class="line">lv2  vg_nvme0  -wi-a----- 1.00t                           </span><br><span class="line">lv3  vg_nvme0  -wi-a----- 5.00t                           </span><br><span class="line">lv1  vg_nvme1  -wi-a----- 1.00t                           </span><br><span class="line">lv2  vg_nvme1  -wi-a----- 1.00t                           </span><br><span class="line">lv3  vg_nvme1  -wi-a----- 5.00t                           </span><br><span class="line">lv1  vg_nvme2  -wi-a----- 1.00t                           </span><br><span class="line">lv2  vg_nvme2  -wi-a----- 1.00t                           </span><br><span class="line">lv3  vg_nvme2  -wi-a----- 5.00t</span><br></pre></td></tr></table></figure><h2 id="5-Format-the-LVs"><a href="#5-Format-the-LVs" class="headerlink" title="5. Format the LVs"></a>5. Format the LVs</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Use xfs or another filesystem to format the LVs:</span></span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme0/lv1</span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme0/lv2</span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme0/lv3</span><br><span class="line"></span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme1/lv1</span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme1/lv2</span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme1/lv3</span><br><span class="line"></span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme2/lv1</span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme2/lv2</span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme2/lv3</span><br></pre></td></tr></table></figure><h2 id="6-Mount-the-LVs"><a href="#6-Mount-the-LVs" class="headerlink" title="6. Mount the LVs"></a>6. Mount the LVs</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Create directories <span class="keyword">for</span> each LV and mount them:</span></span><br><span class="line">sudo mkdir -p /mnt/nvme0/lv1 /mnt/nvme0/lv2 /mnt/nvme0/lv3</span><br><span class="line">sudo mkdir -p /mnt/nvme1/lv1 /mnt/nvme1/lv2 /mnt/nvme1/lv3</span><br><span class="line">sudo mkdir -p /mnt/nvme2/lv1 /mnt/nvme2/lv2 /mnt/nvme2/lv3</span><br><span class="line"></span><br><span class="line">sudo mount /dev/vg_nvme0/lv1 /mnt/nvme0/lv1</span><br><span class="line">sudo mount /dev/vg_nvme0/lv2 /mnt/nvme0/lv2</span><br><span class="line">sudo mount /dev/vg_nvme0/lv3 /mnt/nvme0/lv3</span><br><span class="line"></span><br><span class="line">sudo mount /dev/vg_nvme1/lv1 /mnt/nvme1/lv1</span><br><span class="line">sudo mount /dev/vg_nvme1/lv2 /mnt/nvme1/lv2</span><br><span class="line">sudo mount /dev/vg_nvme1/lv3 /mnt/nvme1/lv3</span><br><span class="line"></span><br><span class="line">sudo mount /dev/vg_nvme2/lv1 /mnt/nvme2/lv1</span><br><span class="line">sudo mount /dev/vg_nvme2/lv2 /mnt/nvme2/lv2</span><br><span class="line">sudo mount /dev/vg_nvme2/lv3 /mnt/nvme2/lv3</span><br></pre></td></tr></table></figure><h2 id="7-Persist-the-Mounts"><a href="#7-Persist-the-Mounts" class="headerlink" title="7. Persist the Mounts"></a>7. Persist the Mounts</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Add the mounts to /etc/fstab <span class="keyword">for</span> automatic remounting on boot:</span></span><br><span class="line">echo &#x27;/dev/vg_nvme0/lv1 /mnt/nvme0/lv1 xfs defaults 0 0&#x27; | sudo tee -a /etc/fstab</span><br><span class="line">echo &#x27;/dev/vg_nvme0/lv2 /mnt/nvme0/lv2 xfs defaults 0 0&#x27; | sudo tee -a /etc/fstab</span><br><span class="line">echo &#x27;/dev/vg_nvme0/lv3 /mnt/nvme0/lv3 xfs defaults 0 0&#x27; | sudo tee -a /etc/fstab</span><br><span class="line"></span><br><span class="line">echo &#x27;/dev/vg_nvme1/lv1 /mnt/nvme1/lv1 xfs defaults 0 0&#x27; | sudo tee -a /etc/fstab</span><br><span class="line">echo &#x27;/dev/vg_nvme1/lv2 /mnt/nvme1/lv2 xfs defaults 0 0&#x27; | sudo tee -a /etc/fstab</span><br><span class="line">echo &#x27;/dev/vg_nvme1/lv3 /mnt/nvme1/lv3 xfs defaults 0 0&#x27; | sudo tee -a /etc/fstab</span><br><span class="line"></span><br><span class="line">echo &#x27;/dev/vg_nvme2/lv1 /mnt/nvme2/lv1 xfs defaults 0 0&#x27; | sudo tee -a /etc/fstab</span><br><span class="line">echo &#x27;/dev/vg_nvme2/lv2 /mnt/nvme2/lv2 xfs defaults 0 0&#x27; | sudo tee -a /etc/fstab</span><br><span class="line">echo &#x27;/dev/vg_nvme2/lv3 /mnt/nvme2/lv3 xfs defaults 0 0&#x27; | sudo tee -a /etc/fstab</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> **Final Directory Layout**</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> **Disk****VG Name****LV Name****Size****Mount Point**</span></span><br><span class="line">/dev/nvme0n1vg_nvme0lv11T/mnt/nvme0/lv1</span><br><span class="line">lv21T/mnt/nvme0/lv2</span><br><span class="line">lv35T/mnt/nvme0/lv3</span><br><span class="line"></span><br><span class="line">/dev/nvme1n1vg_nvme1lv11T/mnt/nvme1/lv1</span><br><span class="line">lv21T/mnt/nvme1/lv2</span><br><span class="line">lv35T/mnt/nvme1/lv3</span><br><span class="line"></span><br><span class="line">/dev/nvme2n1vg_nvme2lv11T/mnt/nvme2/lv1</span><br><span class="line">lv21T/mnt/nvme2/lv2</span><br><span class="line">lv35T/mnt/nvme2/lv3</span><br></pre></td></tr></table></figure><blockquote><p>defaults 0 x</p><p>The difference is in the last number (0 vs 2) in the fstab entry, which represents the filesystem check (fsck) pass number. Here’s what these numbers mean:</p><p>Last field (6th field) in fstab:</p><ul><li><code>0</code> = No filesystem check will be done at boot time</li><li><code>1</code> = Filesystem will be checked first (typically used for root filesystem /)</li><li><code>2</code> = Filesystem will be checked after pass 1 filesystems (typically used for other filesystems)</li></ul><p>So:</p><ul><li><code>defaults 0 0</code> means the filesystem will never be automatically checked during boot</li><li><code>defaults 0 2</code> means the filesystem will be checked during boot, but after the root filesystem</li></ul><p>Best practices:</p><ul><li>Use <code>0 1</code> for the root filesystem (/)</li><li>Use <code>0 2</code> for other important filesystems that should be checked</li><li>Use <code>0 0</code> for pseudo-filesystems (like proc, sysfs) or filesystems that don’t need checking (like swap)</li></ul></blockquote><h1 id="wipe-disk-and-create-lvm"><a href="#wipe-disk-and-create-lvm" class="headerlink" title="wipe disk and create lvm"></a>wipe disk and create lvm</h1><blockquote><p>assum dev is /dev/nvme2n1</p></blockquote><p>To erase all partitions on the device /dev/nvme2n1 and create multiple logical volumes (LVs) using the LVM framework, follow these steps:</p><h2 id="1-Verify-Device-and-Backup-Data"><a href="#1-Verify-Device-and-Backup-Data" class="headerlink" title="1. Verify Device and Backup Data"></a>1. Verify Device and Backup Data</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Ensure you are working on the correct device. Erasing partitions will delete all data on the device.</span></span><br><span class="line">sudo lsblk -o NAME,SIZE,TYPE,MOUNTPOINT /dev/nvme2n1</span><br></pre></td></tr></table></figure><h2 id="2-Erase-Existing-Partitions"><a href="#2-Erase-Existing-Partitions" class="headerlink" title="2. Erase Existing Partitions"></a>2. Erase Existing Partitions</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Clear the Partition Table, To wipe the partition table completely:</span></span><br><span class="line">sudo wipefs -a /dev/nvme2n1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Verify the Disk is Clean, Check that no partitions remain</span></span><br><span class="line">sudo lsblk /dev/nvme2n1</span><br></pre></td></tr></table></figure><h2 id="3-Create-Physical-Volume-PV"><a href="#3-Create-Physical-Volume-PV" class="headerlink" title="3. Create Physical Volume (PV)"></a>3. Create Physical Volume (PV)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Convert the entire disk into an LVM physical volume:</span></span><br><span class="line">sudo pvcreate /dev/nvme2n1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Verify the PV</span></span><br><span class="line">sudo pvdisplay</span><br></pre></td></tr></table></figure><h2 id="4-Create-Volume-Group-VG"><a href="#4-Create-Volume-Group-VG" class="headerlink" title="4. Create Volume Group (VG)"></a>4. Create Volume Group (VG)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Create a volume group that spans the entire disk:</span></span><br><span class="line">sudo vgcreate vg_nvme2n1 /dev/nvme2n1</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Verify the VG:</span></span><br><span class="line">sudo vgdisplay</span><br></pre></td></tr></table></figure><h2 id="5-Create-Logical-Volumes-LVs"><a href="#5-Create-Logical-Volumes-LVs" class="headerlink" title="5. Create Logical Volumes (LVs)"></a>5. Create Logical Volumes (LVs)</h2><p>Example: Create Three LVs</p><p>​    •    <strong>LV1</strong>: 1TB</p><p>​    •    <strong>LV2</strong>: 1TB</p><p>​    •    <strong>LV3</strong>: Remaining space</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo lvcreate -L 1T -n lv1 vg_nvme2n1</span><br><span class="line">sudo lvcreate -L 1T -n lv2 vg_nvme2n1</span><br><span class="line">sudo lvcreate -l 100%FREE -n lv8 vg_nvme2n1 --wipesignatures y</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意如果在lvcreate的时候一直提示 warning wipe offset xxx,那执行 sudo lvcreate xxx -y (加-y参数)</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Verify the LVs:</span></span><br><span class="line">sudo lvdisplay</span><br></pre></td></tr></table></figure><h2 id="6-Format-Logical-Volumes"><a href="#6-Format-Logical-Volumes" class="headerlink" title="6. Format Logical Volumes"></a>6. Format Logical Volumes</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Format each logical volume with your desired file system (e.g., XFS):</span></span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme2n1/lv1</span><br><span class="line"></span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme2n1/lv2</span><br><span class="line"></span><br><span class="line">sudo mkfs.xfs /dev/vg_nvme2n1/lv3</span><br></pre></td></tr></table></figure><h2 id="7-Mount-Logical-Volumes"><a href="#7-Mount-Logical-Volumes" class="headerlink" title="7. Mount Logical Volumes"></a>7. Mount Logical Volumes</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Create mount points and mount the LVs:</span></span><br><span class="line">sudo mkdir -p /mnt/nvme2n1/lv1 /mnt/nvme2n1/lv2 /mnt/nvme2n1/lv3</span><br><span class="line"></span><br><span class="line">sudo mount /dev/vg_nvme2n1/lv1 /mnt/nvme2n1/lv1</span><br><span class="line">sudo mount /dev/vg_nvme2n1/lv2 /mnt/nvme2n1/lv2</span><br><span class="line">sudo mount /dev/vg_nvme2n1/lv3 /mnt/nvme2n1/lv3</span><br><span class="line"><span class="meta">#</span><span class="bash"> Verify the mounts:</span></span><br><span class="line">df -h</span><br></pre></td></tr></table></figure><h2 id="8-Make-the-Mounts-Persistent"><a href="#8-Make-the-Mounts-Persistent" class="headerlink" title="8. Make the Mounts Persistent"></a>8. Make the Mounts Persistent</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Add entries to /etc/fstab to ensure the LVs are mounted on reboot:</span></span><br><span class="line">echo &#x27;/dev/vg_nvme2n1/lv1 /mnt/nvme2n1/lv1 xfs defaults 0 2&#x27; | sudo tee -a /etc/fstab</span><br><span class="line">echo &#x27;/dev/vg_nvme2n1/lv2 /mnt/nvme2n1/lv2 xfs defaults 0 2&#x27; | sudo tee -a /etc/fstab</span><br><span class="line">echo &#x27;/dev/vg_nvme2n1/lv3 /mnt/nvme2n1/lv3 xfs defaults 0 2&#x27; | sudo tee -a /etc/fstab</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;overview&quot;&gt;&lt;a href=&quot;#overview&quot; class=&quot;headerlink&quot; title=&quot;overview&quot;&gt;&lt;/a&gt;overview&lt;/h1&gt;&lt;img src=&quot;/images/fs/lvm_overview-1.svg&quot;&gt;

&lt;h1 id</summary>
      
    
    
    
    <category term="fs" scheme="https://www.willshirley.top/categories/fs/"/>
    
    
    <category term="lvm" scheme="https://www.willshirley.top/tags/lvm/"/>
    
  </entry>
  
  <entry>
    <title>network snippet</title>
    <link href="https://www.willshirley.top/2024/12/05/network%20snippet/"/>
    <id>https://www.willshirley.top/2024/12/05/network%20snippet/</id>
    <published>2024-12-05T07:50:13.000Z</published>
    <updated>2024-12-06T04:05:03.653Z</updated>
    
    <content type="html"><![CDATA[<h1 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h1><p><strong>Common Name (CN)</strong></p><p><strong>Alternative Name (SAN)</strong></p><p><strong>Transport Layer Security (TLS)</strong></p><h1 id="A-VS-B"><a href="#A-VS-B" class="headerlink" title="A VS B"></a>A VS B</h1><h2 id="SSL-VS-TLS"><a href="#SSL-VS-TLS" class="headerlink" title="SSL VS TLS"></a>SSL VS TLS</h2><blockquote><p>TLS (Transport Layer Security) and SSL (Secure Sockets Layer) are both cryptographic protocols used for secure communication over the internet. However, they have some key differences:</p></blockquote><p><strong>SSL (Secure Sockets Layer)</strong></p><ul><li>Developed by Netscape in 1994 as a predecessor to TLS</li><li>Primarily focused on web browsing security</li><li>Used for encrypting data between a client’s browser and a server</li><li>Typically used with port 443 (HTTPS)</li><li>Considered insecure due to weaknesses in its encryption algorithms and key exchange mechanisms</li></ul><p><strong>TLS (Transport Layer Security)</strong></p><ul><li>Developed by the Internet Engineering Task Force (IETF) as a successor to SSL</li><li>Focuses on secure communication between any two endpoints, not just web browsing</li><li>Uses more robust encryption algorithms, such as AES-256, and improved key exchange mechanisms</li><li>Supports multiple versions of the protocol (TLS 1.0, TLS 1.1, TLS 1.2)</li><li>Now considered a standard for secure internet communications</li></ul><p><strong>Key differences:</strong></p><ol><li><strong>Name</strong>: SSL was originally used for web browsing security, while TLS is more general-purpose.</li><li><strong>Encryption algorithms</strong>: TLS uses stronger encryption algorithms than SSL.</li><li><strong>Key exchange mechanisms</strong>: TLS has improved key exchange mechanisms compared to SSL.</li><li><strong>Protocol versions</strong>: TLS supports multiple protocol versions (TLS 1.0, TLS 1.1, TLS 1.2), while SSL is typically associated with a single version.</li></ol><p><strong>When to use each:</strong></p><ul><li>Use SSL when you need to maintain compatibility with older systems or browsers that only support the original SSL protocol.</li><li>Use TLS for new applications and systems where security is paramount.</li></ul><p>Keep in mind that most modern systems, including web servers and clients, have already adopted TLS as the standard for secure communication. If you’re developing a new application or system, it’s recommended to use TLS to ensure the highest level of security.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;basic&quot;&gt;&lt;a href=&quot;#basic&quot; class=&quot;headerlink&quot; title=&quot;basic&quot;&gt;&lt;/a&gt;basic&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Common Name (CN)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alternati</summary>
      
    
    
    
    <category term="network" scheme="https://www.willshirley.top/categories/network/"/>
    
    
    <category term="snippet" scheme="https://www.willshirley.top/tags/snippet/"/>
    
  </entry>
  
  <entry>
    <title>bazel</title>
    <link href="https://www.willshirley.top/2024/11/25/bazel/"/>
    <id>https://www.willshirley.top/2024/11/25/bazel/</id>
    <published>2024-11-25T03:42:10.000Z</published>
    <updated>2024-11-29T09:17:20.858Z</updated>
    
    <content type="html"><![CDATA[<p><strong>MODULE.bazel</strong></p><blockquote><p>is equal WORKSPACE at old bazel version</p></blockquote><ul><li>The <code>MODULE.bazel</code> file, which identifies the directory and its contents as a Bazel workspace and lives at the root of the project’s directory structure. It’s also where you specify your external dependencies.</li></ul><p><strong>BUILD</strong></p><ul><li>One or more <a href="https://bazel.build/reference/glossary#build-file"><code>BUILD</code> files</a>, which tell Bazel how to build different parts of the project. A directory within the workspace that contains a <code>BUILD</code> file is a package. (More on packages later in this tutorial.)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;MODULE.bazel&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;is equal WORKSPACE at old bazel version&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;MODULE.baz</summary>
      
    
    
    
    <category term="build" scheme="https://www.willshirley.top/categories/build/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus&amp;Grafana</title>
    <link href="https://www.willshirley.top/2024/10/25/prometheus&amp;grafana/"/>
    <id>https://www.willshirley.top/2024/10/25/prometheus&amp;grafana/</id>
    <published>2024-10-25T07:02:38.000Z</published>
    <updated>2024-12-05T12:16:22.686Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h1><h2 id="node-exporter"><a href="#node-exporter" class="headerlink" title="node_exporter"></a>node_exporter</h2><ul><li><p>package</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/prometheus/node_exporter/releases/download/v1.8.2/node_exporter-1.8.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>prepare user and directory</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd -f dingofs</span><br><span class="line">sudo useradd -g dingofs dingofs</span><br><span class="line">sudo mkdir /etc/node_exporter</span><br><span class="line">sudo chown dingofs:dingofs /etc/node_exporter</span><br><span class="line"></span><br><span class="line">sudo cp /path/to/node_exporter-files/node_exporter /usr/bin/</span><br><span class="line">sudo chown dingofs:dingofs /usr/bin/node_exporter</span><br></pre></td></tr></table></figure></li><li><p>config system service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /usr/lib/systemd/system/node_exporter.service</span><br><span class="line">sudo chmod 664 /usr/lib/systemd/system/node_exporter.service</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Unit</span>]</span><br><span class="line"><span class="string">Description=Node</span> <span class="string">Exporter</span></span><br><span class="line"><span class="string">Documentation=https://prometheus.io/docs/guides/node-exporter/</span></span><br><span class="line"><span class="string">Wants=network-online.target</span></span><br><span class="line"><span class="string">After=network-online.target</span></span><br><span class="line"></span><br><span class="line">[<span class="string">Service</span>]</span><br><span class="line"><span class="string">User=dingofs</span></span><br><span class="line"><span class="string">Group=dingofs</span></span><br><span class="line"><span class="string">Type=simple</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/node_exporter</span> <span class="string">\</span></span><br><span class="line">  <span class="string">--web.listen-address=:19100</span></span><br><span class="line"></span><br><span class="line">[<span class="string">Install</span>]</span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br></pre></td></tr></table></figure></li><li><p>start system service</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl start node_exporter</span><br><span class="line">sudo systemctl status node_exporter</span><br><span class="line">sudo systemctl enable node_exporter.service # Configure node_exporter to start at boot</span><br></pre></td></tr></table></figure></li></ul><h2 id="prometheus-server"><a href="#prometheus-server" class="headerlink" title="prometheus server"></a>prometheus server</h2><ul><li><p>prometheus.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span>     <span class="string">15s</span> <span class="comment"># By default, scrape targets every 15 seconds.</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span> <span class="comment"># Evaluate rules every 15 seconds.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Attach these extra labels to all timeseries collected by this Prometheus instance.</span></span><br><span class="line">  <span class="attr">external_labels:</span></span><br><span class="line">    <span class="attr">monitor:</span> <span class="string">&#x27;codelab-monitor&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#rule_files:</span></span><br><span class="line"><span class="comment">#- &#x27;prometheus.rules.yml&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;prometheus&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Override the global default and scrape targets from this job every 5 seconds.</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;172.20.7.232:19090&#x27;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;node&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Override the global default and scrape targets from this job every 5 seconds.</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> [<span class="string">&#x27;172.20.7.232:19100&#x27;</span>,<span class="string">&#x27;172.20.7.233:19100&#x27;</span>,<span class="string">&#x27;172.20.7.234:19100&#x27;</span>]</span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">group:</span> <span class="string">&#x27;metric1&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>docker container</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Create persistent volume <span class="keyword">for</span> your data</span></span><br><span class="line">docker volume create prometheus-data</span><br><span class="line"><span class="meta">#</span><span class="bash"> Start Prometheus container</span></span><br><span class="line">docker run -d \</span><br><span class="line">    -p 9090:9090 \</span><br><span class="line">    -v /path/to/prometheus.yml:/etc/prometheus/prometheus.yml \</span><br><span class="line">    -v prometheus-data:/prometheus \</span><br><span class="line">    prom/prometheus</span><br></pre></td></tr></table></figure><h1 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h1><ul><li><p>deploy container</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> create a persistent volume <span class="keyword">for</span> your data</span></span><br><span class="line">docker volume create grafana-storage</span><br><span class="line"><span class="meta">#</span><span class="bash"> verify that the volume was created correctly</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you should see some JSON output</span></span><br><span class="line">docker volume inspect grafana-storage</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> start grafana</span></span><br><span class="line">docker run -d -p 13000:3000 --name=grafana \</span><br><span class="line">  --volume grafana-storage:/var/lib/grafana \</span><br><span class="line">  grafana/grafana</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> web login</span></span><br><span class="line">admin/admin</span><br></pre></td></tr></table></figure></li></ul><h2 id="dashboard"><a href="#dashboard" class="headerlink" title="dashboard"></a>dashboard</h2><p><a href="https://grafana.com/grafana/dashboards/">https://grafana.com/grafana/dashboards/</a></p><p><strong>just import from existed dashboard json</strong></p><p>enjoy it</p><ul><li>reference<ul><li><a href="https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/">official deploy</a></li><li><a href="https://grafana.com/docs/grafana/latest/datasources/prometheus/configure-prometheus-data-source/">config prometheous</a></li><li><a href="https://grafana.com/docs/grafana/latest/getting-started/get-started-grafana-prometheus/">Get started with Grafana and Prometheus</a></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Prometheus&quot;&gt;&lt;a href=&quot;#Prometheus&quot; class=&quot;headerlink&quot; title=&quot;Prometheus&quot;&gt;&lt;/a&gt;Prometheus&lt;/h1&gt;&lt;h2 id=&quot;node-exporter&quot;&gt;&lt;a href=&quot;#node-exp</summary>
      
    
    
    
    <category term="monitor" scheme="https://www.willshirley.top/categories/monitor/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>devops</title>
    <link href="https://www.willshirley.top/2024/10/10/devops/"/>
    <id>https://www.willshirley.top/2024/10/10/devops/</id>
    <published>2024-10-10T07:17:52.000Z</published>
    <updated>2024-10-10T07:29:04.512Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/devops/cicd.jpg" style="zoom: 100%">]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/images/devops/cicd.jpg&quot; style=&quot;zoom: 100%&quot;&gt;

</summary>
      
    
    
    
    <category term="devops" scheme="https://www.willshirley.top/categories/devops/"/>
    
    
    <category term="snippet" scheme="https://www.willshirley.top/tags/snippet/"/>
    
  </entry>
  
  <entry>
    <title>minio snippet</title>
    <link href="https://www.willshirley.top/2024/09/29/minio/"/>
    <id>https://www.willshirley.top/2024/09/29/minio/</id>
    <published>2024-09-29T02:25:00.000Z</published>
    <updated>2024-12-10T11:51:07.127Z</updated>
    
    <content type="html"><![CDATA[<h1 id="concept"><a href="#concept" class="headerlink" title="concept"></a>concept</h1><h2 id="Erasure-Coding"><a href="#Erasure-Coding" class="headerlink" title="Erasure Coding"></a>Erasure Coding</h2><p><strong>Erasure Coding</strong> splits data into data and parity shards. For example, MinIO might use a <strong>4:2 erasure code</strong> (should use 6  disks), meaning each object is split into 4 data shards and 2 parity shards.</p><blockquote><p>In a 4:2 erasure coding setup:</p><p>4 data shards hold the actual object data.</p><p>2 parity shards are created for redundancy.</p></blockquote><p>In this configuration, every object is broken into smaller pieces, with redundancy pieces (parity shards) stored to allow recovery if a disk or node fails.</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> service file</span></span><br><span class="line">/usr/lib/systemd/system/minio.service</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> default config file</span></span><br><span class="line">/etc/default/minio</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> reload config after modify default file</span></span><br><span class="line">sudo systemctl stop minio</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果更改MINIO_VOLUMES信息，并且需要用到之前的一些盘符，需要清理干净相关目录的文件（包括隐藏文件 .minio.sys）</span></span><br><span class="line">需要目录里清理遗留的所有文件 （rm -rf ./* 命令不会清理隐藏文件）</span><br></pre></td></tr></table></figure><ul><li><p>minio.service</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Unit</span>]</span><br><span class="line"><span class="string">Description=MinIO</span></span><br><span class="line"><span class="string">Documentation=https://docs.min.io</span></span><br><span class="line"><span class="string">Wants=network-online.target</span></span><br><span class="line"><span class="string">After=network-online.target</span></span><br><span class="line"><span class="string">AssertFileIsExecutable=/usr/local/bin/minio</span></span><br><span class="line"></span><br><span class="line">[<span class="string">Service</span>]</span><br><span class="line"><span class="string">Type=notify</span></span><br><span class="line"></span><br><span class="line"><span class="string">WorkingDirectory=/usr/local</span></span><br><span class="line"></span><br><span class="line"><span class="string">User=dingofs</span></span><br><span class="line"><span class="string">Group=dingofs</span></span><br><span class="line"><span class="string">ProtectProc=invisible</span></span><br><span class="line"></span><br><span class="line"><span class="string">EnvironmentFile=-/etc/default/minio</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/bin/minio</span> <span class="string">server</span> <span class="string">$MINIO_OPTS</span> <span class="string">$MINIO_VOLUMES</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Let systemd restart this service always</span></span><br><span class="line"><span class="string">Restart=always</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifies the maximum file descriptor number that can be opened by this process</span></span><br><span class="line"><span class="string">LimitNOFILE=1048576</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Turn-off memory accounting by systemd, which is buggy.</span></span><br><span class="line"><span class="string">MemoryAccounting=no</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifies the maximum number of threads this process can create</span></span><br><span class="line"><span class="string">TasksMax=infinity</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable timeout logic and wait until process is stopped</span></span><br><span class="line"><span class="string">TimeoutSec=infinity</span></span><br><span class="line"></span><br><span class="line"><span class="string">SendSIGKILL=no</span></span><br><span class="line"></span><br><span class="line">[<span class="string">Install</span>]</span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br></pre></td></tr></table></figure></li><li><p>/etc/default/minio</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">MINIO_VOLUMES=&quot;http://minio&#123;1...3&#125;.dev.net:19000/mnt/disk2/minio&quot;</span></span><br><span class="line"><span class="comment">#MINIO_VOLUMES=&quot;http://minio&#123;1...3&#125;.dev.net:19000/mnt/disk&#123;0...1&#125;/minio&quot;</span></span><br><span class="line"><span class="comment">#MINIO_VOLUMES=&quot;http://minio1.dev.net:19000/mnt/disk1/minio http://minio2.dev.net:19000/mnt/disk1/minio http://minio3.dev.net:19000/mnt/disk1/minio&quot;</span></span><br><span class="line"><span class="comment">#MINIO_VOLUMES=&quot;http://minio2.dev.net:19000/mnt/minio http://minio3.dev.net:19000/mnt/minio&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set all MinIO server options</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The following explicitly sets the MinIO Console listen address to</span></span><br><span class="line"><span class="comment"># port 9001 on all network interfaces. The default behavior is dynamic</span></span><br><span class="line"><span class="comment"># port selection.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#MINIO_OPTS=&quot;--console-address :9001&quot;</span></span><br><span class="line"><span class="string">MINIO_OPTS=&#x27;</span> <span class="string">--console-address=&quot;:19001&quot;</span> <span class="string">--address=&quot;:19000&quot;</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Set the root username. This user has unrestricted permissions to</span></span><br><span class="line"><span class="string"># perform S3 and administrative API operations on any resource in the</span></span><br><span class="line"><span class="string"># deployment.</span></span><br><span class="line"><span class="string">#</span></span><br><span class="line"><span class="string"># Defer to your organizations requirements for superadmin user name.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MINIO_ROOT_USER=minioadmin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Set the root password</span></span><br><span class="line"><span class="string">#</span></span><br><span class="line"><span class="string"># Use a long, random, unique string that meets your organizations</span></span><br><span class="line"><span class="string"># requirements for passwords.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MINIO_ROOT_PASSWORD=minioadmin</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="client"><a href="#client" class="headerlink" title="client"></a>client</h1><h2 id="install"><a href="#install" class="headerlink" title="install"></a>install</h2>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl https://dl.min.io/client/mc/release/linux-amd64/mc \</span><br><span class="line">  --create-dirs \</span><br><span class="line">  -o $HOME/minio-binaries/mc</span><br><span class="line"></span><br><span class="line">chmod +x $HOME/minio-binaries/mc</span><br><span class="line"></span><br><span class="line">cp $HOME/minio-binaries/mc /usr/bin/</span><br><span class="line"></span><br><span class="line">mc alias set myminio http://minio1.dev.net:19000 &#123;ak&#125; &#123;sk&#125;</span><br></pre></td></tr></table></figure><h2 id="command"><a href="#command" class="headerlink" title="command"></a>command</h2><ul><li>log</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mc admin logs myminio</span><br></pre></td></tr></table></figure><ul><li>development</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> add development</span></span><br><span class="line">mc alias set myminio &#123;endpoint_address&#125; &#123;ak&#125; &#123;sk&#125; </span><br><span class="line"><span class="meta">#</span><span class="bash"> e.g. mc <span class="built_in">alias</span> <span class="built_in">set</span> myminio http://minio1.dev.net:19000 1111111 22222222</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ls <span class="built_in">alias</span></span></span><br><span class="line">mc alias list</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> overview info</span></span><br><span class="line">mc admin info myminio</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check config</span> </span><br><span class="line">mc admin config get myminio</span><br></pre></td></tr></table></figure><ul><li><p>bucket</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> create bucket</span></span><br><span class="line">mc mb &lt;ALIAS&gt;/&lt;BUCKET&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> list bucket</span></span><br><span class="line">mc ls &lt;ALIAS&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check bucket</span></span><br><span class="line">mc ls &lt;ALIAS&gt;/&lt;BUCKET&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> count total object/file num</span></span><br><span class="line">mc ls --summarize --recursive gateway-minio</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check object</span></span><br><span class="line">mc cat &lt;ALIAS&gt;/&lt;BUCKET&gt;/&lt;OBJECT&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> delete object</span></span><br><span class="line">mc rm &lt;ALIAS&gt;/&lt;BUCKET&gt;/&lt;OBJECT&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> delete according specify time</span> </span><br><span class="line">mc find &lt;alias/bucket-name&gt; --older-than &lt;time&gt; --exec &quot;mc rm &#123;&#125;&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> e.g. mc find myminio/mybucket --older-than 30d --<span class="built_in">exec</span> <span class="string">&quot;mc rm &#123;&#125;&quot;</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> delete all data</span></span><br><span class="line">mc rm --recursive --force &lt;ALIAS&gt;/&lt;BUCKET&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> force delete bucket</span></span><br><span class="line">mc rb --force &lt;ALIAS&gt;/&lt;BUCKET&gt;  # must delete bucket&#x27;s object file first</span><br></pre></td></tr></table></figure></li><li><p>heal</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Use MinIO’s heal <span class="built_in">command</span> to ensure the data and metadata are consistent:</span></span><br><span class="line">mc admin heal -r &lt;ALIAS&gt;/</span><br></pre></td></tr></table></figure><ul><li>erasure code</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> erasure code</span></span><br><span class="line">mc admin config set myminio storage_class standard=EC:0</span><br><span class="line"><span class="meta">#</span><span class="bash"> should restart minio.service, and <span class="string">&#x27;systemctl status minio&#x27;</span> will <span class="built_in">print</span> <span class="string">&#x27;WARN: The standard parity is set to 0. This can lead to data loss&#x27;</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check storage_class</span> </span><br><span class="line">mc admin config get myminio storage_class</span><br></pre></td></tr></table></figure><h1 id="TLS"><a href="#TLS" class="headerlink" title="TLS"></a>TLS</h1><ul><li><a href="https://min.io/docs/minio/linux/operations/network-encryption.html#enabling-tls">enabling-tls</a></li></ul><blockquote><p>172.20.61.102 minio1.dev.net<br>172.20.61.103 minio2.dev.net<br>172.20.61.105 minio3.dev.net</p><p>/etc/default/minio:<br>MINIO_VOLUMES=”<a href="https://minio{1...3}.dev.net:19000/mnt/minio%7B1...2%7D&quot;">https://minio{1...3}.dev.net:19000/mnt/minio{1...2}&quot;</a><br>MINIO_OPTS=’ –console-address=”:19001” –address=”:19000” ‘</p></blockquote><p>By default, the MinIO server looks for the TLS keys and certificates for each node in the following directory: <code>$&#123;HOME&#125;/.minio/certs</code> (该证书存放各自机器的<code>private.key</code> 和 <code>public.crt</code>， 每台机器的 <code>private.key</code> 和 <code>public.crt</code>都不一样)</p><p>If using Certificates signed by a non-global or non-public Certificate Authority, <em>or</em> if using a global CA that requires the use of intermediate certificates, you must provide those CAs to the MinIO Server <code>/root/.minio/certs/CAs</code> (用来存放私有的证书<code>ca.crt</code>，该证书用于生成机器的<code>private.key</code> 和 <code>public.crt</code>， 集群的每台机器存放的<code>ca.crt</code>应该保持一致)</p><ol><li><strong>Generate CA and Certificates <code>generate_certificate.sh</code></strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Generate CA private key</span></span><br><span class="line">openssl genrsa -out ca.key 4096</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create CA certificate</span></span><br><span class="line">openssl req -x509 -new -nodes -key ca.key -sha256 -days 3650 \</span><br><span class="line">    -out ca.crt \</span><br><span class="line">    -subj <span class="string">&quot;/C=US/ST=YourState/L=YourCity/O=YourOrg/OU=YourUnit/CN=MinioCA&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate server private keys for each node</span></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> minio1 minio2 minio3; <span class="keyword">do</span></span><br><span class="line">    openssl genrsa -out <span class="variable">$&#123;node&#125;</span>.key 2048</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Create server certificate signing request (CSR)</span></span><br><span class="line">    openssl req -new -key <span class="variable">$&#123;node&#125;</span>.key -out <span class="variable">$&#123;node&#125;</span>.csr \</span><br><span class="line">        -subj <span class="string">&quot;/C=US/ST=YourState/L=YourCity/O=YourOrg/OU=YourUnit/CN=<span class="variable">$&#123;node&#125;</span>.dev.net&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Create server certificate configuration</span></span><br><span class="line">    cat &gt; <span class="variable">$&#123;node&#125;</span>.ext &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">authorityKeyIdentifier=keyid,issuer</span></span><br><span class="line"><span class="string">basicConstraints=CA:FALSE</span></span><br><span class="line"><span class="string">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span></span><br><span class="line"><span class="string">subjectAltName = @alt_names</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[alt_names]</span></span><br><span class="line"><span class="string">DNS.1 = $&#123;node&#125;.dev.net</span></span><br><span class="line"><span class="string">IP.1 = 172.20.61.$(grep $&#123;node&#125; /etc/hosts | awk &#x27;&#123;print $1&#125;&#x27; | cut -d. -f4)</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Sign server certificate with CA</span></span><br><span class="line">    openssl x509 -req -<span class="keyword">in</span> <span class="variable">$&#123;node&#125;</span>.csr -CA ca.crt -CAkey ca.key \</span><br><span class="line">        -CAcreateserial -out <span class="variable">$&#123;node&#125;</span>.crt -days 3650 \</span><br><span class="line">        -sha256 -extfile <span class="variable">$&#123;node&#125;</span>.ext</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>Distribute Certificates <code>copy_certificate.sh</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create certificate directories</span></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> minio1 minio2 minio3; <span class="keyword">do</span></span><br><span class="line">    <span class="comment"># Copy node-specific certificate and key</span></span><br><span class="line">    scp <span class="variable">$&#123;node&#125;</span>.crt root@<span class="variable">$&#123;node&#125;</span>.dev.net:/root/.minio/certs/public.crt</span><br><span class="line">    scp <span class="variable">$&#123;node&#125;</span>.key root@<span class="variable">$&#123;node&#125;</span>.dev.net:/root/.minio/certs/private.key</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Copy CA certificate to trusted CAs</span></span><br><span class="line">    scp ca.crt root@<span class="variable">$&#123;node&#125;</span>.dev.net:/root/.minio/certs/CAs/</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Update MinIO Configuration</strong><br>Modify <code>/etc/default/minio</code> on each node to ensure proper TLS configuration:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Update MINIO_VOLUMES to use https</span></span><br><span class="line">MINIO_VOLUMES=<span class="string">&quot;https://minio&#123;1...3&#125;.dev.net:19000/mnt/minio&#123;1...2&#125;&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>Set Correct Permissions (optional)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> minio1 minio2 minio3; <span class="keyword">do</span></span><br><span class="line">    ssh root@<span class="variable">$&#123;node&#125;</span>.dev.net <span class="string">&quot;</span></span><br><span class="line"><span class="string">    chown -R minio:minio /root/.minio/certs</span></span><br><span class="line"><span class="string">    chmod 700 /root/.minio/certs</span></span><br><span class="line"><span class="string">    chmod 600 /root/.minio/certs/private.key</span></span><br><span class="line"><span class="string">    chmod 644 /root/.minio/certs/public.crt /root/.minio/certs/CAs/*</span></span><br><span class="line"><span class="string">    &quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Restart MinIO Cluster</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart minio</span><br></pre></td></tr></table></figure></li><li><p> <strong>Trust certificate globally</strong></p></li></ol><blockquote><p>每台机器均需要操作一遍（这样可以保证mc设置alias成功）</p></blockquote>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo cp ca.crt /etc/pki/ca-trust/source/anchors/</span><br><span class="line">sudo update-ca-trust extract</span><br><span class="line">sudo openssl verify -CAfile /etc/pki/tls/certs/ca-bundle.crt /etc/pki/ca-trust/source/anchors/ca.crt</span><br></pre></td></tr></table></figure><ol start="7"><li>Verification</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Check TLS configuration on each node</span></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> minio1 minio2 minio3; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Checking <span class="variable">$&#123;node&#125;</span>:&quot;</span></span><br><span class="line">    ssh root@<span class="variable">$&#123;node&#125;</span>.dev.net <span class="string">&quot;</span></span><br><span class="line"><span class="string">    openssl x509 -in /root/.minio/certs/public.crt -text -noout</span></span><br><span class="line"><span class="string">    echo &#x27;---&#x27;</span></span><br><span class="line"><span class="string">    netstat -tuln | grep 19000</span></span><br><span class="line"><span class="string">    echo &#x27;---&#x27;</span></span><br><span class="line"><span class="string">    systemctl status minio</span></span><br><span class="line"><span class="string">    &quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>browser check</p><img src="/images/minio/cert.jpg" style="zoom: 60%">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;concept&quot;&gt;&lt;a href=&quot;#concept&quot; class=&quot;headerlink&quot; title=&quot;concept&quot;&gt;&lt;/a&gt;concept&lt;/h1&gt;&lt;h2 id=&quot;Erasure-Coding&quot;&gt;&lt;a href=&quot;#Erasure-Coding&quot; cla</summary>
      
    
    
    
    <category term="minio" scheme="https://www.willshirley.top/categories/minio/"/>
    
    
    <category term="snippet" scheme="https://www.willshirley.top/tags/snippet/"/>
    
  </entry>
  
  <entry>
    <title>kubectl command</title>
    <link href="https://www.willshirley.top/2024/09/15/kubectl%20command/"/>
    <id>https://www.willshirley.top/2024/09/15/kubectl%20command/</id>
    <published>2024-09-15T07:45:47.000Z</published>
    <updated>2024-12-03T07:53:59.352Z</updated>
    
    <content type="html"><![CDATA[<h2 id="common"><a href="#common" class="headerlink" title="common"></a>common</h2><h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl version</span><br><span class="line">kubectl api-versions</span><br></pre></td></tr></table></figure><h3 id="health"><a href="#health" class="headerlink" title="health"></a>health</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> check kubernetes inner ip</span> </span><br><span class="line">kubectl get svc kubernetes -n default</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check api server</span></span><br><span class="line">kubectl get componentstatuses</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check crd</span></span><br><span class="line">kubectl get crd | grep cert-manager</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check all pods</span></span><br><span class="line">kubectl get pods -A</span><br></pre></td></tr></table></figure><h3 id="label"><a href="#label" class="headerlink" title="label"></a>label</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> check node label</span></span><br><span class="line">kubectl get nodes --show-labels</span><br></pre></td></tr></table></figure><h3 id="namespace"><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get namespaces</span><br></pre></td></tr></table></figure><h2 id="pod"><a href="#pod" class="headerlink" title="pod"></a>pod</h2><h3 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> list namespace<span class="string">&#x27;s pod</span></span></span><br><span class="line">kubectl get pod -n &#123;namespace&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="string"> force delete pod</span></span></span><br><span class="line">kubectl delete pod &#123;pod_name&#125; --grace-period=0 --force -n &#123;namespace&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="string"> describe</span></span></span><br><span class="line">kubectl describe pod &#123;podName&#125;</span><br></pre></td></tr></table></figure><h3 id="log"><a href="#log" class="headerlink" title="log"></a>log</h3><blockquote><p>​    •    -c <container-name>: Specify which container to retrieve logs from.</p><p>​    •    -f: Stream the logs in real-time.</p><p>​    •    –previous: Show logs from the last terminated container.</p><p>​    •    –since=<duration>: Return logs for the last period (e.g., 1h, 30m).</p><p>​    •    –tail=<lines>: Limit the number of log lines returned.</p><p>​    •    –all-containers=true: Get logs from all containers in the pod.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pod</span></span><br><span class="line">kubectl logs -f &#123;podId&#125; -n &#123;namespace&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> pod<span class="string">&#x27;s container</span></span></span><br><span class="line">kubectl logs &lt;pod-name&gt; -c &lt;container-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod &lt;容器id&gt; --kubeconfig=/path/to/configfile -o yaml &gt; env-vq48.yaml</span><br><span class="line"># kubectl get -o yaml 这样的参数，会将指定的 Pod API 对象以 YAML 的方式展示出来。</span><br><span class="line"># expose</span><br><span class="line">kubectl get pod &lt;pod-name&gt; -n &lt;namespace&gt; -o yaml &gt; pod-config.yaml</span><br></pre></td></tr></table></figure><h3 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h3><p>without kubeconfig</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl <span class="built_in">exec</span> -it &#123;pod_name&#125; -- /bin/bash</span></span><br><span class="line">kubectl exec -it &#123;pod_id&#125; -n &#123;namespace&#125; -c &#123;container_id&#125; -- sh</span><br></pre></td></tr></table></figure><h3 id="copy"><a href="#copy" class="headerlink" title="copy"></a>copy</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl cp 命令空间/容器id:/path/to/source_file ./path/to/local_file</span><br></pre></td></tr></table></figure><h2 id="daemonsets"><a href="#daemonsets" class="headerlink" title="daemonsets"></a>daemonsets</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get daemonsets --all-namespaces</span><br></pre></td></tr></table></figure><h2 id="storage"><a href="#storage" class="headerlink" title="storage"></a>storage</h2><h3 id="CSIDriver"><a href="#CSIDriver" class="headerlink" title="CSIDriver"></a>CSIDriver</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get csidrivers</span><br></pre></td></tr></table></figure><h3 id="storageclass"><a href="#storageclass" class="headerlink" title="storageclass"></a>storageclass</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get storageclass</span><br></pre></td></tr></table></figure><h3 id="pvc"><a href="#pvc" class="headerlink" title="pvc"></a>pvc</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pvc</span><br></pre></td></tr></table></figure><h3 id="pv"><a href="#pv" class="headerlink" title="pv"></a>pv</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> list pv</span></span><br><span class="line">kubectl get pv</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> delete pv</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># step1: change stragety</span></span></span><br><span class="line">kubectl patch pv PV_NAME -p &#x27;&#123;&quot;spec&quot;:&#123;&quot;persistentVolumeReclaimPolicy&quot;:&quot;Delete&quot;&#125;&#125;&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># step2: delete</span></span></span><br><span class="line">kubectl delete pv PV_NAME</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;common&quot;&gt;&lt;a href=&quot;#common&quot; class=&quot;headerlink&quot; title=&quot;common&quot;&gt;&lt;/a&gt;common&lt;/h2&gt;&lt;h3 id=&quot;version&quot;&gt;&lt;a href=&quot;#version&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="kubectl" scheme="https://www.willshirley.top/categories/kubectl/"/>
    
    
    <category term="command" scheme="https://www.willshirley.top/tags/command/"/>
    
  </entry>
  
  <entry>
    <title>ceph learn</title>
    <link href="https://www.willshirley.top/2024/09/09/ceph%20learn/"/>
    <id>https://www.willshirley.top/2024/09/09/ceph%20learn/</id>
    <published>2024-09-09T06:52:09.000Z</published>
    <updated>2024-09-18T11:49:49.911Z</updated>
    
    <content type="html"><![CDATA[<h1 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h1><h2 id="cephadm"><a href="#cephadm" class="headerlink" title="cephadm"></a>cephadm</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> step1 monitor</span></span><br><span class="line">cephadm bootstrap --mon-ip *&lt;mon-ip&gt;*</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ceph shell</span></span><br><span class="line">sudo ./cephadm shell</span><br></pre></td></tr></table></figure><h1 id="service"><a href="#service" class="headerlink" title="service"></a>service</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> check all vaild service</span></span><br><span class="line">ceph orch ls</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> check all vaild/invaild service</span></span><br><span class="line">ceph orch ps</span><br></pre></td></tr></table></figure><h2 id="health"><a href="#health" class="headerlink" title="health"></a>health</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph df</span><br></pre></td></tr></table></figure><h2 id="host"><a href="#host" class="headerlink" title="host"></a>host</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> list host</span></span><br><span class="line">ceph orch host ls --detail</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> add host</span></span><br><span class="line">ssh-copy-id -f -i /etc/ceph/ceph.pub root@*&lt;new-host&gt;*</span><br><span class="line">ceph orch host add *&lt;newhost&gt;* [*&lt;ip&gt;*] [*&lt;label1&gt; ...*]</span><br><span class="line"><span class="meta">#</span><span class="bash"> e.g.  ceph orch host add host2 10.10.0.102 --labels _admin</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> remove host</span></span><br><span class="line">ceph orch host drain *&lt;host&gt;*</span><br><span class="line">ceph orch ps &lt;host&gt;  # daemons on the host</span><br><span class="line">ceph orch host rm &lt;host&gt; # remove the host from the cluster after all daemons have been removed</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> add storage</span></span><br><span class="line">ceph orch apply osd --all-available-devices</span><br></pre></td></tr></table></figure><h2 id="osd"><a href="#osd" class="headerlink" title="osd"></a>osd</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> list</span></span><br><span class="line">ceph orch device ls</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Creating New OSDs</span></span><br><span class="line">ceph orch apply osd --all-available-devices</span><br><span class="line"><span class="meta">#</span><span class="bash"> or</span></span><br><span class="line">ceph orch daemon add osd *&lt;host&gt;*:*&lt;device-path&gt;*</span><br><span class="line"><span class="meta">#</span><span class="bash"> e.g.</span></span><br><span class="line">ceph orch daemon add osd host1:/dev/sdb</span><br><span class="line">ceph orch daemon add osd host1:data_devices=/dev/sda,/dev/sdb,db_devices=/dev/sdc,osds_per_device=2</span><br></pre></td></tr></table></figure><h2 id="RGW"><a href="#RGW" class="headerlink" title="RGW"></a>RGW</h2><blockquote><p>radosgw</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> rgw</span></span><br><span class="line">ceph mgr module enable rgw</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> config rgw name e.g. foo</span></span><br><span class="line">ceph orch apply rgw foo</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> lable host</span> </span><br><span class="line">ceph orch host label add gwhost1 rgw  # the &#x27;rgw&#x27; label can be anything</span><br><span class="line">ceph orch host label add gwhost2 rgw</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> apply</span></span><br><span class="line">ceph orch apply rgw foo &#x27;--placement=label:rgw count-per-host:2&#x27; --port=8000</span><br></pre></td></tr></table></figure><h1 id="Ceph-Object-Gateway"><a href="#Ceph-Object-Gateway" class="headerlink" title="Ceph Object Gateway"></a>Ceph Object Gateway</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;deploy&quot;&gt;&lt;a href=&quot;#deploy&quot; class=&quot;headerlink&quot; title=&quot;deploy&quot;&gt;&lt;/a&gt;deploy&lt;/h1&gt;&lt;h2 id=&quot;cephadm&quot;&gt;&lt;a href=&quot;#cephadm&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="ceph" scheme="https://www.willshirley.top/categories/ceph/"/>
    
    
    <category term="learn" scheme="https://www.willshirley.top/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>c++ learn</title>
    <link href="https://www.willshirley.top/2024/09/08/c++%20learn/"/>
    <id>https://www.willshirley.top/2024/09/08/c++%20learn/</id>
    <published>2024-09-08T09:51:34.000Z</published>
    <updated>2024-12-26T03:34:01.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="philosophy"><a href="#philosophy" class="headerlink" title="philosophy"></a>philosophy</h1><p>The underlying design philosophy of C and C++ can be summed up as “trust the programmer” – which is both wonderful and dangerous. C++ is designed to allow the programmer a high degree of freedom to do what they want. However, this also means the language often won’t stop you from doing things that don’t make sense, because it will assume you’re doing so for some reason it doesn’t understand. There are quite a few pitfalls that new programmers are likely to fall into if caught unaware. This is one of the primary reasons why knowing what you shouldn’t do in C/C++ is almost as important as knowing what you should do.</p><p>Typically, good solutions have the following characteristics:</p><ul><li>They are straightforward (not overly complicated or confusing).</li><li>They are well documented (especially around any assumptions being made or limitations).</li><li>They are built modularly, so parts can be reused or changed later without impacting other parts of the program.</li><li>They can recover gracefully or give useful error messages when something unexpected happens.</li></ul><h1 id="terminology"><a href="#terminology" class="headerlink" title="terminology"></a>terminology</h1><ul><li>CTAD (class template argument deduction) </li></ul><h1 id="compiler"><a href="#compiler" class="headerlink" title="compiler"></a>compiler</h1><ul><li><p><strong>Build</strong> compiles all <em>modified</em> code files in the project or workspace/solution, and then links the object files into an executable. If no code files have been modified since the last build, this option does nothing.</p><ul><li>compile</li></ul><img src="/images/c++/CompileSource.png" style="zoom:100%;"/><ul><li>linking</li></ul><img src="/images/c++/LinkingObjects.webp"><p><strong>g++（GNU Compiler Collection for C++）</strong></p><p><code>g++</code> 是 GNU 编译器集合（GNU Compiler Collection, GCC）的一部分，专门用于编译 C++ 程序。GCC 是由 GNU 项目开发的开源编译器，支持多种编程语言，包括 C、C++、Objective-C、Fortran、Ada 和 Go 等。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> use</span></span><br><span class="line">g++ -o my_program my_program.cpp</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> specify compiler standard</span></span><br><span class="line">g++ --std=gnu++17 &#123;filename&#125;.cpp</span><br></pre></td></tr></table></figure><p><strong>clang++（Clang C++ Frontend）</strong></p><p><code>clang++</code> 是 Clang 项目的一部分，Clang 是一个由苹果公司主导开发的编译器前端，用于替代 GCC。它不仅支持 C++，还支持 C、Objective-C 和其他语言。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> use</span></span><br><span class="line">clang++ -o my_program my_program.cpp</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> specify compiler standard</span></span><br><span class="line">clang++ --std=c++17 &#123;filename&#125;.cpp</span><br></pre></td></tr></table></figure></li><li><p><strong>Clean</strong> removes all cached objects and executables so the next time the project is built, all files will be recompiled and a new executable produced.</p></li><li><p><strong>Rebuild</strong> does a “clean”, followed by a “build”.</p></li><li><p><strong>Compile</strong> recompiles a single code file (regardless of whether it has been cached previously). This option does not invoke the linker or produce an executable.</p></li><li><p><strong>Run/start</strong> executes the executable from a prior build. Some IDEs (e.g. Visual Studio) will invoke a “build” before doing a “run” to ensure you are running the latest version of your code. Otherwise (e.g. Code::Blocks) will just execute the prior executable.</p></li></ul><h1 id="grammer"><a href="#grammer" class="headerlink" title="grammer"></a>grammer</h1><h2 id="Basics"><a href="#Basics" class="headerlink" title="Basics"></a>Basics</h2><h3 id="operator"><a href="#operator" class="headerlink" title="operator"></a>operator</h3><ul><li>The <code>:: </code>symbol is an operator called the <strong>scope resolution operator</strong>.</li></ul><h3 id="iostream"><a href="#iostream" class="headerlink" title="iostream"></a>iostream</h3><ul><li><p>std::endl</p><p>output a newline; Using <code>std::endl</code> is often inefficient than <code>&#39;\n&#39;</code></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">std::cin and std::cout always go on the left-hand side of the operator.</span><br><span class="line">std::cout is used to output a value (cout = character output).</span><br><span class="line">std::cin is used to get an input value (cin = character input).</span><br><span class="line">&lt;&lt; is used with std::cout, and shows the direction that data is moving. std::cout &lt;&lt; 4 moves the value 4 to the console.</span><br><span class="line">&gt;&gt; is used with std::cin, and shows the direction that data is moving. std::cin &gt;&gt; x moves the value the user entered from the keyboard into variable x.</span><br></pre></td></tr></table></figure><ul><li>Avoid implementation-defined and unspecified behavior whenever possible, as they may cause your program to malfunction on other implementations.</li></ul><p>addition (<code>+</code>), subtraction (<code>-</code>), multiplication (<code>*</code>), division (<code>/</code>).  assignment (<code>=</code>)</p><h2 id="function"><a href="#function" class="headerlink" title="function"></a>function</h2><ul><li><p>When a function parameter exists but is not used in the body of the function, do not give it a name. You can optionally put a name inside a comment.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doSomething</span><span class="params">(<span class="keyword">int</span>)</span> <span class="comment">// ok: unnamed parameter will not generate warning</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">doSomething</span><span class="params">(<span class="keyword">int</span> <span class="comment">/*count*/</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Names used for function parameters or variables declared in a function body are only visible within the function that declares them. This means local variables within a function can be named without regard for the names of variables in other functions. This helps keep functions independent.</p></li><li><p>Define your local variables as close to their first use as reasonable.</p></li><li><p><strong>declaration</strong>, tells the <em>compiler</em> about the <em>existence</em> of an identifier and its associated type information.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>; <span class="comment">// tells the compiler about a function named &quot;add&quot; that takes two int parameters and returns an int.  No body!</span></span><br><span class="line"><span class="keyword">int</span> x;                 <span class="comment">// tells the compiler about an integer variable named x</span></span><br></pre></td></tr></table></figure></li><li><p><strong>definition</strong> is a declaration that actually implements (for functions and types) or instantiates (for variables) the identifier.<br>In C++, all definitions are declarations. Therefore <code>int x;</code> is both a definition and a declaration.</p></li><li><p>the compiler compiles each file individually. </p></li><li><p>Use double quotes to include header files that you’ve written or are expected to be found in the current directory. Use angled brackets to include headers that come with your compiler, OS, or third-party libraries you’ve installed elsewhere on your system.</p></li><li><p>header guard</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ADD_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADD_H</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></li></ul><ul><li>If a parameter is given a default argument, all subsequent parameters (to the right) must also be given default arguments.</li></ul><h2 id="Data-Types"><a href="#Data-Types" class="headerlink" title="Data Types"></a>Data Types</h2><ul><li>The smallest unit of memory is a <strong>binary digit</strong> (also called a <strong>bit</strong>), which can hold a value of 0 or 1.</li><li>Each memory address holds 1 byte of data. A <strong>byte</strong> is a group of bits that are operated on as a unit. The modern standard is that a byte is comprised of 8 sequential bits.</li></ul><table><thead><tr><th align="left">Types</th><th align="left">Category</th><th align="left">Meaning</th><th align="left">Example</th></tr></thead><tbody><tr><td align="left">float double long double</td><td align="left">Floating Point</td><td align="left">a number with a fractional part</td><td align="left">3.14159</td></tr><tr><td align="left">bool</td><td align="left">Integral (Boolean)</td><td align="left">true or false</td><td align="left">true</td></tr><tr><td align="left">char <br />wchar_t <br />char8_t (C++20) <br />char16_t (C++11) <br />char32_t (C++11)</td><td align="left">Integral (Character)</td><td align="left">a single character of text</td><td align="left">‘c’</td></tr><tr><td align="left">short int int long int long long int (C++11)</td><td align="left">Integral (Integer)</td><td align="left">positive and negative whole numbers, including 0</td><td align="left">64</td></tr><tr><td align="left">std::nullptr_t (C++11)</td><td align="left">Null Pointer</td><td align="left">a null pointer</td><td align="left">nullptr</td></tr><tr><td align="left">void</td><td align="left">Void</td><td align="left">no type</td><td align="left">n/a</td></tr></tbody></table><table><thead><tr><th align="left">Category</th><th align="left">Type</th><th align="left">Minimum Size</th><th align="left">Typical Size</th><th align="left">Note</th></tr></thead><tbody><tr><td align="left">Boolean</td><td align="left">bool</td><td align="left">1 byte</td><td align="left">1 byte</td><td align="left"></td></tr><tr><td align="left">character</td><td align="left">char</td><td align="left">1 byte</td><td align="left">1 byte</td><td align="left">always exactly 1 byte</td></tr><tr><td align="left"></td><td align="left">wchar_t</td><td align="left">1 byte</td><td align="left">2 or 4 bytes</td><td align="left"></td></tr><tr><td align="left"></td><td align="left">char8_t</td><td align="left">1 byte</td><td align="left">1 byte</td><td align="left"></td></tr><tr><td align="left"></td><td align="left">char16_t</td><td align="left">2 bytes</td><td align="left">2 bytes</td><td align="left"></td></tr><tr><td align="left"></td><td align="left">char32_t</td><td align="left">4 bytes</td><td align="left">4 bytes</td><td align="left"></td></tr><tr><td align="left">integer</td><td align="left">short</td><td align="left">2 bytes</td><td align="left">2 bytes</td><td align="left"></td></tr><tr><td align="left"></td><td align="left">int</td><td align="left">2 bytes</td><td align="left">4 bytes</td><td align="left"></td></tr><tr><td align="left"></td><td align="left">long</td><td align="left">4 bytes</td><td align="left">4 or 8 bytes</td><td align="left"></td></tr><tr><td align="left"></td><td align="left">long long</td><td align="left">8 bytes</td><td align="left">8 bytes</td><td align="left"></td></tr><tr><td align="left">floating point</td><td align="left">float</td><td align="left">4 bytes</td><td align="left">4 bytes</td><td align="left"></td></tr><tr><td align="left"></td><td align="left">double</td><td align="left">8 bytes</td><td align="left">8 bytes</td><td align="left"></td></tr><tr><td align="left"></td><td align="left">long double</td><td align="left">8 bytes</td><td align="left">8, 12, or 16 bytes</td><td align="left"></td></tr><tr><td align="left">pointer</td><td align="left">std::nullptr_t</td><td align="left">4 bytes</td><td align="left">4 or 8 bytes</td><td align="left"></td></tr></tbody></table><h3 id="integer"><a href="#integer" class="headerlink" title="integer"></a>integer</h3><table><thead><tr><th align="left">Size / Type</th><th align="left">Range</th></tr></thead><tbody><tr><td align="left">8-bit signed</td><td align="left">-128 to 127</td></tr><tr><td align="left">16-bit signed</td><td align="left">-32,768 to 32,767</td></tr><tr><td align="left">32-bit signed</td><td align="left">-2,147,483,648 to 2,147,483,647</td></tr><tr><td align="left">64-bit signed</td><td align="left">-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807</td></tr></tbody></table><table><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Range</th><th align="left">Notes</th></tr></thead><tbody><tr><td align="left">std::int8_t</td><td align="left">1 byte signed</td><td align="left">-128 to 127</td><td align="left">**Treated like a signed char on many systems. **</td></tr><tr><td align="left">std::uint8_t</td><td align="left">1 byte unsigned</td><td align="left">0 to 255</td><td align="left">**Treated like an unsigned char on many systems. **</td></tr><tr><td align="left">std::int16_t</td><td align="left">2 byte signed</td><td align="left">-32,768 to 32,767</td><td align="left"></td></tr><tr><td align="left">std::uint16_t</td><td align="left">2 byte unsigned</td><td align="left">0 to 65,535</td><td align="left"></td></tr><tr><td align="left">std::int32_t</td><td align="left">4 byte signed</td><td align="left">-2,147,483,648 to 2,147,483,647</td><td align="left"></td></tr><tr><td align="left">std::uint32_t</td><td align="left">4 byte unsigned</td><td align="left">0 to 4,294,967,295</td><td align="left"></td></tr><tr><td align="left">std::int64_t</td><td align="left">8 byte signed</td><td align="left">-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807</td><td align="left"></td></tr><tr><td align="left">std::uint64_t</td><td align="left">8 byte unsigned</td><td align="left"></td><td align="left"></td></tr></tbody></table><h3 id="floating-point"><a href="#floating-point" class="headerlink" title="floating point"></a>floating point</h3><table><thead><tr><th align="left">Size</th><th align="left">Range</th><th align="left">Precision</th></tr></thead><tbody><tr><td align="left">4 bytes</td><td align="left">±1.18 x 10-38 to ±3.4 x 1038 and 0.0</td><td align="left">6-9 significant digits, typically 7</td></tr><tr><td align="left">8 bytes</td><td align="left">±2.23 x 10-308 to ±1.80 x 10308 and 0.0</td><td align="left">15-18 significant digits, typically 16</td></tr><tr><td align="left">80-bits (typically uses 12 or 16 bytes)</td><td align="left">±3.36 x 10-4932 to ±1.18 x 104932 and 0.0</td><td align="left">18-21 significant digits</td></tr><tr><td align="left">16 bytes</td><td align="left">±3.36 x 10-4932 to ±1.18 x 104932 and 0.0</td><td align="left">33-36 significant digits</td></tr></tbody></table><ul><li><p>When outputting floating point numbers, <code>std::cout</code> has a default precision of 6 – that is, it assumes all floating point variables are only significant to 6 digits (the minimum precision of a float), and hence it will truncate anything after that.</p></li><li><p><strong>Inf</strong>, which represents infinity. Inf can be positive or negative.  <strong>NaN</strong>, which stands for “Not a Number”.</p></li><li><p>By default, floating point values whose decimal part is 0 print without the decimal places (e.g. <code>5.0</code> prints as <code>5</code>).</p></li></ul><h2 id="const-and-string"><a href="#const-and-string" class="headerlink" title="const and string"></a>const and string</h2><p><strong>const vs constexpr</strong></p><ul><li><p><strong>Purpose:</strong> <code>const</code> is used to specify that a variable or function parameter cannot be modified, while <code>constexpr</code> is used to specify that an expression can be evaluated at compile-time.</p></li><li><p><strong>Scope:</strong> A <code>const</code> variable can have a scope that includes the current block, while a <code>constexpr</code> expression must be within the scope of a function or class definition.</p></li><li><p><strong>Evaluation time:</strong> A <code>const</code> variable is evaluated at runtime, while a <code>constexpr</code> expression is evaluated at compile-time.</p></li></ul><p><strong>Numeral systems</strong></p><ul><li><p>There are 4 main numeral systems available in C++. In order of popularity, these are: decimal (base 10), binary (base 2), hexadecimal (base 16), and octal (base 8).</p><p>To use an octal literal, prefix your literal with a <code>0 (zero)</code>, e.g. <code>int x&#123; 012 &#125;</code></p><p>To use a hexadecimal literal, prefix your literal with <code>0x</code>, e.g.  <code>int x&#123; 0xF &#125;</code></p><p>By default, C++ outputs values in decimal. However, you can change the output format via use of the <code>std::dec</code>, <code>std::oct</code>, and <code>std::hex</code> I/O manipulators:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x &#123; <span class="number">12</span> &#125;;</span><br><span class="line">std::cout &lt;&lt; x &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; <span class="comment">// decimal (by default)</span></span><br><span class="line">std::cout &lt;&lt; std::hex &lt;&lt; x &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; <span class="comment">// hexadecimal</span></span><br><span class="line">std::cout &lt;&lt; x &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; <span class="comment">// now hexadecimal</span></span><br><span class="line">std::cout &lt;&lt; std::oct &lt;&lt; x &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; <span class="comment">// octal</span></span><br><span class="line">std::cout &lt;&lt; std::dec &lt;&lt; x &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; <span class="comment">// return to decimal</span></span><br><span class="line">std::cout &lt;&lt; x &lt;&lt; <span class="string">&#x27;\n&#x27;</span>; <span class="comment">// decimal</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="scope-duration-linkage"><a href="#scope-duration-linkage" class="headerlink" title="scope duration linkage"></a>scope duration linkage</h2><table><thead><tr><th align="left">Type</th><th align="left">Example</th><th align="left">Scope</th><th align="left">Duration</th><th align="left">Linkage</th><th align="left">Notes</th></tr></thead><tbody><tr><td align="left">Local variable</td><td align="left">int x;</td><td align="left">Block</td><td align="left">Automatic</td><td align="left">None</td><td align="left"></td></tr><tr><td align="left">Static local variable</td><td align="left">static int s_x;</td><td align="left">Block</td><td align="left">Static</td><td align="left">None</td><td align="left"></td></tr><tr><td align="left">Dynamic local variable</td><td align="left">int* x { new int{} };</td><td align="left">Block</td><td align="left">Dynamic</td><td align="left">None</td><td align="left"></td></tr><tr><td align="left">Function parameter</td><td align="left">void foo(int x)</td><td align="left">Block</td><td align="left">Automatic</td><td align="left">None</td><td align="left"></td></tr><tr><td align="left">Internal non-const global variable</td><td align="left">static int g_x;</td><td align="left">Global</td><td align="left">Static</td><td align="left">Internal</td><td align="left">Initialized or uninitialized</td></tr><tr><td align="left">External non-const global variable</td><td align="left">int g_x;</td><td align="left">Global</td><td align="left">Static</td><td align="left">External</td><td align="left">Initialized or uninitialized</td></tr><tr><td align="left">Inline non-const global variable (C++17)</td><td align="left">inline int g_x;</td><td align="left">Global</td><td align="left">Static</td><td align="left">External</td><td align="left">Initialized or uninitialized</td></tr><tr><td align="left">Internal constant global variable</td><td align="left">constexpr int g_x { 1 };</td><td align="left">Global</td><td align="left">Static</td><td align="left">Internal</td><td align="left">Must be initialized</td></tr><tr><td align="left">External constant global variable</td><td align="left">extern const int g_x { 1 };</td><td align="left">Global</td><td align="left">Static</td><td align="left">External</td><td align="left">Must be initialized</td></tr><tr><td align="left">Inline constant global variable (C++17)</td><td align="left">inline constexpr int g_x { 1 };</td><td align="left">Global</td><td align="left">Static</td><td align="left">External</td><td align="left">Must be initialized</td></tr></tbody></table><ul><li><p>Variables declared inside a namespace are also global variables.</p><p>Prefer defining global variables inside a namespace rather than in the global namespace.</p></li><li><p>Scope determines where a variable is accessible. Duration determines when a variable is created and destroyed. </p></li><li><p>Linkage determines whether the variable can be exported to another file or not.</p></li><li><p>Global variables can have either internal or external linkage, via the static and extern keywords respectively.</p></li><li><p>Initialize your static local variables. Static local variables are only initialized the first time the code is executed, not on subsequent calls.</p></li></ul><h2 id="control-flow"><a href="#control-flow" class="headerlink" title="control flow"></a>control flow</h2><table><thead><tr><th align="left">Category</th><th align="left">Meaning</th><th align="left">Implemented in C++ by</th></tr></thead><tbody><tr><td align="left">Conditional statements</td><td align="left">Causes a sequence of code to execute only if some condition is met.</td><td align="left">if, else, switch</td></tr><tr><td align="left">Jumps</td><td align="left">Tells the CPU to start executing the statements at some other location.</td><td align="left">goto, break, continue</td></tr><tr><td align="left">Function calls</td><td align="left">Jump to some other location and back.</td><td align="left">function calls, return</td></tr><tr><td align="left">Loops</td><td align="left">Repeatedly execute some sequence of code zero or more times, until some condition is met.</td><td align="left">while, do-while, for, ranged-for</td></tr><tr><td align="left">Halts</td><td align="left">Terminate the program.</td><td align="left">std::exit(), std::abort()</td></tr><tr><td align="left">Exceptions</td><td align="left">A special kind of flow control structure designed for error handling.</td><td align="left">try, throw, catch</td></tr></tbody></table><h2 id="References-and-Pointers"><a href="#References-and-Pointers" class="headerlink" title="References and Pointers"></a>References and Pointers</h2><p><strong>Lvalue</strong></p><ul><li>Lvalue expressions evaluate to an identifiable object.<ul><li>An lvalue reference  acts as an alias for an existing lvalue (such as a variable).</li><li>Lvalue references can only bind to modifiable lvalues.</li><li>Lvalue references to const can bind to modifiable lvalues, non-modifiable lvalues, and rvalues. This makes them a much more flexible type of reference.</li></ul></li></ul><p><strong>Rvalue</strong></p><ul><li>Rvalue expressions evaluate to a value.</li></ul><p><strong>Reference</strong></p><ul><li>Pass by reference allows us to pass arguments to a function without making copies of those arguments each time the function is called.</li><li>Pass by reference can only accept modifiable lvalue arguments</li><li>Class types can be expensive to copy (sometimes significantly so), so they are typically passed by const reference. Fundamental types and enumerated types are cheap to copy, so they are typically passed by value.</li><li>When an object being referenced is destroyed before a reference to it, the reference is left referencing an object that no longer exists. Such a reference is called a <em>dangling reference</em></li></ul><p><strong>Pointer</strong></p><ul><li>A pointer is an object that holds a <em>memory address</em> (typically of another variable) as its value. This allows us to store the address of some other object to use later.</li><li>Use <code>nullptr</code> when you need a null pointer literal for initialization, assignment, or passing a null pointer to a function.</li><li>When we pass an address to a function, that address is copied from the argument into the pointer parameter (which is fine, because copying an address is fast). </li><li>pointers must hold the address of an object ( can’t have a pointer to a reference, since references aren’t objects )</li><li>Objects returned by reference must live beyond the scope of the function returning the reference, or a dangling reference will result. Never return a (non-static) local variable or temporary by reference.</li></ul><p><strong>summary</strong></p><ul><li>Prefer pass by reference to pass by address unless you have a specific reason to use pass by address.</li></ul><h2 id="Compound-Types"><a href="#Compound-Types" class="headerlink" title="Compound Types"></a>Compound Types</h2><blockquote><p>Enums and Structs</p></blockquote><table><thead><tr><th align="left">Type</th><th align="left">Meaning</th><th align="left">Examples</th></tr></thead><tbody><tr><td align="left">Fundamental</td><td align="left">A type built into the core C++ language</td><td align="left">int, std::nullptr_t</td></tr><tr><td align="left">Compound</td><td align="left">A type built from fundamental types</td><td align="left">int&amp;, double*, std::string, Fraction</td></tr><tr><td align="left">User-defined</td><td align="left">A class type or enumerated type (Includes those defined in the standard library or implementation) (In casual use, typically used to mean program-defined types)</td><td align="left">std::string, Fraction</td></tr><tr><td align="left">Program-defined</td><td align="left">A class type or enumerated type (Excludes those defined in standard library or implementation)</td><td align="left">Fraction</td></tr></tbody></table><ul><li>A <strong>class template</strong> is a template definition for instantiating class types (structs, classes, or unions). <strong>Class template argument deduction (CTAD)</strong> is a C++17 feature that allows the compiler to deduce the template type arguments from an initializer.</li><li>The members of a struct are public by default</li></ul><h2 id="classes"><a href="#classes" class="headerlink" title="classes"></a>classes</h2><table><thead><tr><th align="left">Access level</th><th align="left">Access specifier</th><th align="left">Member access</th><th align="left">Derived class access</th><th align="left">Public access</th></tr></thead><tbody><tr><td align="left">Public</td><td align="left">public:</td><td align="left">yes</td><td align="left">yes</td><td align="left">yes</td></tr><tr><td align="left">Protected</td><td align="left">protected:</td><td align="left">yes</td><td align="left">yes</td><td align="left">no</td></tr><tr><td align="left">Private</td><td align="left">private:</td><td align="left">yes</td><td align="left">no</td><td align="left">no</td></tr></tbody></table><ul><li><p>The members of a class are private by default. Private members can be accessed by other members of the class, but can not be accessed by the public.</p><p>A class with private members is no longer an aggregate, and therefore can no longer use aggregate initialization.</p></li><li><p>Classes should generally make member variables private (or protected), and member functions public.</p><p>Structs should generally avoid using access specifiers (all members will default to public).</p></li><li><p>Prefer using the member initializer list to initialize your members over assigning values in the body of the constructor.</p></li><li><p>If you want your class to be able to be evaluated at compile-time, make your member functions and constructor constexpr.</p></li><li><p>A non-const member function can modify members of non-const objects.</p></li><li><p>A constexpr member function can be called in either runtime contexts or compile-time contexts.</p></li><li><p>All non-static member functions have a <code>this</code> const pointer that holds the address of the implicit object.</p></li></ul><h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h2><ul><li>Avoid array indexing with integral values whenever possible.</li><li>For range-based for loops, prefer to define the element type as:<ul><li><code>auto</code> when you want to modify copies of the elements.</li><li><code>auto&amp;</code> when you want to modify the original elements.</li><li><code>const auto&amp;</code> otherwise (when you just need to view the original elements).</li></ul></li><li>The length of a vector is how many elements are “in use”.<br>The capacity of a vector is how many elements have been allocated in memory.</li><li>Tracking capacity separately from length allows the <code>std::vector</code> to avoid some reallocations when length is changed.</li><li>To increase the number of elements in a <code>std::vector</code>:<br>Use <code>resize()</code> when accessing a vector via indexing. This changes the length of the vector so your indices will be valid.<br>Use <code>reserve()</code> when accessing a vector using stack operations. This adds capacity without changing the length of the vector.</li></ul><h2 id="array"><a href="#array" class="headerlink" title="array"></a>array</h2><ul><li>Define  <code>std::array</code> as constexpr whenever possible. If your <code>std::array</code> is not constexpr, consider using a <code>std::vector</code> instead.</li><li>Use class template argument deduction (CTAD) to have the compiler deduce the type and length of a <code>std::array</code> from its initializers.</li></ul><h2 id="memory-allocation"><a href="#memory-allocation" class="headerlink" title="memory allocation"></a>memory allocation</h2><ul><li><p><strong>Static memory allocation</strong> happens for static and global variables. Memory for these types of variables is allocated once when your program is run and persists throughout the life of your program.</p></li><li><p><strong>Automatic memory allocation</strong> happens for function parameters and local variables. Memory for these types of variables is allocated when the relevant block is entered, and freed when the block is exited, as many times as necessary.</p></li><li><p>accessing heap-allocated objects is generally slower than accessing stack-allocated objects. Because the compiler knows the address of stack-allocated objects, it can go directly to that address to get a value. Heap allocated objects are typically accessed via pointer. This requires two steps: one to get the address of the object (from the pointer), and another to get the value.</p></li></ul><h1 id="tool"><a href="#tool" class="headerlink" title="tool"></a>tool</h1><h2 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h2><h3 id="config-file"><a href="#config-file" class="headerlink" title="config file"></a>config file</h3><ul><li><p>c_cpp_properties.json</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> config include path</span></span><br><span class="line">Open the Command Palette (Ctrl+Shift+P) and type C/C++: Edit Configurations (UI).</span><br><span class="line">This will open the c_cpp_properties.json file. If it doesn&#x27;t exist, it will be created.</span><br></pre></td></tr></table></figure></li><li><p>setting.json</p></li><li><p>tasks.json</p></li></ul><h2 id="error-detection-and-handing"><a href="#error-detection-and-handing" class="headerlink" title="error detection and handing"></a>error detection and handing</h2><ul><li>Favor <code>static_assert</code> over <code>assert()</code> whenever possible.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;philosophy&quot;&gt;&lt;a href=&quot;#philosophy&quot; class=&quot;headerlink&quot; title=&quot;philosophy&quot;&gt;&lt;/a&gt;philosophy&lt;/h1&gt;&lt;p&gt;The underlying design philosophy of C </summary>
      
    
    
    
    <category term="c++" scheme="https://www.willshirley.top/categories/c/"/>
    
    
    <category term="learn" scheme="https://www.willshirley.top/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes csi</title>
    <link href="https://www.willshirley.top/2024/09/05/kubernetes%20csi/"/>
    <id>https://www.willshirley.top/2024/09/05/kubernetes%20csi/</id>
    <published>2024-09-05T08:57:50.000Z</published>
    <updated>2024-12-18T08:07:13.291Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RPC"><a href="#RPC" class="headerlink" title="RPC"></a>RPC</h1><p>In Kubernetes, the CSI (Container Storage Interface) plugin uses Unix domain sockets for communication between the kubelet and CSI drivers:</p><ul><li><p>Socket Location:  </p><ul><li><code>/var/lib/kubelet/plugins/csi.dingofs.com/csi-controller.sock</code></li><li><code>/var/lib/kubelet/plugins/csi.dingofs.com/csi.sock</code></li></ul></li><li><p>Role: </p><ul><li><p>The CSI driver exposes its RPC interface via the Unix domain socket.</p></li><li><p>Kubelet connects to this socket to invoke RPC methods like CreateVolume or NodePublishVolume.</p></li></ul></li></ul><p>This approach ensures efficient and secure communication between the kubelet and the storage driver, without exposing the RPC interface over a network.</p><h1 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h1><blockquote><p>Container Storage Interface <strong>容器的持久化存储的含义</strong>，就是用来保存容器存储状态的重要手段：存储插件会在容器里挂载一个基于网络或者其他机制的远程数据卷，使得在容器里创建的文件，实际上是保存在远程存储服务器上，或者以分布式的方式保存在多个节点上，而与当前宿主机没有任何绑定关系。这样，无论你在其他哪个宿主机上启动新的容器，都可以请求挂载指定的持久化存储卷，从而访问到数据卷里保存的内容。</p><p><strong>CSI 插件体系的设计思想，就是把 Provision 阶段，以及 Kubernetes 里的一部分存储管理功能(比如“Attach 阶段”和“Mount 阶段”的具体操作)，从主干代码里剥离出来，做成了几个单独的组件</strong></p></blockquote><p>一个 CSI 插件只有一个二进制文件，但它会以 gRPC 的方式对外提供三个服务（gRPC Service），分别叫作：CSI Identity、CSI Controller 和 CSI Node</p><p><strong>CSI 的设计思想</strong>，把插件的职责从“两阶段处理”，扩展成了 Provision、Attach 和 Mount 三个阶段。其中，Provision 等价于“创建磁盘”，Attach 等价于“挂载磁盘到虚拟机”，Mount 等价于“将该磁盘格式化后，挂载在 Volume 的宿主机目录上”。</p><img src="/images/k8s/csi idea.png" style="zoom:50%;"/><p>below diagram depicts a kind of high-level Kubernetes archetypes integrated with CSI:</p><img src="/images/k8s/csi-diagram.png" style="zoom:50%;"/><blockquote><p>在实际使用 CSI 插件的时候，我们会将这三个 External Components 作为 sidecar 容器和 CSI 插件放置在同一个 Pod 中。由于 External Components 对 CSI 插件的调用非常频繁，所以这种 sidecar 的部署方式非常高效。</p></blockquote><ul><li>the external components are introduced to decouple Kubernetes and Storage Provider logic</li><li>Blue arrows present the conventional way to call against API Server</li><li>Red arrows present gRPC to call against Volume Driver</li></ul><h2 id="External-Components"><a href="#External-Components" class="headerlink" title="External Components"></a>External Components</h2><ul><li><p><strong>Driver Registrar</strong></p><p><strong>负责将插件注册到 kubelet 里面</strong>（这可以类比为，将可执行文件放在插件目录下）。而在具体实现上，Driver Registrar 需要请求 CSI 插件的 Identity 服务来获取插件信息。</p><blockquote><p>CSIDriver 是集群级别的，供其他namespace调用</p></blockquote></li><li><p><strong>External Provisioner</strong></p><p><strong>负责 Provision 阶段</strong>。在具体实现上，External Provisioner 监听（Watch）了 APIServer 里的 PVC 对象。当一个 PVC 被创建时，它就会调用 CSI Controller 的 CreateVolume 方法，创建对应 PV</p></li><li><p><strong>External Attacher</strong></p><p><strong>负责“Attach 阶段”</strong>。在具体实现上，它监听了 APIServer 里 VolumeAttachment 对象的变化。VolumeAttachment 对象是 Kubernetes 确认一个 Volume 可以进入“Attach 阶段”的重要标志；</p><p>一旦出现了 VolumeAttachment 对象，External Attacher 就会调用 CSI Controller 服务的 ControllerPublish 方法，完成它所对应的 Volume 的 Attach 阶段。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kubernetes-csi/external-snapshotter: This project contains the sidecar container that watches Kubernetes VolumeSnapshot objects and triggers CreateSnapshot/DeleteSnapshot operations against a CSI endpoint.</span><br><span class="line"></span><br><span class="line">kubernetes-csi/external-provisioner: The external-provisioner is a sidecar container that watches Kubernetes PersistentVolumeClaim objects and triggers CreateVolume/DeleteVolume operations against a CSI endpoint.</span><br><span class="line"></span><br><span class="line">kubernetes-csi/external-attacher: The external-attacher is a sidecar container that watches Kubernetes VolumeAttachment objects and triggers ControllerPublish/Unpublish operations against a CSI endpoint.</span><br><span class="line"></span><br><span class="line">kubernetes-csi/node-driver-registrar: This sidecar container registers a CSI driver with the kubelet using the kubelet plugin registration mechanism.</span><br><span class="line"></span><br><span class="line">kubernetes-csi/livenessprobe: A sidecar container that can be included in a CSI plugin pod to enable integration with Kubernetes Liveness Probe</span><br></pre></td></tr></table></figure></li></ul><h2 id="Custom-Components"><a href="#Custom-Components" class="headerlink" title="Custom Components"></a>Custom Components</h2><ul><li><p><strong>CSI Identity</strong></p><p><strong>负责对外暴露这个插件本身的信息</strong></p></li><li><p><strong>CSI Controller</strong></p><p><strong>定义的则是对 CSI Volume（对应 Kubernetes 里的 PV）的管理接口</strong>，比如：创建和删除 CSI Volume、对 CSI Volume 进行 Attach/Dettach（在 CSI 里，这个操作被叫作 Publish/Unpublish），以及对 CSI Volume 进行 Snapshot 等</p></li><li><p><strong>CSI Node</strong></p><p>“Mount 阶段”在 CSI Node 里的接口，是由 NodeStageVolume 和 NodePublishVolume 两个接口共同实现的;</p><p>当 kubelet 的 VolumeManagerReconciler 控制循环检查到它需要执行 Mount 操作的时候，会通过 pkg/volume/csi 包，直接调用 CSI Node 服务完成 Volume 的“Mount 阶段”</p></li></ul><h1 id="provision"><a href="#provision" class="headerlink" title="provision"></a>provision</h1><h2 id="Dynamic-provisioning"><a href="#Dynamic-provisioning" class="headerlink" title="Dynamic provisioning"></a>Dynamic provisioning</h2><ul><li>Create the PVC first.</li><li>the CreateVolume request is triggered by Kubernetes when a PVC requests storage, and the CSI driver dynamically provisions the volume based on StorageClass and PVC parameters.</li></ul><h2 id="Static-provisioning"><a href="#Static-provisioning" class="headerlink" title="Static provisioning"></a>Static provisioning</h2><ul><li>Create the PV first.</li><li>there is no CreateVolume request. Instead, the PV is manually created, and the CSI driver accesses an already provisioned volume using information like volumeHandle from the PV YAML.</li></ul><h1 id="senarios"><a href="#senarios" class="headerlink" title="senarios"></a>senarios</h1><h2 id="expand-volume"><a href="#expand-volume" class="headerlink" title="expand volume"></a>expand volume</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant User as User</span><br><span class="line">    participant APIServer as API Server</span><br><span class="line">    participant ControllerManager as Kube-Controller-Manager</span><br><span class="line">    participant CSIController as CSI Controller Plugin</span><br><span class="line">    participant Node as Node (Kubelet)</span><br><span class="line"></span><br><span class="line">    User-&gt;&gt;APIServer: Update PVC with new size</span><br><span class="line">    APIServer-&gt;&gt;ControllerManager: Trigger Volume Expansion</span><br><span class="line">    ControllerManager-&gt;&gt;CSIController: ControllerExpandVolume</span><br><span class="line">    CSIController--&gt;&gt;ControllerManager: Expansion Success (NodeExpansionRequired: true)</span><br><span class="line"></span><br><span class="line">    ControllerManager-&gt;&gt;APIServer: Update PV size</span><br><span class="line">    APIServer-&gt;&gt;Node: Notify Node of Expansion</span><br><span class="line">    Node-&gt;&gt;CSIController: NodeExpandVolume</span><br><span class="line">    CSIController--&gt;&gt;Node: Expansion Success</span><br><span class="line">    Node-&gt;&gt;APIServer: Filesystem Resized</span><br><span class="line">    APIServer-&gt;&gt;User: PVC Expansion Complete</span><br></pre></td></tr></table></figure><h1 id="code"><a href="#code" class="headerlink" title="code"></a>code</h1><h2 id="request"><a href="#request" class="headerlink" title="request"></a>request</h2><ul><li><p><code>volCap := req.GetVolumeCapability()</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">get volume_capability:</span><br><span class="line">appName=&quot;test-dingofs-app&quot; volumeId=&quot;pvc-a96af0fb-2df7-435f-bde9-b3b3f0853023&quot;</span><br><span class="line">volCap=</span><br><span class="line">&#123;</span><br><span class="line">&quot;AccessType&quot;: &#123;</span><br><span class="line">&quot;Mount&quot;: &#123;</span><br><span class="line">&quot;mount_flags&quot;: [&quot;diskCache.diskCacheType=2&quot;, &quot;block_cache.cache_store=disk&quot;, &quot;disk_cache.cache_dir=/curvefs/client/data/cache/1:10240;/curvefs/client/data/cache/2:10240;/curvefs/client/data/cache/3:10240&quot;, &quot;disk_cache.cache_size_mb=102400&quot;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;access_mode&quot;: &#123;</span><br><span class="line">&quot;mode&quot;: 5</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>volCtx := req.GetVolumeContext()</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">get volume context:</span><br><span class="line">appName=&quot;test-dingofs-app&quot; volumeId=&quot;pvc-a96af0fb-2df7-435f-bde9-b3b3f0853023&quot;</span><br><span class="line">volCtx=</span><br><span class="line">&#123;</span><br><span class="line">&quot;capacity&quot;: &quot;21474836480&quot;,</span><br><span class="line">&quot;csi.storage.k8s.io/ephemeral&quot;: &quot;false&quot;,</span><br><span class="line">&quot;csi.storage.k8s.io/pod.name&quot;: &quot;test-dingofs-app&quot;,</span><br><span class="line">&quot;csi.storage.k8s.io/pod.namespace&quot;: &quot;test-dingofs-mountpod&quot;,</span><br><span class="line">&quot;csi.storage.k8s.io/pod.uid&quot;: &quot;98ad53c2-e99f-4ccf-b98c-841d9ec5a5b8&quot;,</span><br><span class="line">&quot;csi.storage.k8s.io/serviceAccount.name&quot;: &quot;default&quot;,</span><br><span class="line">&quot;storage.kubernetes.io/csiProvisionerIdentity&quot;: &quot;1734407521827-8081-csi.dingofs.v2&quot;,</span><br><span class="line">&quot;subPath&quot;: &quot;pvc-a96af0fb-2df7-435f-bde9-b3b3f0853023&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RPC&quot;&gt;&lt;a href=&quot;#RPC&quot; class=&quot;headerlink&quot; title=&quot;RPC&quot;&gt;&lt;/a&gt;RPC&lt;/h1&gt;&lt;p&gt;In Kubernetes, the CSI (Container Storage Interface) plugin uses U</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://www.willshirley.top/categories/Kubernetes/"/>
    
    
    <category term="csi" scheme="https://www.willshirley.top/tags/csi/"/>
    
  </entry>
  
  <entry>
    <title>emacs</title>
    <link href="https://www.willshirley.top/2024/08/30/emacs/"/>
    <id>https://www.willshirley.top/2024/08/30/emacs/</id>
    <published>2024-08-30T09:55:37.000Z</published>
    <updated>2024-09-02T01:46:38.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="shortcut"><a href="#shortcut" class="headerlink" title="shortcut"></a>shortcut</h2><table><thead><tr><th>Emacs 功能键</th><th>缩写</th><th>对应键盘按键(PC/Mac)</th></tr></thead><tbody><tr><td>Control</td><td>C</td><td>Ctrl / Control</td></tr><tr><td>Meta</td><td>M</td><td>Alt / Option</td></tr><tr><td>Shift</td><td>S</td><td>Shift / Shift</td></tr><tr><td>Super</td><td>s</td><td>Win / Command</td></tr></tbody></table><table><thead><tr><th>操作描述</th><th>快捷键</th><th>命令名</th></tr></thead><tbody><tr><td>输入命令</td><td>M-x</td><td>execute-extended-command</td></tr><tr><td>退出程序</td><td>C-x C-c</td><td>save-buffers-kill-terminal</td></tr><tr><td>放弃当前输入</td><td>C-g</td><td>keyboard-quit</td></tr><tr><td>光标向上一行（方向键上）</td><td>C-p</td><td>previous-line</td></tr><tr><td>光标向下一行（方向键下）</td><td>C-n</td><td>next-line</td></tr><tr><td>光标向左一个字符（方向键左）</td><td>C-b</td><td>backward-char</td></tr><tr><td>光标向右一个字符（方向键右）</td><td>C-f</td><td>forward-char</td></tr><tr><td>光标向左移动一个词</td><td>M-b</td><td>backward-word</td></tr><tr><td>光标向右移动一个词</td><td>M-f</td><td>forward-word</td></tr><tr><td>光标移至行首</td><td>C-a</td><td>move-beginning-of-line</td></tr><tr><td>光标移至行尾</td><td>C-e</td><td>move-end-of-line</td></tr><tr><td>光标移动到一行缩进的开头</td><td>M-m</td><td>back-to-indentation</td></tr><tr><td>光标移至句首</td><td>M-a</td><td>backward-sentence</td></tr><tr><td>光标移至句尾</td><td>M-e</td><td>forward-sentence</td></tr><tr><td>光标移至文件开头</td><td>M-&lt;</td><td>beginning-of-buffer</td></tr><tr><td>光标移至文件结尾</td><td>M-&gt;</td><td>end-of-buffer</td></tr><tr><td>光标移动至窗口的中间、最上、最下</td><td>M-r</td><td>move-to-window-line-top-bottom</td></tr><tr><td>删除光标右侧字符</td><td>C-d</td><td>delete-char</td></tr><tr><td>移除光标右侧词</td><td>M-d</td><td>kill-word</td></tr><tr><td>移除光标左侧词</td><td>M-DEL</td><td>backward-kill-word</td></tr><tr><td>移除右侧直到句子结尾</td><td>M-k</td><td>kill-sentence</td></tr><tr><td>移除右侧直到行尾</td><td>C-k</td><td>kill-line</td></tr><tr><td>设置标记以选择区域</td><td>C-SPC</td><td>set-mark-command</td></tr><tr><td>复制区域</td><td>M-w</td><td>kill-region-save</td></tr><tr><td>移除区域</td><td>C-w</td><td>kill-region</td></tr><tr><td>插入已移除文本</td><td>C-y</td><td>yank</td></tr><tr><td>插入历史移除文本</td><td>M-y</td><td>yank-pop</td></tr><tr><td>撤回</td><td>C-/ 或 C-_ 或 C-x u</td><td>undo</td></tr><tr><td>跳转到上一标记</td><td>C-x C-SPC 或 C-u C-SPC</td><td>pop-global-mark</td></tr><tr><td>跳转到行号</td><td>M-g M-g</td><td>goto-line</td></tr><tr><td>重复</td><td>C-u</td><td>universal-argument</td></tr><tr><td>向下一页</td><td>C-v</td><td>scroll-up-command</td></tr><tr><td>向上一页</td><td>M-v</td><td>scroll-down-command</td></tr><tr><td>移动页面使得光标在中央/最上方/最下方</td><td>C-l</td><td>recenter-top-bottom</td></tr><tr><td>向后搜索</td><td>C-s</td><td>isearch-forward</td></tr><tr><td>向前搜索</td><td>C-r</td><td>isearch-backward</td></tr><tr><td>交换前后字符</td><td>C-t</td><td>transpose-chars</td></tr><tr><td>交换前后词</td><td>M-t</td><td>transpose-words</td></tr><tr><td>交换前后两行</td><td>C-x C-t</td><td>transpose-lines</td></tr><tr><td>在下方新建一行</td><td>C-o</td><td>open-line</td></tr><tr><td>删除连续空行为一个空行</td><td>C-x C-o</td><td>delete-blank-lines</td></tr><tr><td>将后面的词变为小写</td><td>M-l</td><td>downcase-word</td></tr><tr><td>将后面的词变为大写</td><td>M-u</td><td>upcase-word</td></tr><tr><td>将后面的词变为首字母大写</td><td>M-c</td><td>capitalize-word</td></tr><tr><td>放大字号</td><td>C-x C-=</td><td>text-scale-adjust</td></tr><tr><td>缩小字号</td><td>C-x C–</td><td>text-scale-adjust</td></tr><tr><td>重置字号</td><td>C-x C-0</td><td>text-scale-adjust</td></tr><tr><td>简要描述快捷键功能</td><td>C-h c</td><td>describe-key-briefly</td></tr><tr><td>描述快捷键功能</td><td>C-h k</td><td>describe-key</td></tr><tr><td>描述函数功能</td><td>C-h f</td><td>describe-function</td></tr><tr><td>描述变量</td><td>C-h v</td><td>describe-variable</td></tr><tr><td>列出含某一关键词的命令</td><td>C-h a</td><td>apropos-command</td></tr><tr><td>列出含某一关键词的符号的文档</td><td>C-h d</td><td>apropos-documentation</td></tr><tr><td>帮助的帮助</td><td>C-h ?</td><td>help-for-help</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;shortcut&quot;&gt;&lt;a href=&quot;#shortcut&quot; class=&quot;headerlink&quot; title=&quot;shortcut&quot;&gt;&lt;/a&gt;shortcut&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Emacs 功能键&lt;/th&gt;
&lt;th&gt;缩写&lt;/t</summary>
      
    
    
    
    <category term="emacs" scheme="https://www.willshirley.top/categories/emacs/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes vcluster</title>
    <link href="https://www.willshirley.top/2024/08/27/kubernetes%20vcluster/"/>
    <id>https://www.willshirley.top/2024/08/27/kubernetes%20vcluster/</id>
    <published>2024-08-27T09:15:26.000Z</published>
    <updated>2024-11-27T07:48:23.272Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>vCluster is a technology that creates virtual clusters within a physical Kubernetes cluster. These virtual clusters are fully functional and provide enhanced isolation and flexibility for multi-tenancy. Each vCluster operates independently, with its own API server and control plane, while sharing the underlying resources of the host cluster.</p><p>Kubernetes serves as the foundational platform for container orchestration, while vCluster enhances its capabilities by providing isolated, virtualized environments for multi-tenant applications. This relationship allows organizations to maximize resource utilization and maintain security across diverse teams and applications</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">+--------------------------------------------------+</span><br><span class="line">|                  Host Cluster                    |</span><br><span class="line">|                                                  |</span><br><span class="line">|  +--------------------------------------------+  |</span><br><span class="line">|  |            Kubernetes Control Plane        |  |</span><br><span class="line">|  |                                            |  |</span><br><span class="line">|  |  +-----------------+   +-----------------+ |  |</span><br><span class="line">|  |  |  API Server     |   |  Controller     | |  |</span><br><span class="line">|  |  |                 |   |  Manager        | |  |</span><br><span class="line">|  |  +-----------------+   +-----------------+ |  |</span><br><span class="line">|  |                                            |  |</span><br><span class="line">|  |  +-----------------+   +-----------------+ |  |</span><br><span class="line">|  |  |  Scheduler      |   |  Data Store     | |  |</span><br><span class="line">|  |  |                 |   |  (etcd)         | |  |</span><br><span class="line">|  |  +-----------------+   +-----------------+ |  |</span><br><span class="line">|  |                                            |  |</span><br><span class="line">|  |  +--------------------------------------+  |  |</span><br><span class="line">|  |  |          Worker Nodes                |  |  |</span><br><span class="line">|  |  |  (Pods running applications)         |  |  |</span><br><span class="line">|  |  +--------------------------------------+  |  |</span><br><span class="line">|  +--------------------------------------------+  |</span><br><span class="line">|                                                  |</span><br><span class="line">|  +--------------------------------------------+  |</span><br><span class="line">|  |                vCluster                    |  |</span><br><span class="line">|  |                                            |  |</span><br><span class="line">|  |  +-----------------+   +-----------------+ |  |</span><br><span class="line">|  |  |  Virtual API    |   |  Syncer         | |  |</span><br><span class="line">|  |  |  Server         |   |                 | |  |</span><br><span class="line">|  |  +-----------------+   +-----------------+ |  |</span><br><span class="line">|  |                                            |  |</span><br><span class="line">|  |  +-----------------+   +-----------------+ |  |</span><br><span class="line">|  |  |  Virtual        |   |  Virtual Data   | |  |</span><br><span class="line">|  |  |  Controller     |   |  Store          | |  |</span><br><span class="line">|  |  +-----------------+   +-----------------+ |  |</span><br><span class="line">|  +--------------------------------------------+  |</span><br><span class="line">+--------------------------------------------------+</span><br></pre></td></tr></table></figure><img src="/images/k8s/vcluster-architecture.png" style="width:100%"><h2 id="Key-Features-of-vCluster"><a href="#Key-Features-of-vCluster" class="headerlink" title="Key Features of vCluster"></a>Key Features of vCluster</h2><ul><li><strong>Isolation</strong>: Each virtual cluster has its own control plane, enhancing security and minimizing conflicts among teams.</li><li><strong>Resource Management</strong>: Virtual clusters manage their resources independently, allowing for efficient scaling and resource utilization.</li><li><strong>Multi-Tenancy</strong>: Supports multiple teams or tenants operating within the same physical infrastructure without interference.</li><li><strong>Flexibility</strong>: Can run on various Kubernetes distributions and supports different backing stores for data management.</li></ul><h2 id="Relationship-Between-Kubernetes-and-vCluster"><a href="#Relationship-Between-Kubernetes-and-vCluster" class="headerlink" title="Relationship Between Kubernetes and vCluster"></a>Relationship Between Kubernetes and vCluster</h2><ul><li><strong>Foundation</strong>: vCluster is built on top of Kubernetes, leveraging its capabilities to provide additional layers of abstraction and isolation.</li><li><strong>Resource Sharing</strong>: While vClusters share the physical resources of the host Kubernetes cluster, they maintain operational independence, allowing teams to work without affecting the global state of the host cluster.</li><li><strong>Enhanced Security</strong>: vClusters provide granular permissions and isolated control planes, which enhance security compared to standard Kubernetes namespaces.</li><li><strong>Operational Efficiency</strong>: By reducing the load on the host cluster’s API server and allowing independent management of resources, vClusters improve overall operational efficiency.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;vCluster is a technology that creates virtual clusters within a physical Kubernetes cluster. These virtual clusters are full</summary>
      
    
    
    
    <category term="Kubernetes" scheme="https://www.willshirley.top/categories/Kubernetes/"/>
    
    
    <category term="vcluster" scheme="https://www.willshirley.top/tags/vcluster/"/>
    
  </entry>
  
  <entry>
    <title>PlantUML</title>
    <link href="https://www.willshirley.top/2024/08/23/plantUML/"/>
    <id>https://www.willshirley.top/2024/08/23/plantUML/</id>
    <published>2024-08-23T02:49:55.000Z</published>
    <updated>2024-12-31T02:32:35.634Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TBD"><a href="#TBD" class="headerlink" title="TBD"></a>TBD</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;TBD&quot;&gt;&lt;a href=&quot;#TBD&quot; class=&quot;headerlink&quot; title=&quot;TBD&quot;&gt;&lt;/a&gt;TBD&lt;/h1&gt;</summary>
      
    
    
    
    <category term="PlantUML" scheme="https://www.willshirley.top/categories/PlantUML/"/>
    
    
    <category term="tool" scheme="https://www.willshirley.top/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>grpc point</title>
    <link href="https://www.willshirley.top/2024/08/15/grpc/"/>
    <id>https://www.willshirley.top/2024/08/15/grpc/</id>
    <published>2024-08-15T02:59:00.000Z</published>
    <updated>2024-08-15T03:03:49.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="proto-file"><a href="#proto-file" class="headerlink" title="proto file"></a>proto file</h1><blockquote><p>.proto file that defines the gRPC service and messages</p></blockquote><h1 id="compile"><a href="#compile" class="headerlink" title="compile"></a>compile</h1><blockquote><p>Use protoc to generate client and server code for both languages</p></blockquote><p>When you compile <code>.proto</code> files using <code>protoc</code>, it generates two Go files: <code>xxx.pb.go</code> and <code>xxx_grpc.pb.go</code>. These files are essential for both client and server implementations in a gRPC service. Here’s how they fit into the architecture:</p><h3 id="xxx-pb-go"><a href="#xxx-pb-go" class="headerlink" title="xxx.pb.go"></a><code>xxx.pb.go</code></h3><ul><li><strong>Purpose</strong>: Contains the Go representations of the protocol buffer messages defined in the <code>.proto</code> file.</li><li><strong>Usage</strong>: Used by both client and server to serialize and deserialize the messages.</li><li><strong>Contents</strong>: <ul><li>Go structs for each message type.</li><li>Methods for marshaling and unmarshaling these structs to and from binary format.</li></ul></li></ul><h3 id="xxx-grpc-pb-go"><a href="#xxx-grpc-pb-go" class="headerlink" title="xxx_grpc.pb.go"></a><code>xxx_grpc.pb.go</code></h3><ul><li><strong>Purpose</strong>: Contains the gRPC service definitions and client/server interfaces.</li><li><strong>Usage</strong>: <ul><li><strong>Server</strong>: Implements the server-side logic by embedding the generated server interface.</li><li><strong>Client</strong>: Uses the generated client interface to make RPC calls.</li></ul></li><li><strong>Contents</strong>:<ul><li>Server interface with methods corresponding to the RPCs defined in the <code>.proto</code> file.</li><li>Client interface with methods to call the RPCs.</li><li>Registration functions to register the server with a gRPC server.</li><li>Handler functions to handle incoming RPC calls.</li></ul></li></ul><h1 id="client-and-server"><a href="#client-and-server" class="headerlink" title="client and server"></a>client and server</h1><h3 id="Client-Code"><a href="#Client-Code" class="headerlink" title="Client Code"></a>Client Code</h3><ul><li><strong>References</strong>: Both <code>xxx.pb.go</code> and <code>xxx_grpc.pb.go</code>.</li><li><strong>Functionality</strong>: <ul><li>Uses the client interface from <code>xxx_grpc.pb.go</code> to make RPC calls.</li><li>Constructs request messages using the structs from <code>xxx.pb.go</code>.</li></ul></li></ul><h3 id="Server-Code"><a href="#Server-Code" class="headerlink" title="Server Code"></a>Server Code</h3><ul><li><strong>References</strong>: Both <code>xxx.pb.go</code> and <code>xxx_grpc.pb.go</code>.</li><li><strong>Functionality</strong>: <ul><li>Implements the server interface from <code>xxx_grpc.pb.go</code>.</li><li>Handles incoming requests and constructs response messages using the structs from <code>xxx.pb.go</code>.</li></ul></li></ul><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p>In the provided example:</p><ul><li><p><strong>Client Code</strong> (<code>examples/helloworld/greeter_client/main.go</code>):</p><ul><li>Uses <code>pb.NewGreeterClient</code> from <code>helloworld_grpc.pb.go</code> to create a client.</li><li>Constructs <code>HelloRequest</code> messages using the struct from <code>helloworld.pb.go</code>.</li></ul></li><li><p><strong>Server Code</strong> (<code>examples/helloworld/greeter_server/main.go</code>):</p><ul><li>Implements <code>GreeterServer</code> interface from <code>helloworld_grpc.pb.go</code>.</li><li>Constructs <code>HelloReply</code> messages using the struct from <code>helloworld.pb.go</code>.</li></ul></li></ul><p><strong>This architecture ensures that both client and server have a consistent and type-safe way to communicate using the protocol buffer messages and gRPC service definitions.</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;proto-file&quot;&gt;&lt;a href=&quot;#proto-file&quot; class=&quot;headerlink&quot; title=&quot;proto file&quot;&gt;&lt;/a&gt;proto file&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;.proto file that defines </summary>
      
    
    
    
    <category term="grpc" scheme="https://www.willshirley.top/categories/grpc/"/>
    
    
    <category term="point" scheme="https://www.willshirley.top/tags/point/"/>
    
  </entry>
  
  <entry>
    <title>code style</title>
    <link href="https://www.willshirley.top/2024/08/14/code%20styple/"/>
    <id>https://www.willshirley.top/2024/08/14/code%20styple/</id>
    <published>2024-08-14T02:51:25.000Z</published>
    <updated>2024-08-14T03:37:16.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="functional-programming"><a href="#functional-programming" class="headerlink" title="functional programming"></a>functional programming</h1><h2 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h2><p>Go (Golang) supports functional programming concepts, although it is primarily an imperative language. Here are some key functional programming features in Go:</p><h3 id="1-First-Class-Functions"><a href="#1-First-Class-Functions" class="headerlink" title="1. First-Class Functions"></a>1. First-Class Functions</h3><p>Functions in Go are first-class citizens, meaning they can be assigned to variables, passed as arguments, and returned from other functions.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> op <span class="function"><span class="keyword">func</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span> <span class="title">int</span></span></span><br><span class="line">    op = add</span><br><span class="line">    fmt.Println(op(<span class="number">1</span>, <span class="number">2</span>)) <span class="comment">// Outputs: 3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-Higher-Order-Functions"><a href="#2-Higher-Order-Functions" class="headerlink" title="2. Higher-Order Functions"></a>2. Higher-Order Functions</h3><p>Functions that take other functions as arguments or return functions are called higher-order functions.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">apply</span><span class="params">(op <span class="keyword">func</span>(<span class="keyword">int</span>, <span class="keyword">int</span>)</span> <span class="title">int</span>, <span class="title">a</span>, <span class="title">b</span> <span class="title">int</span>) <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> op(a, b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    add := <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123; <span class="keyword">return</span> a + b &#125;</span><br><span class="line">    fmt.Println(apply(add, <span class="number">1</span>, <span class="number">2</span>)) <span class="comment">// Outputs: 3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-Closures"><a href="#3-Closures" class="headerlink" title="3. Closures"></a>3. Closures</h3><p>Go supports closures, which are functions that capture the variables from their surrounding scope.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">incrementer</span><span class="params">()</span> <span class="title">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    i := <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">        i++</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    inc := incrementer()</span><br><span class="line">    fmt.Println(inc()) <span class="comment">// Outputs: 1</span></span><br><span class="line">    fmt.Println(inc()) <span class="comment">// Outputs: 2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-Pure-Functions"><a href="#4-Pure-Functions" class="headerlink" title="4. Pure Functions"></a>4. Pure Functions</h3><p>Pure functions are functions that do not have side effects and return the same result given the same arguments.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(add(<span class="number">1</span>, <span class="number">2</span>)) <span class="comment">// Outputs: 3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-Immutability"><a href="#5-Immutability" class="headerlink" title="5. Immutability"></a>5. Immutability</h3><p>While Go does not enforce immutability, you can design your functions to avoid mutating state.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addToSlice</span><span class="params">(slice []<span class="keyword">int</span>, value <span class="keyword">int</span>)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">    newSlice := <span class="built_in">append</span>(slice, value)</span><br><span class="line">    <span class="keyword">return</span> newSlice</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    original := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">    newSlice := addToSlice(original, <span class="number">4</span>)</span><br><span class="line">    fmt.Println(original) <span class="comment">// Outputs: [1, 2, 3]</span></span><br><span class="line">    fmt.Println(newSlice) <span class="comment">// Outputs: [1, 2, 3, 4]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-Functional-Composition"><a href="#6-Functional-Composition" class="headerlink" title="6. Functional Composition"></a>6. Functional Composition</h3><p>You can compose functions to build more complex operations.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">multiply</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a * b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">compose</span><span class="params">(f, g <span class="keyword">func</span>(<span class="keyword">int</span>, <span class="keyword">int</span>)</span> <span class="title">int</span>) <span class="title">func</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">        <span class="keyword">return</span> f(g(a, b), b)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    addThenMultiply := compose(multiply, add)</span><br><span class="line">    fmt.Println(addThenMultiply(<span class="number">2</span>, <span class="number">3</span>)) <span class="comment">// Outputs: 15 (5 * 3)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>These features allow you to use functional programming techniques in Go, making your code more modular, reusable, and easier to reason about.</p><h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><ul><li>函数式程序更倾向于铺设调节数据流转换的管道结构，而可变的命令式程序更倾向于迭代地处理一个个类型对象</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;functional-programming&quot;&gt;&lt;a href=&quot;#functional-programming&quot; class=&quot;headerlink&quot; title=&quot;functional programming&quot;&gt;&lt;/a&gt;functional programmi</summary>
      
    
    
    
    <category term="code" scheme="https://www.willshirley.top/categories/code/"/>
    
    
    <category term="style" scheme="https://www.willshirley.top/tags/style/"/>
    
  </entry>
  
</feed>
